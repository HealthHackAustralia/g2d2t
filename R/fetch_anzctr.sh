#!/bin/sh
curl 'http://www.anzctr.org.au/TrialSearch.aspx?searchTxt=&conditionCategory=Cancer&conditionCode=&interventionCodeOperator=OR&interventionCode=&ageGroup=All&healthyVolunteers=All&gender=All&allocationToIntervention=&dateOfRegistrationFrom=&dateOfRegistrationTo=&trialStartDateFrom=&trialStartDateTo=&recruitmentCountryOperator=OR&countryOfRecruitment=Australia%7cNew+Zealand&primarySponsorType=&fundingSource=&healthCondition=&interventionDescription=&phase=&recruitmentStatus=&registry=ALL&ethicsReview=&studyType=&isBasic=False&postcode=&distance=' \
-XPOST \
-H 'Referer: http://www.anzctr.org.au/TrialSearch.aspx?searchTxt=&conditionCategory=Cancer&conditionCode=&interventionCodeOperator=OR&interventionCode=&ageGroup=All&healthyVolunteers=All&gender=All&allocationToIntervention=&dateOfRegistrationFrom=&dateOfRegistrationTo=&trialStartDateFrom=&trialStartDateTo=&recruitmentCountryOperator=OR&countryOfRecruitment=Australia%7CNew%20Zealand&primarySponsorType=&fundingSource=&healthCondition=&interventionDescription=&phase=&recruitmentStatus=&registry=ALL&ethicsReview=&studyType=&isBasic=False&postcode=&distance=' \
-H 'Content-Type: application/x-www-form-urlencoded' \
-H 'Origin: http://www.anzctr.org.au' \
-H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \
-H 'DNT: 1' \
-H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/604.3.5 (KHTML, like Gecko) Version/11.0.1 Safari/604.3.5' \
-H 'Upgrade-Insecure-Requests: 1' \
--data 'ctl00_body_ToolkitScriptManager1_HiddenField=%3B%3BAjaxControlToolkit%2C+Version%3D3.5.60623.0%2C+Culture%3Dneutral%2C+PublicKeyToken%3D28f01b0e84b6d53e%3Aen-US%3A834c499a-b613-438c-a778-d32ab4976134%3A475a4ef5%3A5546a2b%3Ad2e10b12%3Aeffe2a26%3Af9e9a939&__EVENTTARGET=&__EVENTARGUMENT=&__VIEWSTATE=%%2FaWQ9MzcxMzQyJmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzcxMzQyLnBkZj90PTI5N2RkAgcPDxYCHwIFBjM3MTM0MmRkAgkPDxYCHwIFDjEyNjE3MDAxNTE2MzcwZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMq8BQSBQaWxvdCBzdHVkeSB0byBkZXRlcm1pbmUgd2hldGhlciBNb250ZWx1a2FzdCBhZGRlZCB0byBDeUJvckQgKEJvcnRlem9taWIvQ3ljbG9waG9zcGhhbWlkZS9EZXhhbWV0aGFzb25lKSBpbmR1Y2VzIHJlc3BvbnNlcyBpbiBwYXRpZW50cyBub3QgcmVzcG9uZGluZyB0byBDeUJvckQgY2hlbW90aGVyYXB5LhZBY3RpdmUsIG5vdCByZWNydWl0aW5nB2luZm8tbGkMTm90IHJlcXVpcmVkB2luZm8tbGkaUmV0cm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjMxLzEwLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwDE5vdCByZXF1aXJlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE1MTYzNzAPMzEgT2N0b2JlciAyMDE3BHNob3cQTXVsdGlwbGUgTXllbG9tYQRzaG93CUF1c3RyYWxpYQRzaG93D05ldyBTb3V0aCBXYWxlcwRzaG93BHNob3cWQWN0aXZlLCBub3QgcmVjcnVpdGluZwNuL2EEc2hvdwxOb3QgcmVxdWlyZWSOCVRoaXMgcGlsb3Qgc3R1ZHkgYWltcyB0byB0ZXN0IHdoZXRoZXIgTW9udGVsdWthc3QgIGFuZCBHZW1maWJyb3ppbCB3aGVuIGFkZGVkIHRvICBDeUJvckQgY2hlbW90aGVyYXB5IChCb3J0ZXpvbWliIEN5Y2xvcGhvc3BoYW1pZGUgYW5kIERleGFtZXRoYXNvbmUgIDI4IGRheSBjeWNsZSkgaW5kdWNlcyByZXNwb25zZXMgaW4gcGF0aWVudHMgbm90IHJlc3BvbmRpbmcgdG8gdGhpcyBjaGVtb3RoZXJhcHkuIDxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhZ2VkIDE4LTgwIHllYXJzIHdpdGggcHJvZ3Jlc3NpdmUgbXVsdGlwbGUgbXllbG9tYSBhZnRlciBhdCBsZWFzdCA4IHdlZWtzICh0d28gY3ljbGVzKSBvZiB0cmVhdG1lbnQgd2l0aCBhIHN0YW5kYXJkIEJvcnRlem9taWIvQ3ljbG9waG9zcGhhbWlkZS9EZXhhbWV0aGFzb25lIGNoZW1vdGhlcmFweS4gPGJyIC8%2BPGJyIC8%2BU3R1ZHkgZGV0YWlsczxiciAvPkEgdG90YWwgb2YgNiBwYXRpZW50cyB3aWxsIGJlIGVucm9sbGVkIHByaW9yIHRvIGEgZGVjaXNpb24gdG8gZXhwYW5kIG9yIHNodXQgZG93biB0aGUgdHJpYWwsIGRlcGVuZGluZyBvbiB0b3hpY2l0eSBhbmQgcmVzcG9uc2UuIFBhcnRpY2lwYW50cyB3aWxsIHJlY2VpdmUgZnVydGhlciB0d28gY3ljbGVzIG9mIEN5Qm9yRCBjaGVtb3RoZXJhcHkgcmVnaW1lbiB3aXRoIHRoZSBhZGRpdGlvbiBvZiBNb250ZWx1a2FzdC4gYW5kIEdlbWZpYnJvemlsLi48YnIgLz48YnIgLz5QYXRpZW50cyB3aWxsIGJlIGFibGUgdG8gY29udGludWUgTW9udGVsdWthc3QgYW5kIEdlbWZpYnJvemlsIGZvbGxvd2luZyBjb21wbGV0aW9uIGlmIGEgcmVzcG9uc2UgaXMgb2JzZXJ2ZWQgZGVwZW5kaW5nIG9uIHNpZGUgZWZmZWN0czxiciAvPjxiciAvPlRoZSBoeXBvdGhlc2lzIGlzIHRoYXQgTW9udGVsdWthc3Qgd2hpY2ggaXMgYW4gZXh0cmVtZWx5IHdlbGwgdG9sZXJhdGVkIG1lZGljYXRpb24gdXNlZCB0byB0cmVhdCBBc3RobWEgaW4gYWxsIGFnZSBncm91cHMsIHdpbGwgc2Vuc2l0aXplIHBhdGllbnTigJlzIHR1bW91ciB0byBjaGVtb3RoZXJhcHkgd2hpY2ggd2FzIHByZXZpb3VzbHkgc2hvd24gdG8gYmUgcmVzaXN0YW50IHRvIHRoZSBzYW1lIHRoZXJhcHkurANQYXRpZW50cyB3aXRoIHByb2dyZXNzaXZlIGRpc2Vhc2UgYWZ0ZXIgYXQgbGVhc3QgOCB3ZWVrcyBvZiB0cmVhdG1lbnQgd2l0aCBhIHN0YW5kYXJkICBhY2NlcHRlZCBNdWx0aXBsZSBNeWVsb21hIHJlZ2ltZW4sIHdobyBoYXZlIGV4aGF1c3RlZCBhbGwgb3RoZXIgdGhlcmFwaWVzLiBQYXRpZW50cyB3aWxsIGhhdmUgdG8gaGF2ZSByZXNwb25zZSBkYXRhIGZvciB0aGVpciBwcmV2aW91cyB0cmVhdG1lbnQgd2l0aCBWZWxjYWRlL0N5Y2xvcGhvc3BoYW1pZGUvRGV4YW1ldGhhc29uZS48YnIgLz48YnIgLz5QYXRpZW50cyB3aG8gc2hvdyBsZXNzIHRoYW4gcGFydGlhbCByZXNwb25zZSBhdCA4IHdlZWtzIG9mIEJvcnRlem9taWIvQ3ljbG9waG9zcGhhbWlkZS9EZXhhbWV0aGFzb25lICBjaGVtb3RoZXJhcHkuIFRoaXMgaXMgMjAlIG9mIHBhdGllbnRzLggxOCBZZWFycwg4MCBZZWFycxZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzrwFQYXRpZW50IHNob3dpbmcgYXQgbGVhc3QgYSAgcGFydGlhbCAgcmVzcG9uc2UgdG8gbGFzdCB0cmVhdG1lbnQgcmVnaW1lbiBmb3IgbXVsdGlwbGUgbXllbG9tYS4gUHJlZ25hbmN5LjxiciAvPkVDT0cgc3RhdHVzIDMgb3IgNDxiciAvPlBhdGllbnRzIHVuYWJsZSB0byBnaXZlIGluZm9ybWVkIGNvbnNlbnQuDmV4cGFuZGFibGUtYm94CkluZGl2aWR1YWwZRHIgU3RlcGhlbiBLZW5uZXRoIE8nTWFyYWdQcml2YXRlIHByYWN0aWNlPGJyIC8%2BTmV3IEVuZ2xhbmQgTm9ydGh3ZXN0IEhhZW1hdG9sb2d5LjxiciAvPjQwIFBpcGVyIHN0PGJyIC8%2BVGFtd29ydGgsIE5TVyAyMzQwPGJyIC8%2BCUF1c3RyYWxpYQJEcg5TdGVwaGVuIE8nTWFyYTtUYW1hcmEgQ29uc3VsdGluZyByb29tczxiciAvPjQwIFBpcGVyIHN0PGJyIC8%2BVGFtd29ydGggMjM0MAlBdXN0cmFsaWEOKzYxIDIgNjc2NjMyOTkRc29tYXJhQHRwZy5jb20uYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzcxMzQyLnBkZj90PTI5N2RkAi8PPCsABAEADxYCHwNnZGQCAw9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczODQ0JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczODQ0LnBkZj90PTI5N2RkAgcPDxYCHwIFBjM3Mzg0NGRkAgkPDxYCHwIFDjEyNjE3MDAxNDk2MzAzZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMokBRGV0ZXJtaW5pbmcgbGV2ZWxzIG9mIENpcmN1bGF0aW5nIFR1bW91ciBDZWxscyAoQ1RDcykgaW4gYmxvb2QgZm9yIGVhcmx5IGRldGVjdGlvbiBhbmQgcmVhbC10aW1lIHRyZWF0bWVudCBtb25pdG9yaW5nIGluIGNhbmNlciBwYXRpZW50cy4STm90IHlldCByZWNydWl0aW5nB2luZm8tbGkRTm90IHlldCBzdWJtaXR0ZWQHaW5mby1saStQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQ8YnIgLz4ocHJvdmlzaW9uYWwpMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoyNC8xMC8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMBFOb3QgeWV0IHN1Ym1pdHRlZApVcCB0byBkYXRlFEFDVFJOMTI2MTcwMDE0OTYzMDNwDzI0IE9jdG9iZXIgMjAxNwRzaG93BkNhbmNlcgRzaG93SUF1c3RyYWxpYSwgU2luZ2Fwb3JlLCBDaGluYSwgS29yZWEsIFJlcHVibGljIE9mLCBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EEc2hvdxRRdWVlbnNsYW5kLCBUYXNtYW5pYQRzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nDzAxIEphbnVhcnkgMjAxOARzaG93EU5vdCB5ZXQgc3VibWl0dGVkkQhUaGUgYWltIG9mIHRoaXMgcHJvamVjdCBpcyAoMSkgdG8gZGV0ZXJtaW5lIGVmZmVjdGl2ZW5lc3Mgb2YgbW9uaXRvcmluZyBhIGNhbmNlciBwYXRpZW504oCZcyByZXNwb25zZSB0byBoaXMvaGVyIHRyZWF0bWVudCBieSBkZXRlY3RpbmcgYW5kIGNvdW50aW5nIHRoZSBDaXJjdWxhdGluZyBUdW1vdXIgQ2VsbHMgKENUQ3MpIGluIHRoZSBibG9vZHN0cmVhbSwgYW5kICgyKSB0byBlc3RhYmxpc2ggdGhlIHJlbGF0aW9uc2hpcCBvZiB0aGUgbnVtYmVyIG9mIENUQ3MgaW4gcGF0aWVudHMgYmVmb3JlIGFuZCBhZnRlciBjYW5jZXIgZGlhZ25vc2lzLjxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhZ2VkIDE4IHllYXJzIG9yIG92ZXIgYW5kIGFyZSBhYm91dCB0byBzdGFydCB0cmVhdG1lbnQgZm9yIGNhbmNlciAoUGFydCAxKSBvciBpZiB5b3UgYSBoZWFsdGh5IGluZGl2aWR1YWwgbm90IHByZXZpb3VzbHkgZGlhZ25vc2VkIHdpdGggY2FuY2VyIChQYXJ0IDIpLiA8YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BRm9yIGJvdGggZ3JvdXBzLCBibG9vZCBzYW1wbGVzIHdpbGwgYmUgY29sbGVjdGVkIGF0IHZhcmlvdXMgdGltZXBvaW50cyB0byBhc3Nlc3MgQ1RDcyBudW1iZXIuIEluIHBhcnRpY2lwYW50cyBjb21tZW5jaW5nIGNhbmNlciB0cmVhdG1lbnQgdGhpcyB3aWxsIGJlIG92ZXIgYSAxMiBtb250aCBwZXJpb2Qgd2hpbGUgaGVhbHRoeSBpbmRpdmlkdWFscyB3aWxsIGJlIGFzc2Vzc2VkIG9uY2UgYSB5ZWFyIGZvciAxMCB5ZWFycy4gPGJyIC8%2BPGJyIC8%2BVXBvbiB0aGUgY29tcGxldGlvbiBvZiB0aGlzIHN0dWR5LCB3ZSB3aWxsIGJlIGFibGUgdG8gZXZhbHVhdGUgdGhlIGZlYXNpYmlsaXR5IG9mIHVzaW5nIENUQ3MgbnVtYmVyIGFzIGFuIGluZGljYXRvciBvciBtYXJrZXIgZm9yIGVhcmx5IGNhbmNlciBkZXRlY3Rpb24gYW5kIGZvciBjYW5jZXIgdHJlYXRtZW50IG1vbml0b3JpbmcgZm9yIGNhbmNlciBwYXRpZW50cy7kAlRyZWF0bWVudCBNb25pdG9yaW5nOjxiciAvPlBhdGllbnRzIGRpYWdub3NlZCB3aXRoIGNhbmNlciB3aG8gd2lsbCBiZSBzdGFydGluZyB0cmVhdG1lbnQuIFRyZWF0bWVudCBtYXkgaW5jbHVkZSBjaGVtb3RoZXJhcHksIHJhZGlvdGhlcmFweSwgaW1tdW5vdGhlcmFweSBhbmQgb3RoZXIgdHJlYXRtZW50cyBhcyBwcmVzY3JpYmVkIGJ5IHRoZSB0cmVhdGluZyBwaHlzaWNpYW4uPGJyIC8%2BPGJyIC8%2BRWFybHkgRGV0ZWN0aW9uOjxiciAvPkhlYWx0aHkgaW5kaXZpZHVhbHMgb3IgaW5kaXZpZHVhbHMgd2l0aCBoaXN0b3J5IG9mIGZhbWlseSBjYW5jZXIgYW5kIG90aGVyIHByZWRpc3Bvc2l0aW9ucyB0byBjYW5jZXIuPGJyIC8%2BCDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzUkNhbmNlciBwYXRpZW50cyB3aG8gYWxyZWFkeSBoYXZlIGNvbXBsZXRlZCB0aGVpciB0cmVhdG1lbnQgbW9yZSB0aGFuIDYgbW9udGhzIGFnby4OZXhwYW5kYWJsZS1ib3gaQ29tbWVyY2lhbCBzZWN0b3IvSW5kdXN0cnkOU3Vydm9uIFB0ZSBMdGQsODEgVWJpIEF2ZW51ZSA0ICMwNi0xMDxiciAvPlNpbmdhcG9yZSA0MDg4MzAJU2luZ2Fwb3JlBE1pc3MKRGVuaXNlIExvb0BTdXJ2b24gUHRlIEx0ZDxiciAvPjgxIFViaSBBdmVudWUgNCAjMDYtMTA8YnIgLz5TaW5nYXBvcmUgNDA4ODMwCVNpbmdhcG9yZQwrNjUgNjUzODI4MzgbZGVuaXNlQHN1cnZvbmNhbmNlcmxhYnMuY29tBmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzg0NC5wZGY%2FdD0yOTdkZAIvDzwrAAQBAA8WAh8DZ2RkAgUPZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3MTk4NSZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MTk4NS5wZGY%2FdD0yOTdkZAIHDw8WAh8CBQYzNzE5ODVkZAIJDw8WAh8CBQ4xMjYxNzAwMTQ4MDM3MGRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTKAAlRoZSBidWNjYWwgYWRtaW5pc3RyYXRpb24gb2YgYSBDYW5uYWJpcyBzYXRpdmEgTC4uL0Nhbm5hYmlzIGluZGljYSBMLiBleHRyYWN0IGFzIGFuIGFkanVuY3QgdG8gb3Bpb2lkIGFuYWxnZXNpYSBmb3IgdGhlIG1hbmFnZW1lbnQgb2YgaW50cmFjdGFibGUgcGFpbiBpbiBwYXRpZW50cyBkaWFnbm9zZWQgd2l0aCBhZHZhbmNlZCBjYW5jZXI6IGEgc2FmZXR5LCB0b2xlcmFiaWxpdHkgYW5kIGV4cGxvcmF0b3J5IGVuZC1wb2ludCBwaWxvdCBzdHVkeS4STm90IHlldCByZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRhQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjE5LzEwLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTQ4MDM3MA8xOSBPY3RvYmVyIDIwMTcEc2hvdwZDYW5jZXIEc2hvdwlBdXN0cmFsaWEEc2hvdw9OZXcgU291dGggV2FsZXMEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZxAwNSBGZWJydWFyeSAyMDE4BHNob3cIQXBwcm92ZWSODVRoZSBhaW0gb2YgdGhpcyBwcm9qZWN0IGlzIHRvIGNvbmR1Y3QgYSBzYWZldHksIHRvbGVyYWJpbGl0eSBhbmQgZXhwbG9yYXRvcnkgZW5kLXBvaW50IHBpbG90IHN0dWR5IGFzc2Vzc2luZyB0aGUgYWRtaW5pc3RyYXRpb24gb2YgYSBjYW5uYWJpcyBleHRyYWN0IGFzIGFuIGFkanVuY3QgdG8gb3Bpb2lkIGFuYWxnZXNpYSBmb3IgdGhlIG1hbmFnZW1lbnQgb2YgaW50cmFjdGFibGUgcGFpbiBpbiBwYXRpZW50cyB3aXRoIGEgcG9zaXRpdmUgZGlhZ25vc2lzIG9mIGFkdmFuY2VkIGNhbmNlci4gPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYXJlIGFnZWQgMTggeWVhcnMgb3Igb3ZlciBhbmQgaGF2ZSBiZWVuIGRpYWdub3NlZCB3aXRoIGFuIGluY3VyYWJsZSBtYWxpZ25hbmN5IChTdGFnZSAxIGFuZCBTdGFnZSAyKSBhbmQgcmVwb3J0ZWQgZXhwZXJpZW5jaW5nIG1vZGVyYXRlIHRvIHNldmVyZSBwYWluIChTdGFnZSAyIG9ubHkpLiA8YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BVGhpcyBzdHVkeSB3aWxsIGJlIGNvbmR1Y3RlZCBpbiB0d28gc3RhZ2VzLiBEdXJpbmcgdGhlIGZpcnN0IHN0YWdlLCBwYXJ0aWNpcGFudHMgd2lsbCBiZSBlbnJvbGxlZCBhbmQgcmVtYWluIHVuZGVyIGNsaW5pY2FsIHN1cGVydmlzaW9uIGluIGhvc3BpdGFsIGZvciA0OCBob3Vycy4gT24gZGF5IDEsIGEg4oCYc3RhbmRhcmQgZG9zZeKAmSBvZiAyLjYgbWcgZGVsdGEtOS10ZXRyYWh5ZHJvY2FubmFiaW5vbCAoVEhDKSBhbmQgMi40IG1nIGNhbm5hYmlkaW9sIChDQkQpIGluIDAuMyBtTCB3aWxsIGJlIGFkbWluaXN0ZXJlZCB1c2luZyBhIGJ1Y2NhbCBzcHJheSBkZWxpdmVyeSBzeXN0ZW0uIE9uIGRheSAyLCB0aHJlZSDigJhzdGFuZGFyZCBkb3Nlc%2BKAmSB3aWxsIGJlIGFkbWluaXN0ZXJlZC4gUGFydGljaXBhbnRzIHdpbGwgYmUgbW9uaXRvcmVkIGZvciBhbnkgYWR2ZXJzZSBldmVudHMgZHVyaW5nIGhvc3BpdGFsIHN0YXkuIDxiciAvPjxiciAvPlN0YWdlIDIgd2lsbCBpbnZvbHZlIGEgZG9zZSBlc2NhbGF0aW9uIG92ZXIgNyBkYXlzIGNvbW1lbmNpbmcgd2l0aCBvbmUg4oCYc3RhbmRhcmQgZG9zZeKAmSBldmVyeSA0IGhvdXJzIGFuZCB0aHJlZSDigJhzdGFuZGFyZCBkb3Nlc%2BKAmSBldmVyeSA0IGhvdXJzIGJ5IGRheSA3IHdoaWNoIGFyZSB0aGVuIG1haW50YWluZWQgdW50aWwgZGF5IDE1LiBTZXZlcmFsIGFzc2Vzc21lbnRzIGFyZSBjb25kdWN0ZWQgb3ZlciBhZG1pbmlzdHJhdGlvbiBwZXJpb2QgYW5kIG9uIGRheSAzMCBwb3N0IGludGVydmVudGlvbiBjb21tZW5jZW1lbnQuIDxiciAvPjxiciAvPlRoaXMgc3R1ZHkgbWF5IGdyZWF0bHkgY29udHJpYnV0ZSB0byB0aGUgcmVzZWFyY2ggaW50byB0aGUgcGhhcm1hY29raW5ldGljIGFuZCBtZWRpY2luYWwgcHJvcGVydGllcyBvZiB0aGUgQ2FubmFiaXMgcGxhbnQsIGluIHBhcnRpY3VsYXIgQy4gc2F0aXZhIEwuIGFuZCBDLiBpbmRpY2EgTC4gc3RyYWlucy4gVGhlIHRyZWF0bWVudCBtYXkgYmUgYmVuZWZpY2lhbCBmb3IgdGhlIHRyZWF0bWVudCBvZiBpbnRyYWN0YWJsZSBwYWluIGluIGNhbmNlciBwYXRpZW50cyBpbiBjb25qdW5jdGlvbiB3aXRoIHRoZSBjb252ZW50aW9uYWwgb3Bpb2lkIHRyZWF0bWVudC7FHEluY2x1c2lvbiBDcml0ZXJpYSBTdGFnZSAxPGJyIC8%2BMS4JUGF0aWVudCBhZ2VkIGdyZWF0ZXIgdGhhbiAxOCB5ZWFycy4JCSAJCQkJIDxiciAvPjIuCVBhdGllbnQgYWJsZSB0byBnaXZlIGluZm9ybWVkIGNvbnNlbnQgYW5kIGNvbXBseSB3aXRoIHN0dWR5IHByb2NlZHVyZXMuCTxiciAvPjMuCVBhdGllbnQgdGhhdCBoYXMgYmVlbiBkaWFnbm9zZWQgd2l0aCBhbiBpbmN1cmFibGUgbWFsaWduYW5jeS4JCQk8YnIgLz40LglQYXRpZW50IHdpbGxpbmcgYW5kIGFibGUgdG8gcmVjZWl2ZSBhbiBvcm8tYnVjY2FsIG11Y29zYSBkZWxpdmVyZWQgbWVkaWNpbmUuCTxiciAvPjUuCVBhdGllbnQgd2lsbGluZyB0byB0YWtlIGEgbWVkaWNhdGlvbiwgd2hpY2ggbWF5IGV4aGliaXQgcHN5Y2hvYWN0aXZlIGVmZmVjdHMuCTxiciAvPjYuCVBhdGllbnQgYWdyZWVzIHRvIGFic3RhaW4gZnJvbSB1c2luZyBjYW5uYWJpcyBtZWRpY2luZXMgb3RoZXIgdGhhbiB0aGUgZXhwZXJpbWVudGFsIGRydWcgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgY2xpbmljYWwgdHJpYWwuIAkJCQk8YnIgLz43LglQYXRpZW50IGFncmVlcyB0byBub3QgcGFydGFrZSBpbiBhbnkgb3RoZXIgaW50ZXJ2ZW50aW9uYWwgY2xpbmljYWwgdHJlYXRtZW50cyBvdGhlciB0aGFuIHRoZSBvbmVzIHRoYXQgdGhlIHRyZWF0aW5nIGNsaW5pY2FsIHRlYW0gYXJlIGFscmVhZHkgYXdhcmUgb2YgZm9yIHRoZSBkdXJhdGlvbiBvZiB0aGUgc3R1ZHkuCTxiciAvPjguCVBhdGllbnQgY29uc2VudHMgdG8gcHJvdmlkZSBibG9vZCBzYW1wbGVzIGZvciBhbmFseXNpcyB0aHJvdWdob3V0IHRoZSBkdXJhdGlvbiBvZiB0aGUgY2xpbmljYWwgdHJpYWwsIHdoZXRoZXIgcGFydGljaXBhdGlvbiBpcyBmb3IgU3RhZ2UgMSBvbmx5IGFuZCBvciBTdGFnZSAyLjxiciAvPjkuCVBhdGllbnQgYWdyZWVzIHRvIGRpc2Nsb3NlIHRoYXQgdGhleSBhcmUgcmVjZWl2aW5nIGFuIGV4cGVyaW1lbnRhbCBtZWRpY2F0aW9uIHRvIHRyZWF0aW5nIG1lZGljYWwgcHJvZmVzc2lvbmFscyB3aG8gbWlnaHQgYmUgdW5hd2FyZSBvZiB0aGlzIGZhY3QuIAkJCTxiciAvPjEwLglGZW1hbGUgb2YgY2hpbGRiZWFyaW5nIHBvdGVudGlhbCwgYWdyZWVzIHRvIHVzZSBhbiBlZmZlY3RpdmUgZm9ybSBvZiBiaXJ0aCBjb250cm9sIGR1cmluZyB0aGUgc3R1ZHkgcGFydGljaXBhdGlvbi4JCQkJCSA8YnIgLz4xMS4JUGF0aWVudCBjb25zZW50cyB0byBoYXZpbmcgYSBiYXNlbGluZSB0ZXN0IGZvciBwcmVnbmFuY3kgaWYgYXBwbGljYWJsZS4JPGJyIC8%2BMTIuCVBhdGllbnQgY29uc2VudHMgdG8gaGF2aW5nIGJhc2VsaW5lIHRlc3RzIGZvciByZWNlbnQgaWxsaWNpdCBzdWJzdGFuY2UgdXNlLjxiciAvPjEzLglQYXRpZW50IGFncmVlcyB0byBzdGlsbCB0YWtlIHJlZ3VsYXIgZG9zZXMgb2YgYW4gb3Bpb2lkIGFuYWxnZXNpYyBhcyBwcmVzY3JpYmVkLiBQYXRpZW50IHNob3VsZCBub3QgY2Vhc2Ugb3Bpb2lkIG1lZGljYXRpb25zLjxiciAvPjxiciAvPkluY2x1c2lvbiBDcml0ZXJpYSBTdGFnZSAyPGJyIC8%2BMS4JUGF0aWVudCBhZ2VkIGdyZWF0ZXIgdGhhbiAxOCB5ZWFycy4JCSAJCQkJIDxiciAvPjIuCVBhdGllbnQgYWJsZSB0byBnaXZlIGluZm9ybWVkIGNvbnNlbnQgYW5kIGNvbXBseSB3aXRoIHN0dWR5IHByb2NlZHVyZXMuCTxiciAvPjMuCVBhdGllbnQgdGhhdCBoYXMgYmVlbiBkaWFnbm9zZWQgd2l0aCBhbiBpbmN1cmFibGUgbWFsaWduYW5jeS4JCQk8YnIgLz40LglQYXRpZW50IHJlcG9ydGVkIGV4cGVyaWVuY2luZyBtb2RlcmF0ZSB0byBzZXZlcmUgcGFpbi48YnIgLz41LglQYXRpZW50IGhhcyBiZWVuIHVzaW5nIHN0cm9uZyBvcGlvaWQgYW5hbGdlc2ljcyBmb3IgYXQgbGVhc3Qgb25lIHdlZWsgdG8gcmVsaWV2ZSBwYWluIGFzc29jaWF0ZWQgd2l0aCBpbmN1cmFibGUgbWFsaWduYW5jeS4gT25lIHdlZWsgcHJpb3IgdXNlIG9mIG9waWF0ZSB0cmVhdG1lbnQgaXMgc3VmZmljaWVudCBkdXJhdGlvbiBiZWNhdXNlIGl0IHdvdWxkIHJlcHJlc2VudCBlc3RhYmxpc2hlZCBvcGlvaWQgdHJlYXRtZW50IGFuZCBtb3N0IHBhdGllbnRzIHdvdWxkIGhhdmUgZGV2ZWxvcGVkIHRvbGVyYW5jZSBhZnRlciBvbmUgd2VlaywgZXNwZWNpYWxseSBpZiBpdCBpcyBnaXZlbiBhcm91bmQgdGhlIGNsb2NrIGF0IGEgdG90YWwgZGFpbHkgZG9zZSBvZiBhdCBsZWFzdCA2MCBtZyBvZiBvcmFsIG1vcnBoaW5lIG9yIGVxdWl2YWxlbnQuPGJyIC8%2BNi4JUGF0aWVudCByZXBvcnQgcGFpbiBzZXZlcml0eSB0aGF0IGlzIHNjb3JlZCB0byBiZSBncmVhdGVyIHRoYW4gYSByYXRpbmcgb2YgNCB3aXRoaW4gYSAwLTEwIE51bWVyaWNhbCBSYXRpbmcgU2NhbGUgKE5SUykgYXNzZXNzbWVudCB0b29sLiAJCQkJPGJyIC8%2BNy4JUGF0aWVudCB3aWxsaW5nIGFuZCBhYmxlIHRvIHJlY2VpdmUgYW4gb3JvLWJ1Y2NhbCBtdWNvc2EgZGVsaXZlcmVkIG1lZGljaW5lLgk8YnIgLz44LglQYXRpZW50IHdpbGxpbmcgdG8gdGFrZSBhIG1lZGljYXRpb24sIHdoaWNoIG1heSBleGhpYml0IHBzeWNob2FjdGl2ZSBlZmZlY3RzLgk8YnIgLz45LglQYXRpZW50IGFncmVlcyB0byBhYnN0YWluIGZyb20gdXNpbmcgY2FubmFiaXMgbWVkaWNpbmVzIG90aGVyIHRoYW4gdGhlIGV4cGVyaW1lbnRhbCBkcnVnIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGNsaW5pY2FsIHRyaWFsLiAJCQkJPGJyIC8%2BUGF0aWVudCBhZ3JlZXMgdG8gbm90IHBhcnRha2UgaW4gYW55IG90aGVyIGludGVydmVudGlvbmFsIGNsaW5pY2FsIHRyZWF0bWVudHMgb3RoZXIgdGhhbiB0aGUgb25lcyB0aGF0IHRoZSB0cmVhdGluZyBjbGluaWNhbCB0ZWFtIGFyZSBhbHJlYWR5IGF3YXJlIG9mIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIHN0dWR5LjxiciAvPjEwLglQYXRpZW50IGNvbnNlbnRzIHRvIHByb3ZpZGUgYmxvb2Qgc2FtcGxlcyBmb3IgYW5hbHlzaXMgdGhyb3VnaG91dCB0aGUgZHVyYXRpb24gb2YgdGhlIGNsaW5pY2FsIHRyaWFsLCB3aGV0aGVyIHBhcnRpY2lwYXRpb24gaXMgZm9yIFN0YWdlIDEgb25seSBhbmQgb3IgU3RhZ2UgMi48YnIgLz4xMS4JUGF0aWVudCBhZ3JlZXMgdG8gZGlzY2xvc2UgdGhhdCB0aGV5IGFyZSByZWNlaXZpbmcgYW4gZXhwZXJpbWVudGFsIG1lZGljYXRpb24gdG8gdHJlYXRpbmcgbWVkaWNhbCBwcm9mZXNzaW9uYWxzIHdobyBtaWdodCBiZSB1bmF3YXJlIG9mIHRoaXMgZmFjdC4gCQkJPGJyIC8%2BMTIuCUZlbWFsZSBvZiBjaGlsZGJlYXJpbmcgcG90ZW50aWFsLCBhZ3JlZXMgdG8gdXNlIGFuIGVmZmVjdGl2ZSBmb3JtIG9mIGJpcnRoIGNvbnRyb2wgZHVyaW5nIHRoZSBzdHVkeSBwYXJ0aWNpcGF0aW9uLgkJCQkJIDxiciAvPjEzLglQYXRpZW50IGNvbnNlbnRzIHRvIGhhdmluZyBhIGJhc2VsaW5lIHRlc3QgZm9yIHByZWduYW5jeSBpZiBhcHBsaWNhYmxlLgk8YnIgLz4xNC4JUGF0aWVudCBjb25zZW50cyB0byBoYXZpbmcgYmFzZWxpbmUgdGVzdHMgZm9yIHJlY2VudCBpbGxpY2l0IHN1YnN0YW5jZSB1c2UuPGJyIC8%2BMTUuCVBhdGllbnQgYWdyZWVzIHRvIHN0aWxsIHRha2UgcmVndWxhciBkb3NlcyBvZiBhbiBvcGlvaWQgYW5hbGdlc2ljIGFzIHByZXNjcmliZWQuIFBhdGllbnQgc2hvdWxkIG5vdCBjZWFzZSBvcGlvaWQgbWVkaWNhdGlvbnMuPGJyIC8%2BCDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzog8xLglQYXRpZW50IGVuZ2FnZWQgaW4gbWVkaWNpbmFsIG9yIHJlY3JlYXRpb25hbCB1c2Ugb2YgYW55IGNhbm5hYmlub2lkIGNvbnRhaW5pbmcgc3Vic3RhbmNlLCBpbiBhbnkgZm9ybSB3aXRoaW4gdGhlIHBhc3QgMzAgZGF5cy4gCQkJCQk8YnIgLz4yLglQYXRpZW50IGhhcyBhIGNvZ25pdGl2ZSBpbXBhaXJtZW50IG9yIGludGVsbGVjdHVhbCBkaXNhYmlsaXR5LiAJCTxiciAvPjMuCVBhdGllbnQgaGFzIGEgaGlzdG9yeSBvZiBwcmltYXJ5IHBzeWNob3RpYyBkaXNvcmRlciwgYmlwb2xhciBhZmZlY3RpdmUgZGlzb3JkZXIsIGJpcG9sYXIgZGlzb3JkZXIgd2l0aCBwc3ljaG90aWMgZmVhdHVyZXMsIGRlcHJlc3NpdmUgZGlzb3JkZXIgd2l0aCBwc3ljaG90aWMgZmVhdHVyZXMsIGJvcmRlcmxpbmUgcGVyc29uYWxpdHkgZGlzb3JkZXIsIGFudGlzb2NpYWwgcGVyc29uYWxpdHkgZGlzb3JkZXIsIG9yIGEgcG9zaXRpdmUgZmFtaWx5IGhpc3RvcnkgKGZpcnN0IGRlZ3JlZSByZWxhdGl2ZSkgb2YgcHN5Y2hvdGljIGRpc29yZGVyIG9yIGJpcG9sYXIgYWZmZWN0aXZlIGRpc29yZGVyLiAJPGJyIC8%2BNC4JUGF0aWVudCBoYXMgYW55IGhpc3Rvcnkgb2YgYWxsZXJnaWMgb3IgaHlwZXJzZW5zaXRpdml0eSByZWFjdGlvbiB0byBhbnkgaGVyYmFsIHByb2R1Y3QsIGluY2x1ZGluZyBjYW5uYWJpbm9pZHMuIAkJCQkJCQk8YnIgLz41LglQYXRpZW50IHJlcG9ydHMgYSBwcmlvciBzZW5zaXRpdml0eSByZWFjdGlvbiB0byBhbiBvcmFsLW11Y29zYWwgYWRtaW5pc3RlcmVkIG1lZGljaW5lIG9yIHN1cHBsZW1lbnQgKGUuZy4sIExpcG9zb21lcykuCQkJCQkJPGJyIC8%2BNi4JUGF0aWVudCBoYXMgYmVlbiBkaWFnbm9zZWQgd2l0aCBhIGhlYWQsIG5lY2ssIG9yIG9yYWwtcGhhcnluZ2VhbCBjYW5jZXIuCQk8YnIgLz43LglQYXRpZW50IGhhcyB1bmRlcmdvbmUgYW55IHJhZGlvdGhlcmFweSB0byB0aGUgbW91dGggb3Igb3JhbCBjYXZpdHkuIDxiciAvPjguCVBhdGllbnQgcHJlc2VudHMgd2l0aCBhbnkgY2FyZGlvdmFzY3VsYXIgZGlzb3JkZXJzIChDb3JvbmFyeSBhcnRlcnkgZGlzZWFzZTsgaGVhcnQgYXR0YWNrOyBhYm5vcm1hbCBoZWFydCByaHl0aG1zIG9yIGFycmh5dGhtaWE7IGhlYXJ0IGZhaWx1cmU7IGhlYXJ0IHZhbHZlIGRpc2Vhc2U7IGNvbmdlbml0YWwgaGVhcnQgZGlzZWFzZTsgaGVhcnQgbXVzY2xlIGRpc2Vhc2U7IHBlcmljYXJkaWFsIGRpc2Vhc2U7IGFvcnRhIGRpc2Vhc2U7IHZhc2N1bGFyIGRpc2Vhc2UpLCBlcGlsZXBzeSAob3IgYSBwcmV2aW91cyBoaXN0b3J5IG9mIHNlaXp1cmVzKSwgcHN5Y2hvYWN0aXZlIGRpc29yZGVycyBvciBhbnkgY2xpbmljYWxseSBzaWduaWZpY2FudCBoZXBhdGljIG9yIHJlbmFsIGltcGFpcm1lbnQuIDxiciAvPjkuCVBhdGllbnQgaGFzIGJlZW4gZGlhZ25vc2VkIHdpdGggYnJhaW4gbWV0YXN0YXNpcy4JCQkJPGJyIC8%2BMTAuCVBhdGllbnQgaXMgcHJlZ25hbnQsIGxhY3RhdGluZyBvciBwYXJ0YWtpbmcgaW4gc2V4dWFsIGNvbnRhY3QsIHdoaWNoIG1heSByZXN1bHQgaW4gcHJlZ25hbmN5IHdpdGhvdXQgYWRlcXVhdGUgY29udHJhY2VwdGlvbi4gCQkJCQk8YnIgLz4xMS4JUGF0aWVudCBoYXMgcmVjZWl2ZWQgZXBpZHVyYWwgYW5hbGdlc2lhIHdpdGhpbiA0OCBob3VycyBvZiB0aGUgYmFzZWxpbmUgYXNzZXNzbWVudCA8YnIgLz4xMi4JUGF0aWVudCBoYXMgcmVjZWl2ZWQgYW55IHJhZGlvdGhlcmFweSB3aXRoaW4gdHdvIHdlZWtzIG9mIHRoZSBpbml0aWFsIGJhc2VsaW5lIGFzc2Vzc21lbnQuIDxiciAvPjEzLglQYXRpZW50IGlzIGN1cnJlbnRseSBub3QgdGFraW5nIExldm9kb3BhLCBTaWxkZW5hZmlsIChvciBhbnkgb3RoZXIgUERFNXMpLCBhbnRpY29udnVsc2FudHMgYW5kL29yIENhbm5hYmlub2lkczxiciAvPjE0LiAgICBQYXRpZW50IGlzIGN1cnJlbnRseSByZWNlaXZpbmcga2V0YW1pbmUuDmV4cGFuZGFibGUtYm94GkNvbW1lcmNpYWwgc2VjdG9yL0luZHVzdHJ5EE1lZGxhYiBDbGluaWNhbCAzNjYgTWNDYXVsZXkgU3RyZWV0LCBBbGV4YW5kcmlhIE5ldyBTb3V0aCBXYWxlcyAyMDE1CUF1c3RyYWxpYQRQcm9mDEx1aXMgVml0ZXR0YTpNZWRsYWIgQ2xpbmljYWwuIDY2IE1jQ2F1bGV5IFN0cmVldCwgQWxleGFuZHJpYSwgTlNXLCAyMDE1CUF1c3RyYWxpYQwrNjEyODE4ODAzMTEWbHVpc192aXRldHRhQG1lZGxhYi5jbwZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzE5ODUucGRmP3Q9Mjk3ZGQCLw88KwAEAQAPFgIfA2dkZAIHD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzI1MTUmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzI1MTUucGRmP3Q9Mjk3ZGQCBw8PFgIfAgUGMzcyNTE1ZGQCCQ8PFgIfAgUOMTI2MTcwMDE0NzQzNDdkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0yhgFQYW5jcmVhdGljIGNhbmNlcjogVW5kZXJzdGFuZGluZyBSb3V0aW5lIFByYWN0aWNlIGFuZCBMaWZ0aW5nIEVuZCBSZXN1bHRzIChQVVJQTEUpLiBBIFByb3NwZWN0aXZlIFBhbmNyZWF0aWMgQ2FuY2VyIENsaW5pY2FsIFJlZ2lzdHJ5IApSZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRpSZXRyb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUKMTkvMTAvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDAIQXBwcm92ZWQKVXAgdG8gZGF0ZRNBQ1RSTjEyNjE3MDAxNDc0MzQ3DzE5IE9jdG9iZXIgMjAxNwRzaG93VFBhbmNyZWF0aWMgQ2FuY2VyICwgTmV3bHkgZGlhZ25vc2VkIFBhbmNyZWF0aWMgQ2FuY2VyLCBNZXRhc3RhdGljIFBhbmNyZWF0aWMgQ2FuY2VyIARzaG93L0F1c3RyYWxpYSwgU2luZ2Fwb3JlLCBVbml0ZWQgS2luZ2RvbSwgSG9uZyBLb25nBHNob3dxQXVzdHJhbGlhbiBDYXBpdGFsIFRlcnJpdG9yeSwgTmV3IFNvdXRoIFdhbGVzLCBRdWVlbnNsYW5kLCBTb3V0aCBBdXN0cmFsaWEsIFRhc21hbmlhLCBXZXN0ZXJuIEF1c3RyYWxpYSwgVmljdG9yaWEEc2hvdwRzaG93ClJlY3J1aXRpbmcDbi9hBHNob3cIQXBwcm92ZWS8ClRoaXMgcHJvamVjdCBpcyBub24taW50ZXJ2ZW50aW9uYWwgcmVnaXN0cnkgb2YgdGhlIHRyZWF0bWVudCBhbmQgb3V0Y29tZXMgb2YgcGF0aWVudHMgd2l0aCBwYW5jcmVhdGljIGNhbmNlciBtYW5hZ2VkIGF0IGhvc3BpdGFscyBlbnJvbGxlZCB0byBwYXJ0aWNpcGF0ZSBpbiBBdXN0cmFsaWEuPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYXJlIGFnZWQgMTggeWVhcnMgb3IgYWJvdmUgYW5kIGhhdmUgYmVlbiBuZXdseSBkaWFnbm9zZWQgd2l0aCBwYW5jcmVhdGljIGNhbmNlciAod2l0aCBvciB3aXRob3V0IG1ldGFzdGF0aWMgZGlzZWFzZSkgLCB3aXRoIGFueSBFQ09HIHBlcmZvcm1hbmNlIHN0YXR1cyBhbmQgYXJlIHlldCB0byByZWNlaXZlIHRyZWF0bWVudC48YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BVGhpcyByZWdpc3RyeSB3aWxsIGNhcHR1cmUgZGF0YSBvbiBwcmVzZW50YXRpb24gYW5kIHRoZSBkaXNlYXNlIGNvdXJzZSBvZiBwYW5jcmVhdGljIGNhbmNlciwgc3VyZ2ljYWwgaW50ZXJ2ZW50aW9ucyBmb3IgcHJpbWFyeSBhbmQgbWV0YXN0YXRpYyBkaXNlYXNlLCBwcmVzY3JpcHRpb24gb2Ygc3lzdGVtaWMgdGhlcmFwaWVzLCBhbmQgaW5mb3JtYXRpb24gcmVnYXJkaW5nIG11bHRpLWRpc2NpcGxpbmFyeSBtYW5hZ2VtZW50IGFuZCBvdXRjb21lcyBvZiB0aGlzIGRpc2Vhc2UgaW4gdGhlIHJvdXRpbmUgY2xpbmljYWwgcHJhY3RpY2Ugc2V0dGluZy4gVGhpcyBwcm9qZWN0IHdpbGwgY29sbGVjdCBjbGluaWNhbCBkYXRhIHVzaW5nIHRoZSBhbHJlYWR5IGVzdGFibGlzaGVkIGRhdGEgY29sbGVjdGlvbiBhbmQgYW5hbHlzaXMgcmVzb3VyY2VzIGJ1aWx0IHVwIG92ZXIgdGhlIGxhc3QgMTUgeWVhcnMgaW4gdGhlIFN5c3RlbXMgQmlvbG9neSAmIFBlcnNvbmFsaXNlZCBNZWRpY2luZSBEaXZpc2lvbiBvZiB0aGUgV2FsdGVyICYgRWxpemEgSGFsbCBJbnN0aXR1dGUgb2YgbWVkaWNhbCByZXNlYXJjaCAoV0VISSkuIFRoaXMgcHJvdG9jb2wgYWltcyB0byBlbnJvbCBhdCBsZWFzdCA4MDAgZWxpZ2libGUgcGF0aWVudHMgb3ZlciAxMCB5ZWFycy48YnIgLz5GaW5kaW5ncyBmcm9tIGFuYWx5c2VzIHRoYXQgb2NjdXIgYXMgcGFydCBvZiB0aGlzIHByb2plY3QgYXJlIGFudGljaXBhdGVkIHRvIGltcHJvdmUgb3VyIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHByZXNlbnRhdGlvbiwgY2xpbmljYWwgY291cnNlIGFuZCBtYW5hZ2VtZW50IG9mIHBhbmNyZWF0aWMgY2FuY2VyIGluIEF1c3RyYWxpYSBhbmQgb3RoZXIgcGFydGljaXBhdGluZyBjb3VudHJpZXMutgJQYXRpZW50cyB3aXRoIG5ld2x5IGRpYWdub3NlZCBwYW5jcmVhdGljIGNhbmNlciwgd2l0aCBvciB3aXRob3V0IG1ldGFzdGF0aWMgZGlzZWFzZTxiciAvPmIpIEhpc3RvbG9naWNhbGx5IG9yIGN5dG9sb2dpY2FsbHkgY29uZmlybWVkIGRpYWdub3NpcyBvZiBwYW5jcmVhdGljIGNhbmNlcjxiciAvPmMpIFBhdGllbnRzIGFnZWQgMTggeWVhcnMgb3IgYWJvdmUgd2l0aCBhbnkgRUNPRyBwZXJmb3JtYW5jZSBzdGF0dXMgd2l0aCBwYW5jcmVhdGljIGNhbmNlcjxiciAvPmQpIFBhdGllbnRzIHdobyBhcmUgeWV0IHRvIHJlY2VpdmUgdHJlYXRtZW50CDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzQlBhdGllbnRzIHRoYXQgZG8gbm90IGhhdmUgYSBuZXcgZGlhZ25vc2lzIG9mIHBhbmNyZWF0aWMgY2FuY2VyLiAuIA5leHBhbmRhYmxlLWJveBpPdGhlciBDb2xsYWJvcmF0aXZlIGdyb3Vwcx5XYWx0ZXIgJiBFbGl6YSBIYWxsIEluc3RpdHV0ZSA4IDFHIFJveWFsIFBhcmFkZTxiciAvPlBhcmt2aWxsZSAzMDUwIFZpY3RvcmlhIEF1c3RyYWxpYSAJQXVzdHJhbGlhAkRyDEJlbGluZGEgTGVlIGpUaGUgV2FsdGVyIGFuZCBFbGl6YSBIYWxsIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFJlc2VhcmNoPGJyIC8%2BMUcgUm95YWwgUGFyYWRlLCBQYXJrdmlsbGUgVklDIDMwNTIgQXVzdHJhbGlhCUF1c3RyYWxpYQ8rNjEgMyA5ODQ1IDI4NTMVQmVsaW5kYS5MZWVAbWgub3JnLmF1BmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MjUxNS5wZGY%2FdD0yOTdkZAIvDzwrAAQBAA8WAh8DZ2RkAgkPZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3MzUyOCZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MzUyOC5wZGY%2FdD0yOTdkZAIHDw8WAh8CBQYzNzM1MjhkZAIJDw8WAh8CBQ4xMjYxNzAwMTQ2ODMxNGRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTK%2FAUEgUmFuZG9taXplZCBUcmlhbCBvZiBEdXJ2YWx1bWFiIGFuZCBUcmVtZWxpbXVtYWIgKy8tIFBsYXRpbnVtLUJhc2VkIENoZW1vdGhlcmFweSBpbiBQYXRpZW50cyBXaXRoIEhpZ2gtUmlzaywgTWV0YXN0YXRpYyAoU3RhZ2UgSVYpIFNxdWFtb3VzIG9yIE5vbi1TcXVhbW91cyBOb24tU21hbGwgQ2VsbCBMdW5nIENhbmNlciAoTlNDTEMpEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoxNy8xMC8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE0NjgzMTQPMTcgT2N0b2JlciAyMDE3BHNob3cWTHVuZyBDYW5jZXIgTWV0YXN0YXRpYwRzaG93CUF1c3RyYWxpYQRzaG93YEF1c3RyYWxpYW4gQ2FwaXRhbCBUZXJyaXRvcnksIE5ldyBTb3V0aCBXYWxlcywgUXVlZW5zbGFuZCwgVGFzbWFuaWEsIFdlc3Rlcm4gQXVzdHJhbGlhLCBWaWN0b3JpYQRzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nDzMxIE9jdG9iZXIgMjAxNwRzaG93CEFwcHJvdmVkxA5UaGUgcHVycG9zZSBvZiB0aGlzIHN0dWR5IGlzIHRvIGNvbXBhcmUgdGhlIGVmZmVjdHMgb2YgYW4gaW1tdW5vdGhlcmFweSBjb21iaW5hdGlvbiBvZiBib3RoIGR1cnZhbHVtYWIgcGx1cyB0cmVtZWxpbXVtYWIgd2l0aCBvciB3aXRob3V0IGNoZW1vdGhlcmFweSBvbiB5b3UgYW5kIHlvdXIgbHVuZyBjYW5jZXIuIDxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhZ2VkIDE4IHllYXJzIG9yIG92ZXIgYW5kIGhhdmUgaGlzdG9sb2dpY2FsbHkgYW5kL29yIGN5dG9sb2dpY2FsbHkgY29uZmlybWVkIGRpYWdub3NpcyBvZiBtZXRhc3RhdGljIHNxdWFtb3VzIG9yIG5vbi1zcXVhbW91cywgbm9uLXNtYWxsIGNlbGwgY2FyY2lub21hIG9mIHRoZSBsdW5nLiA8YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BUGFydGljaXBhbnRzIHdpbGwgYmUgYWxsb2NhdGVkIGJ5IGNoYW5jZSB0byBvbmUgb2YgdHdvIHRyZWF0bWVudCBncm91cHMuIFBhcnRpY2lwYW50IGluIGJvdGggZ3JvdXBzIHdpbGwgcmVjZWl2ZSBkdXJ2YWx1bWFiIGFuZCB0cmVtZWxpbXVtYWIgZXZlcnkgMjggZGF5cyBmb3IgNCBjeWNsZXMgZm9sbG93ZWQgYnkgZHVydmFsdW1hYiBldmVyeSAyOCBkYXlzIHVudGlsIGRpc2Vhc2UgcHJvZ3Jlc3Npb24uIFBhcnRpY2lwYW50cyBpbiBvbmUgZ3JvdXAgb25seSB3aWxsIGFsc28gcmVjZWl2ZSBhZGRpdGlvbmFsIGNoZW1vdGhlcmFweSBkdXJpbmcgdGhlIGZpcnN0IHN0YWdlIHdoaWNoIHdpbGwgYmUgZGVwZW5kZW50IG9uIFNxdWFtb3VzIG9yIE5vbi1TcXVhbW91cyBOb24tU21hbGwgQ2VsbCBMdW5nIENhbmNlciAoTlNDTEMpLiBTcXVhbW91cyBDZWxsIHRyZWF0bWVudCB3aWxsIGluY2x1ZGUgZ2VtY2l0YWJpbmUgYW5kIGNpc3BsYXRpbiBvciBjYXJib3BsYXRpbiB3aGlsZSBOb24tU3F1YW1vdXMgQ2VsbCB0cmVhdG1lbnQgd2lsbCBpbmNsdWRlIHBlbWV0cmV4ZWQgYW5kIGNpc3BsYXRpbiBvciBjYXJib3BsYXRpbi4gPGJyIC8%2BPGJyIC8%2BSW1tdW5vdGhlcmFweSB3aXRoIGltbXVuZSBjaGVja3BvaW50IGluaGliaXRvcnMgaGFzIGRlbW9uc3RyYXRlZCBzdXBlcmlvciBlZmZpY2FjeSBjb21wYXJlZCB0byBjaGVtb3RoZXJhcHkgYW5kIGhhcyBhIGZhdm91cmFibGUgc2lkZSBlZmZlY3QgcHJvZmlsZSBpbiB0aGUgdHJlYXRtZW50IG9mIGEgc3Vic2V0IG9mIHBhdGllbnRzIHdpdGggTlNDTEMuICBDb21iaW5pbmcgaW1tdW5vdGhlcmFwaWVzIGluIHRoZSBzZWNvbmQtbGluZSBzZXR0aW5nIGhhcyByZXN1bHRlZCBpbiBoaWdoZXIgYW50aS1jYW5jZXIgYWN0aXZpdHksIGJ1dCBpbmNyZWFzZXMgcmlzayBvZiBpbW11bmUtcmVsYXRlZCBzaWRlIGVmZmVjdHMuICBDb21iaW5pbmcgaW1tdW5vdGhlcmFweSB3aXRoIGNoZW1vdGhlcmFweSBpcyBhIHByb21pc2luZyBuZXcgYXBwcm9hY2gsIHdpdGggZWFybHkgcmVzdWx0cyBpbmRpY2F0aW5nIG11Y2ggaGlnaGVyIGFudGktY2FuY2VyIGFjdGl2aXR5IHRoZW4gd291bGQgYmUgZXhwZWN0ZWQgd2l0aCBlaXRoZXIgdHJlYXRtZW50IGFsb25lIHdpdGggbm8gYWRkaXRpb25hbCB0b3hpY2l0eS4gICBUaGUgY29tYmluYXRpb24gb2YgdHdvIGltbXVub3RoZXJhcHkgYWdlbnRzLCB3aXRoIG9yIHdpdGhvdXQgY2hlbW90aGVyYXB5IG1heSBiZSB0aGUgYmVzdCB3YXkgdG8gYmFsYW5jZSB0aGUgY2hhbmNlcyBvZiBwcm9sb25nZWQgYW50aWNhbmNlciByZXNwb25zZXMgc2VlbiB3aXRoIGltbXVub3RoZXJhcHkgYWdhaW5zdCB0aGUgcmlzayBvZiBzaWRlLWVmZmVjdHMgYXNzb2NpYXRlZCB3aXRoIHRyZWF0bWVudC48YnIgLz6zIy0gUGF0aWVudHMgbXVzdCBoYXZlIGhpc3RvbG9naWNhbGx5IGFuZC9vciBjeXRvbG9naWNhbGx5IGNvbmZpcm1lZCBkaWFnbm9zaXMgb2Ygc3F1YW1vdXMgb3Igbm9uLXNxdWFtb3VzLCBub24tc21hbGwgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIGx1bmcuIFBhdGllbnRzIHdpdGggcG9vcmx5IGRpZmZlcmVudGlhdGVkIHR1bW91cnMgd2lsbCBvbmx5IGJlIGVsaWdpYmxlIGlmIE5TQ0xDIGlzIGNvbmZpcm1lZCBieSBpbW11bm9oaXN0b2NoZW1pc3RyeSBtYXJrZXJzIChUVEYxL1A2MyBvciBQNDAvQ0s1KS4gUGF0aWVudHMgd2l0aCBrbm93biBzZW5zaXRpemluZyBFR0ZSIG11dGF0aW9ucyBvciBrbm93biBBTEstZnVzaW9uIGFyZSBub3QgZWxpZ2libGUuPGJyIC8%2BLSBQYXRpZW50cyBtdXN0IGJlIGhpZ2ggcmlzaywgZGVmaW5lZCBhcyB0aGUgcHJlc2VuY2Ugb2Ygb25lIG9yIG1vcmUgb2YgdGhlIGZvbGxvd2luZyB1bmZhdm91cmFibGUgcHJvZ25vc3RpYyBmYWN0b3JzOjxiciAvPiAgICAgICAgICAgICAgIC0gU3RhZ2UgSVZCIGRpc2Vhc2U8YnIgLz4gICAgICAgICAgICAgICAtIFN0YWdlIElWQSBkaXNlYXNlIHdpdGggYXQgbGVhc3Qgb25lIG9mIHRoZSBmb2xsb3dpbmc6IChFbGV2YXRlZCBMREgsIHdlaWdodCBsb3NzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byA1JSBvdmVyIDMgbW9udGhzIGJlZm9yZSByYW5kb21pemF0aW9uLCBwb29ybHkgZGlmZmVyZW50aWF0ZWQgaGlzdG9sb2d5Lik8YnIgLz4tIFBhdGllbnRzIG11c3QgaGF2ZSBhbiBhZGVxdWF0ZSBoaXN0b3BhdGhvbG9neSBzcGVjaW1lbiBhbmQgbXVzdCBjb25zZW50IHRvIHJlbGVhc2UgdGhpcyBzcGVjaW1lbiBmb3IgcHJvdG9jb2wgcmVxdWlyZWQgdGVzdGluZy4gVGhpcyBpcyBhIG1hbmRhdG9yeSBjb21wb25lbnQgb2YgdGhlIHN0dWR5LjxiciAvPi0gUGF0aWVudCBtdXN0IGNvbnNlbnQgdG8gcHJvdmlzaW9uIG9mIHNhbXBsZXMgb2YgYmxvb2QgaW4gb3JkZXIgdGhhdCB0aGUgc3BlY2lmaWMgY29ycmVsYXRpdmUgbWFya2VyIGFzc2F5cyBwcm9zY3JpYmVkIG1heSBiZSBjb25kdWN0ZWQuPGJyIC8%2BICAgICAgICAgIC0gIEFsbCBwYXRpZW50cyBtdXN0IGhhdmUgbWVhc3VyYWJsZSBkaXNlYXNlIGFzIGRlZmluZWQgYnkgUkVDSVNUIDEuMSBBbGwgcmFkaW9sb2d5PGJyIC8%2BICAgICAgICAgICAgIHN0dWRpZXMgbXVzdCBiZSBwZXJmb3JtZWQgd2l0aGluIDI4IGRheXMgcHJpb3IgdG8gcmFuZG9taXphdGlvbiAod2l0aGluIDM1IGRheXMgaWY8YnIgLz4gICAgICAgICAgICAgbmVnYXRpdmUpLjxiciAvPlRoZSBjcml0ZXJpYSBmb3IgZGVmaW5pbmcgbWVhc3VyYWJsZSBkaXNlYXNlIGFyZSBhcyBmb2xsb3dzOjxiciAvPiAgICAgICAgICAtICBDVCBzY2FuICh3aXRoIHNsaWNlIHRoaWNrbmVzcyBvZiA1IG1tKSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMTAgbW0gKGxvbmdlc3QgZGlhbWV0ZXIpPGJyIC8%2BICAgICAgICAgIC0gIFBoeXNpY2FsIGV4YW0gKHVzaW5nIGNhbGlwZXJzKSBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMTAgbW08YnIgLz4gICAgICAgICAgLSAgTHltcGggbm9kZXMgYnkgQ1Qgc2NhbiBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMTUgbW0gKG1lYXN1cmVkIGluIHNob3J0IGF4aXMpPGJyIC8%2BTWVhc3VyYWJsZSBsZXNpb25zIG11c3QgYmUgb3V0c2lkZSBhIHByZXZpb3VzIHJhZGlvdGhlcmFweSBmaWVsZCBpZiB0aGV5IGFyZSB0aGUgc29sZSBzaXRlIG9mIGRpc2Vhc2UsIHVubGVzcyBkaXNlYXNlIHByb2dyZXNzaW9uIGhhcyBiZWVuIGRvY3VtZW50ZWQuPGJyIC8%2BLSBQYXRpZW50cyBtdXN0IGJlIDE4IHllYXJzIG9mIGFnZSBvciBvbGRlci48YnIgLz4tIEVDT0cgcGVyZm9ybWFuY2Ugc3RhdHVzIG9mIDAgb3IgMS48YnIgLz4tIEFic29sdXRlIG5ldXRyb3BoaWxzIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAxLjUgeCAxMF45L0w8YnIgLz4tIFBsYXRlbGV0cyBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMTAwIHggMTBeOS9MPGJyIC8%2BLSBIZW1vZ2xvYmluIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byA5MCBnL0w8YnIgLz4tIEJpbGlydWJpbiBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMS41IHggVU5MICh1cHBlciBsaW1pdCBvZiBub3JtYWwpPGJyIC8%2BLSBBU1QgYW5kIEFMVCBncmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMi41IHggVU5MIChpZiBsaXZlciBtZXRhc3Rhc2VzIGFyZSBwcmVzZW50LCBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gNSB4IFVOTCkgQ3JlYXRpbmluZSBsZXNzIHRoYW4gMS4yNSBVTkwgb3IgQ3JlYXRpbmluZSBjbGVhcmFuY2UgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDQ1IG1ML21pbjxiciAvPi0gQ3l0b3RveGljIENoZW1vdGhlcmFweTogUGF0aWVudHMgbWF5IG5vdCBoYXZlIHJlY2VpdmVkIHByaW9yIGN5dG90b3hpYyBjaGVtb3RoZXJhcHkgZm9yIGFkdmFuY2VkL21ldGFzdGF0aWMgZGlzZWFzZS48YnIgLz4tIEFkanV2YW50IENoZW1vdGhlcmFweTogUGF0aWVudHMgbWF5IGhhdmUgaGFkIHByaW9yIGFkanV2YW50IHRoZXJhcHkgZm9yIGNvbXBsZXRlbHk8YnIgLz5yZXNlY3RlZCBkaXNlYXNlLCBwcm92aWRpbmcgaXQgaGFzIGJlZW4gY29tcGxldGVkIGF0IGxlYXN0IDEyIG1vbnRocyBwcmlvciB0byByYW5kb21pemF0aW9uLjxiciAvPi0gUGF0aWVudHMgdHJlYXRlZCB3aXRoIGNvbmN1cnJlbnQgY2hlbW90aGVyYXB5L3JhZGlhdGlvbiByZWdpbWVucyBmb3IgdW5yZXNlY3RhYmxlIGxvY2FsbHkgYWR2YW5jZWQgU3RhZ2UgSUlJIGRpc2Vhc2Ugd2lsbCBiZSBlbGlnaWJsZSBwcm92aWRpbmcgaXQgaGFzIGJlZW4gY29tcGxldGVkIGF0IGxlYXN0IDEyIG1vbnRocyBwcmlvciB0byByYW5kb21pemF0aW9uLjxiciAvPi0gT3RoZXIgU3lzdGVtaWMgVGhlcmFweTogUGF0aWVudHMgbWF5IG5vdCBoYXZlIHJlY2VpdmVkIHByaW9yIEVHRlIgb3IgYWxrIGluaGliaXRvcnMuPGJyIC8%2BLSBQYXRpZW50cyBtYXkgbm90IGhhdmUgcmVjZWl2ZWQgcHJpb3IgdHJlYXRtZW50IHdpdGggaW1tdW5lLWJhc2VkIHRoZXJhcHksIGluY2x1ZGluZyBkdXJ2YWx1bWFiIGFuZCB0cmVtZWxpbXVtYWIgdmFjY2luZXMgb3Igb25jb2x5dGljIHZpcmFsIHRoZXJhcHkuIFBhdGllbnRzIG11c3QgaGF2ZSByZWNvdmVyZWQgZnJvbSBhbnkgcmV2ZXJzaWJsZSB0cmVhdG1lbnQgcmVsYXRlZCB0b3hpY2l0aWVzIHByaW9yIHRvIHJhbmRvbWl6YXRpb24uPGJyIC8%2BLSBQcmlvciBleHRlcm5hbCBiZWFtIHJhZGlhdGlvbiBpcyBwZXJtaXR0ZWQgcHJvdmlkZWQgYSBtaW5pbXVtIG9mIDE0IGRheXMgKDIgd2Vla3MpIGhhdmUgZWxhcHNlZCBiZXR3ZWVuIHRoZSBsYXN0IGRvc2Ugb2YgcmFkaWF0aW9uIGFuZCBkYXRlIG9mIHJhbmRvbWl6YXRpb24uIDxiciAvPi0gQ29uY3VycmVudCByYWRpb3RoZXJhcHkgaXMgbm90IHBlcm1pdHRlZC48YnIgLz4tIFBhdGllbnRzIG11c3QgaGF2ZSByZWNvdmVyZWQgZnJvbSBhbnkgYWN1dGUgdG94aWMgZWZmZWN0cyBmcm9tIHJhZGlhdGlvbiBwcmlvciB0byByYW5kb21pemF0aW9uLjxiciAvPi0gU3VyZ2VyeTogUHJldmlvdXMgc3VyZ2VyeSBpcyBwZXJtaXR0ZWQgcHJvdmlkZWQgdGhhdCB3b3VuZCBoZWFsaW5nIGhhcyBvY2N1cnJlZCBhbmQgYXQgbGVhc3QgMTQgZGF5cyBoYXZlIGVsYXBzZWQgKG1ham9yIHN1cmdlcnkpIHByaW9yIHRvIHJhbmRvbWl6YXRpb24uPGJyIC8%2BLSBQYXRpZW50IG11c3QgYmUgYWJsZSAoaS5lLiBzdWZmaWNpZW50bHkgZmx1ZW50KSBhbmQgd2lsbGluZyB0byBjb21wbGV0ZSB0aGUgcXVhbGl0eSBvZiBsaWZlIGFuZCBoZWFsdGggZWNvbm9taWNzIHF1ZXN0aW9ubmFpcmVzLjxiciAvPi0gUGF0aWVudCBjb25zZW50IG11c3QgYmUgYXBwcm9wcmlhdGVseSBvYnRhaW5lZCBpbiBhY2NvcmRhbmNlIHdpdGggYXBwbGljYWJsZSBsb2NhbCBhbmQgcmVndWxhdG9yeSByZXF1aXJlbWVudHMuPGJyIC8%2BLSBQYXRpZW50cyBtdXN0IGJlIGFjY2Vzc2libGUgZm9yIHRyZWF0bWVudCBhbmQgZm9sbG93LXVwLiBBbGwgcmFuZG9taXplZCBwYXRpZW50cyBtdXN0IGJlIGZvbGxvd2VkIGFuZCB0cmVhdGVkIGF0IHBhcnRpY2lwYXRpbmcgY2VudHJlcy48YnIgLz4tIEluIGFjY29yZGFuY2Ugd2l0aCBDQ1RHIHBvbGljeSwgcHJvdG9jb2wgdHJlYXRtZW50IGlzIHRvIGJlZ2luIHdpdGhpbiAyIHdvcmtpbmcgZGF5cyBvZiBwYXRpZW50IHJhbmRvbWl6YXRpb24uPGJyIC8%2BLSBGZW1hbGUgcGF0aWVudHMgb2YgY2hpbGRiZWFyaW5nIHBvdGVudGlhbCB3aG8gYXJlIHNleHVhbGx5IGFjdGl2ZSB3aXRoIGEgbm9uLXN0ZXJpbGl6ZWQgbWFsZSBwYXJ0bmVyIG11c3QgdXNlIGF0IGxlYXN0IG9uZSBoaWdobHkgZWZmZWN0aXZlIG1ldGhvZCBvZiBjb250cmFjZXB0aW9uIHdoaWxlIG9uIHN0dWR5IGFuZCBmb3IgNiBtb250aHMgYWZ0ZXIgdGhlIGxhc3QgZG9zZSBvZiBkdXJ2YWx1bWFiIGFuZCB0cmVtZWxpbXVtYWIgb3IgZm9yIDMgbW9udGhzIGFmdGVyIHRoZSBsYXN0IGRvc2Ugb2YgZHVydmFsdW1hYiBhbG9uZS48YnIgLz4IMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXPlJS0gUGF0aWVudHMgd2l0aCBhIGhpc3Rvcnkgb2Ygb3RoZXIgbWFsaWduYW5jaWVzLCBleGNlcHQ6IGFkZXF1YXRlbHkgdHJlYXRlZCBub24tbWVsYW5vbWEgc2tpbiBjYW5jZXIsIGN1cmF0aXZlbHkgdHJlYXRlZCBpbi1zaXR1IGNhbmNlciBvZiB0aGUgY2Vydml4LCBvciBvdGhlciBzb2xpZCB0dW1vdXJzIGN1cmF0aXZlbHkgdHJlYXRlZCB3aXRoIG5vIGV2aWRlbmNlIG9mIGRpc2Vhc2UgZm9yIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAzIHllYXJzLjxiciAvPi0gQWN0aXZlIG9yIHByaW9yIGRvY3VtZW50ZWQgYXV0b2ltbXVuZSBvciBpbmZsYW1tYXRvcnkgZGlzb3JkZXJzIChpbmNsdWRpbmcgaW5mbGFtbWF0b3J5IGJvd2VsIGRpc2Vhc2UgKGUuZy4gY29saXRpcyBvciBDcm9obidzIGRpc2Vhc2UpLCBkaXZlcnRpY3VsaXRpcyB3aXRoIHRoZSBleGNlcHRpb24gb2YgZGl2ZXJ0aWN1bG9zaXMsIGNlbGlhYyBkaXNlYXNlIG9yIG90aGVyIHNlcmlvdXMgZ2FzdHJvaW50ZXN0aW5hbCBjaHJvbmljIGNvbmRpdGlvbnMgYXNzb2NpYXRlZCB3aXRoIGRpYXJyaGVhKSwgc3lzdGVtaWMgbHVwdXMgZXJ5dGhlbWF0b3N1cywgU2FyY29pZG9zaXMgc3luZHJvbWUsIG9yIFdlZ2VuZXIgc3luZHJvbWUgKGdyYW51bG9tYXRvc2lzIHdpdGggcG9seWFuZ2lpdGlzKSwgcmhldW1hdG9pZCBhcnRocml0aXMsIGh5cG9waHlzaXRpcywgdXZlaXRpcywgZXRjLiwgd2l0aGluIHRoZSBwYXN0IDMgeWVhcnMgcHJpb3IgdG8gdGhlIHN0YXJ0IG9mIHRyZWF0bWVudC4gVGhlIGZvbGxvd2luZyBhcmUgZXhjZXB0aW9ucyB0byB0aGlzIGNyaXRlcmlvbjo8YnIgLz4gICAgICAgICAgICAgICAtICBQYXRpZW50cyB3aXRoIGFsb3BlY2lhLjxiciAvPiAgICAgICAgICAgICAgIC0gIFBhdGllbnRzIHdpdGggR3JhdmUncyBkaXNlYXNlLCB2aXRpbGlnbyBvciBwc29yaWFzaXMgbm90IHJlcXVpcmluZyBzeXN0ZW1pYzxiciAvPiAgICAgICAgICAgICAgICAgIHRyZWF0bWVudCAod2l0aGluIHRoZSBsYXN0IDIgeWVhcnMpLjxiciAvPiAgICAgICAgICAgICAgIC0gIFBhdGllbnRzIHdpdGggaHlwb3RoeXJvaWRpc20gKGUuZy4gZm9sbG93aW5nIEhhc2hpbW90byBzeW5kcm9tZSkgc3RhYmxlIG9uPGJyIC8%2BICAgICAgICAgICAgICAgICAgaG9ybW9uZSByZXBsYWNlbWVudC48YnIgLz4tIEhpc3Rvcnkgb2YgcHJpbWFyeSBpbW11bm9kZWZpY2llbmN5LCBoaXN0b3J5IG9mIGFsbG9nZW5pYyBvcmdhbiB0cmFuc3BsYW50IHRoYXQgcmVxdWlyZXMgdGhlcmFwZXV0aWMgaW1tdW5vc3VwcHJlc3Npb24gYW5kIHRoZSB1c2Ugb2YgaW1tdW5vc3VwcHJlc3NpdmUgYWdlbnRzIHdpdGhpbiAyOCBkYXlzIG9mIHJhbmRvbWl6YXRpb24qIG9yIGEgcHJpb3IgaGlzdG9yeSBvZiBzZXZlcmUgKGdyYWRlIDMgb3IgNCkgaW1tdW5lIG1lZGlhdGVkIHRveGljaXR5IGZyb20gb3RoZXIgaW1tdW5lIHRoZXJhcHkgb3IgZ3JhZGUgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDMgaW5mdXNpb24gcmVhY3Rpb24uPGJyIC8%2BLSBMaXZlIGF0dGVudWF0ZWQgdmFjY2luYXRpb24gYWRtaW5pc3RlcmVkIHdpdGhpbiAzMCBkYXlzIHByaW9yIHRvIHJhbmRvbWl6YXRpb248YnIgLz4tIEhpc3Rvcnkgb2YgaHlwZXJzZW5zaXRpdml0eSB0byBkdXJ2YWx1bWFiIG9yIHRyZW1lbGltdW1hYiBvciBhbnkgZXhjaXBpZW50LiBQYXRpZW50cyB3aG8gaGF2ZSByZWNlaXZlZCBvdGhlciB0cmVhdG1lbnQgb3Igb3RoZXIgYW50aWJvZGllcyBtdXN0IG5vdCBoYXZlIGhhZCBpbnRvbGVyYWJsZXRveGljaXR5IG9yIHJlcXVpcmVkIHN0ZXJvaWRzIHRvIG1hbmFnZSB0b3hpY2l0eS48YnIgLz4tICBNZWFuIFFUIGludGVydmFsIGNvcnJlY3RlZCBmb3IgaGVhcnQgcmF0ZSB1c2luZyBGcmlkZXJpY2lhJ3MgZm9ybXVsYSAoUVRjRikgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDQ3MCBtc2VjIGluIHNjcmVlbmluZyBFQ0cgbWVhc3VyZWQgdXNpbmcgc3RhbmRhcmQgaW5zdGl0dXRpb25hbCBtZXRob2Qgb3IgaGlzdG9yeSBvZiBmYW1pbGlhbCBsb25nIFFUIHN5bmRyb21lLjxiciAvPi0gUGF0aWVudHMgd2hvIGhhdmUgdW50cmVhdGVkIGFuZC9vciB1bmNvbnRyb2xsZWQgY2FyZGlvdmFzY3VsYXIgY29uZGl0aW9ucyBhbmQvb3IgaGF2ZSBzeW1wdG9tYXRpYyBjYXJkaWFjIGR5c2Z1bmN0aW9uICh1bnN0YWJsZSBhbmdpbmEsIGNvbmdlc3RpdmUgaGVhcnQgZmFpbHVyZSwgbXlvY2FyZGlhbCBpbmZhcmN0aW9uIHdpdGhpbiB0aGUgcHJldmlvdXMgeWVhciBvciBjYXJkaWFjIHZlbnRyaWN1bGFyIGFycmh5dGhtaWFzIHJlcXVpcmluZyBtZWRpY2F0aW9uLCBoaXN0b3J5IG9mIDJuZCBvciAzcmQgZGVncmVlIGF0cmlvdmVudHJpY3VsYXIgY29uZHVjdGlvbiBkZWZlY3RzKS4gUGF0aWVudHMgd2l0aCBhIHNpZ25pZmljYW50IGNhcmRpYWMgaGlzdG9yeSwgZXZlbiBpZiBub3cgY29udHJvbGxlZCwgc2hvdWxkIGhhdmUgYSBMVkVGIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byA0NSUuIChOb3RlOiBwYXRpZW50cyB3aXRoIHVuY29tcGxpY2F0ZWQgY29udHJvbGxlZCBoeXBlcnRlbnNpb24gZG8gbm90IHJlcXVpcmUgTFZFRiBtZWFzdXJlbWVudCBpbiB0aGUgYWJzZW5jZSBvZiBvdGhlciBzaWduaWZpY2FudCBjYXJkaWFjIGhpc3RvcnkpPGJyIC8%2BLSBDb25jdXJyZW50IHRyZWF0bWVudCB3aXRoIG90aGVyIGludmVzdGlnYXRpb25hbCBkcnVncyBvciBhbnRpLWNhbmNlciB0aGVyYXB5PGJyIC8%2BLSBQYXRpZW50cyB3aXRoIHVudHJlYXRlZCBicmFpbiBvciBtZW5pbmdlYWwgbWV0YXN0YXNlcyBhcmUgbm90IGVsaWdpYmxlLiBQYXRpZW50cyB3aXRoIHRyZWF0ZWQgQ05TIGRpc2Vhc2Ugd2hvIGhhdmUgcmFkaW9sb2dpYyBBTkQgY2xpbmljYWwgZXZpZGVuY2Ugb2Ygc3RhYmxlIGJyYWluIG1ldGFzdGFzZXMsIHdpdGggbm8gZXZpZGVuY2Ugb2YgY2F2aXRhdGlvbiBvciBoZW1vcnJoYWdlIGluIHRoZSBicmFpbiBsZXNpb24sIGFyZSBlbGlnaWJsZSBwcm92aWRpbmcgdGhhdCB0aGV5IGFyZSBhc3ltcHRvbWF0aWMgYW5kIGRvIG5vdCByZXF1aXJlIGNvcnRpY29zdGVyb2lkcyAobXVzdCBoYXZlIGRpc2NvbnRpbnVlZCBzdGVyb2lkcyBhdCBsZWFzdCAxIHdlZWsgcHJpb3IgdG8gcmFuZG9taXphdGlvbikuPGJyIC8%2BLSBQcmVnbmFudCBvciBMYWN0YXRpbmcgV29tZW46IFdvbWVuIG9mIGNoaWxkYmVhcmluZyBwb3RlbnRpYWwgbXVzdCBoYXZlIGEgcHJlZ25hbmN5ICAgICAgICAgICAgICB0ZXN0ICh1cmluZSBvciBzZXJ1bSkgcHJvdmVuIG5lZ2F0aXZlIHdpdGhpbiAxNCBkYXlzIHByaW9yIHRvIHJhbmRvbWl6YXRpb24uIElmIHVyaW5lIHRlc3QgaXMgcG9zaXRpdmUsIHByZWduYW5jeSB0ZXN0aW5nIG1heSB0aGVuIGluY2x1ZGUgYW4gdWx0cmFzb3VuZCB0byBydWxlLW91dCBwcmVnbmFuY3kgaWYgYSBmYWxzZS1wb3NpdGl2ZSBpcyBzdXNwZWN0ZWQuIEZvciBleGFtcGxlLCB3aGVuIGJldGEtaHVtYW4gY2hvcmlvbmljIGdvbmFkb3Ryb3BpbiBpcyBoaWdoIGFuZCBwYXJ0bmVyIGlzIHZhc2VjdG9taXplZCwgaXQgbWF5IGJlIGFzc29jaWF0ZWQgd2l0aCB0dW1vdXIgcHJvZHVjdGlvbiBvZiBoQ0csIGFzIHNlZW4gd2l0aCBzb21lIGNhbmNlcnMuIFBhdGllbnQgd2lsbCBiZSBjb25zaWRlcmVkIGVsaWdpYmxlIGlmIGFuIHVsdHJhc291bmQgaXMgbmVnYXRpdmUgZm9yIHByZWduYW5jeS4gTWVuIGFuZCB3b21lbiBvZiBjaGlsZC1iZWFyaW5nIHBvdGVudGlhbCBtdXN0IGFncmVlIHRvIHVzZSBhZGVxdWF0ZSBjb250cmFjZXB0aW9uLjxiciAvPi0gUGF0aWVudHMgd2l0aCBzZXJpb3VzIGlsbG5lc3NlcyBvciBtZWRpY2FsIGNvbmRpdGlvbnMgd2hpY2ggd291bGQgbm90IHBlcm1pdCB0aGUgcGF0aWVudCB0byBiZSBtYW5hZ2VkIGFjY29yZGluZyB0byB0aGUgcHJvdG9jb2wgKGluY2x1ZGluZyBjb3J0aWNvc3Rlcm9pZCBhZG1pbmlzdHJhdGlvbiksIG9yIHdvdWxkIHB1dCB0aGUgcGF0aWVudCBhdCByaXNrLiBUaGlzIGluY2x1ZGVzIGJ1dCBpcyBub3QgbGltaXRlZCB0bzoJPGJyIC8%2BICAgICAgICAgICAgICAgLSBDb250cmFpbmRpY2F0aW9ucyB0byB0aGUgdXNlIG9mIHBlbWV0cmV4ZWQsIGdlbWNpdGFiaW5lLCBjaXNwbGF0aW4gYW5kL29yPGJyIC8%2BICAgICAgICAgICAgICAgICAgY2FyYm9wbGF0aW4gKGNvbnN1bHQgcHJvZHVjdCBtb25vZ3JhcGgpOzxiciAvPiAgICAgICAgICAgICAgIC0gSGlzdG9yeSBvZiBzaWduaWZpY2FudCBuZXVyb2xvZ2ljIG9yIHBzeWNoaWF0cmljIGRpc29yZGVyIHdoaWNoIHdvdWxkIGltcGFpciB0aGU8YnIgLz4gICAgICAgICAgICAgICAgICBhYmlsaXR5IHRvIG9idGFpbiBjb25zZW50IG9yIGxpbWl0IGNvbXBsaWFuY2Ugd2l0aCBzdHVkeSByZXF1aXJlbWVudHM7PGJyIC8%2BICAgICAgICAgICAgICAgLSBBY3RpdmUgaW5mZWN0aW9uIHJlcXVpcmluZyBzeXN0ZW1pYyB0aGVyYXB5OyAoaW5jbHVkaW5nIGFueSBwYXRpZW50IGtub3duIHRvIGhhdmU8YnIgLz4gICAgICAgICAgICAgICAgICBhY3RpdmUgaGVwYXRpdGlzIEIsIGhlcGF0aXRpcyBDIG9yIGh1bWFuIGltbXVub2RlZmljaWVuY3kgdmlydXMgKEhJVikgb3I8YnIgLz4gICAgICAgICAgICAgICAgICB0dWJlcmN1bG9zaXMpOzxiciAvPiAgICAgICAgICAgICAgIC0gQWN0aXZlIHBlcHRpYyB1bGNlciBkaXNlYXNlIG9yIGdhc3RyaXRpczs8YnIgLz4gICAgICAgICAgICAgICAtIEtub3duIHBuZXVtb25pdGlzIG9yIHB1bG1vbmFyeSBmaWJyb3NpcyB3aXRoIGNsaW5pY2FsbHkgc2lnbmlmaWNhbnQgaW1wYWlybWVudCBvZjxiciAvPiAgICAgICAgICAgICAgICAgIHB1bG1vbmFyeSBmdW5jdGlvbi4OZXhwYW5kYWJsZS1ib3gKVW5pdmVyc2l0eRxOSE1SQyBDbGluaWNhbCBUcmlhbHMgQ2VudHJlUFRoZSBVbml2ZXJzaXR5IG9mIFN5ZG5leTxiciAvPjExOS0xNDMgTWlzc2VuZGVuIFJvYWQsIDxiciAvPkNhbXBlcmRvd24sIE5TVyAyMDUwCUF1c3RyYWxpYQJNcxBIYW5ub3JhIEp1cmtvdmljY05ITVJDIENsaW5pY2FsIFRyaWFscyBDZW50cmUsIFVuaXZlcnNpdHkgb2YgU3lkbmV5PGJyIC8%2BMTE5LTE0MyBNaXNzZW5kZW4gUm9hZCwgQ2FtcGVyZG93biBOU1cgMjA1MAlBdXN0cmFsaWEPKzYxIDIgOTU2MiA1MDAwFUJSLjM0QGN0Yy51c3lkLmVkdS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM1MjgucGRmP3Q9Mjk3ZGQCLw88KwAEAQAPFgIfA2dkZAILD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM3ODMmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM3ODMucGRmP3Q9Mjk3ZGQCBw8PFgIfAgUGMzczNzgzZGQCCQ8PFgIfAgUOMTI2MTcwMDE0NDczNDdkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0yuwFlLVRDIDIuMCAtIEZ1cnRoZXIgZGV2ZWxvcG1lbnQgYW5kIHBpbG90IHRlc3Rpbmcgb2YgYW4gb25saW5lIHBzeWNob2xvZ2ljYWwgaW50ZXJ2ZW50aW9uIGFpbWVkIGF0IHJlZHVjaW5nIGFueGlldHksIGRlcHJlc3Npb24gYW5kIGZlYXIgb2YgY2FuY2VyIHJlY3VycmVuY2UgaW4gdGVzdGljdWxhciBjYW5jZXIgc3Vydml2b3JzClJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGlJldHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoxMi8xMC8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE0NDczNDcPMTIgT2N0b2JlciAyMDE3BHNob3dNVGVzdGljdWxhciBjYW5jZXINCiwgRGlzdHJlc3MsIEFueGlldHksIERlcHJlc3Npb24sIEZlYXIgb2YgY2FuY2VyIHJlY3VycmVuY2UEc2hvdwlBdXN0cmFsaWEEc2hvdxlOZXcgU291dGggV2FsZXMsIFZpY3RvcmlhBHNob3cEc2hvdwpSZWNydWl0aW5nA24vYQRzaG93CEFwcHJvdmVk6gxUaGUgYWltIG9mIHRoaXMgc3R1ZHkgaXMgdG8gcGlsb3QgdGVzdCBhbiBvbmxpbmUgcHN5Y2hvbG9naWNhbCBpbnRlcnZlbnRpb24gYWltZWQgYXQgcmVkdWNpbmcgYW54aWV0eSwgZGVwcmVzc2lvbiBhbmQgZmVhciBvZiBjYW5jZXIgcmVjdXJyZW5jZSBpbiB0ZXN0aWN1bGFyIGNhbmNlciBzdXJ2aXZvcnMuIDxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhZ2VkIDE4IHllYXJzIG9yIG92ZXIgYW5kIGhhdmUgY29tcGxldGVkIGFjdGl2ZSB0cmVhdG1lbnQgZm9yIHRlc3RpY3VsYXIgY2FuY2VyIGFuZCBhcmUgY3VycmVudGx5IGRpc2Vhc2UtZnJlZS4gPGJyIC8%2BPGJyIC8%2BU3R1ZHkgZGV0YWlsczxiciAvPkFsbCBzdHVkeSBwYXJ0aWNpcGFudHMgd2lsbCByZWNlaXZlIGEgMTIgd2VlayBhY2Nlc3MgdG8gYW4gaW50ZXJhY3RpdmUgd2ViLWJhc2VkIGludGVydmVudGlvbiBkZXNpZ25lZCB0byByZWR1Y2UgYW54aWV0eSwgZGVwcmVzc2lvbiBhbmQgRmVhciBvZiBDYW5jZXIgUmVjdXJyZW5jZSAoZS1UQyAyLjApLiBlLVRDIDIuMCBpcyBjb21wcmlzZWQgb2Ygc2l4IGludGVyYWN0aXZlIG1vZHVsZXMsIGluY2x1ZGluZyBwc3ljaG8tZWR1Y2F0aW9uYWwgbWF0ZXJpYWwsIHNob3J0IHN1cnZpdm9yIGFuZCBlZHVjYXRpb25hbCB2aWRlb3MsIGFuZCBvZmZsaW5lIGV4ZXJjaXNlcy4gTW9kdWxlcyB3ZXJlIGRlc2lnbmVkIHRvIHRha2UgYXBwcm94aW1hdGVseSBhbiBob3VyIHRvIGNvbXBsZXRlLCBkZXBlbmRpbmcgb24gbGV2ZWwgb2YgZW5nYWdlbWVudC4gVGhlIHdob2xlIGludGVydmVudGlvbiBpcyBzZWxmLWFkbWluaXN0ZXJlZCBhY2NvcmRpbmcgdG8gcGFydGljaXBhbnRz4oCZIG5lZWRzIGFuZCBpbnRlcmVzdHMsIGF0IHRoZWlyIG93biBwYWNlLiBQYXJ0aWNpcGFudHMgY2FuIHJldmlzaXQgdGhlIHdlYnNpdGUgYXQgYW55IHRpbWUgYW5kIHVzZSBpdHMgcmVzb3VyY2VzLiBFbGlnaWJsZSBtZW4gd2lsbCBjb21wbGV0ZSBiYXNlbGluZSBxdWVzdGlvbm5haXJlcywgZW5nYWdlIHdpdGggZS1UQyAyLjAgb3ZlciBhIHBlcmlvZCBvZiAxMiB3ZWVrcyBhbmQgY29tcGxldGUgaW1tZWRpYXRlIGFuZCAzLW1vbnRoIHBvc3QtaW50ZXJ2ZW50aW9uIHF1ZXN0aW9ubmFpcmVzLiBBIHNlcmllcyBvZiBhY2NlcHRhYmlsaXR5L3NhdGlzZmFjdGlvbiBzdXJ2ZXlzIGFyZSBlbWJlZGRlZCB3aXRoaW4gdGhlIHdlYnNpdGUgYW5kIHRoZSBpbW1lZGlhdGUgcG9zdC1pbnRlcnZlbnRpb24gcXVlc3Rpb25uYWlyZS4gPGJyIC8%2BPGJyIC8%2BSWYgc2hvd24gdG8gYmUgZmVhc2libGUgYW5kIGFjY2VwdGFibGUsIGUtVEMgY291bGQgYmUgYW4gaW5ub3ZhdGl2ZSBhcHByb2FjaCB0byBkZWxpdmVyaW5nIHN1cHBvcnRpdmUgY2FyZSBhbmQgY291bGQgYmUgd2lkZWx5IGRpc3NlbWluYXRlZCBmb3IgZnVydGhlciBldmFsdWF0aW9uIChvciBhcyBwYXJ0IG9mIHJvdXRpbmUgY2FyZSkgYXQgbGl0dGxlIGFkZGl0aW9uYWwgY29zdCBmb3IgdGVzdGljdWxhciBjYW5jZXIgc3Vydml2b3JzIHdobyBhcmUgc3RydWdnbGluZyB0byBhZGp1c3QgYW5kIHdvdWxkIG90aGVyd2lzZSBub3Qgc2Vlay9yZWNlaXZlIGhlbHAuhQLigKIJQWdlZCBvdmVyIDE4PGJyIC8%2B4oCiCUNvbXBsZXRlZCBhY3RpdmUgdHJlYXRtZW50IGZvciB0ZXN0aWN1bGFyIGNhbmNlciAoaS5lLiwgbm90IGN1cnJlbnRseSB1bmRlcmdvaW5nIGNoZW1vdGhlcmFweSBvciByYWRpb3RoZXJhcHksIG5vdCBhd2FpdGluZyBzdXJnZXJ5KTxiciAvPuKAoglBZGVxdWF0ZSBFbmdsaXNoIGxhbmd1YWdlIHNraWxscyB0byBwcm92aWRlIGluZm9ybWVkIGNvbnNlbnQ8YnIgLz7igKIJQ3VycmVudGx5IGRpc2Vhc2UtZnJlZS4IMTggWWVhcnMJIE5vIGxpbWl0BU1hbGVziAfigKIJTWVuIHdobyBhcmUgc3RpbGwgdW5kZXJnb2luZyB0cmVhdG1lbnQgZm9yIHRlc3RpY3VsYXIgY2FuY2VyIGFuZCBtZW4gZXhwZXJpZW5jaW5nIHJlY3VycmVudCBkaXNlYXNlIGFyZSBub3QgZWxpZ2libGUgdG8gcGFydGljaXBhdGUgYXMgd2UgYXJlIGludGVyZXN0ZWQgaW4gYWRkcmVzc2luZyBwb3N0LXRyZWF0bWVudCBjb25jZXJucyBvZiBtZW4gcHJldmlvdXNseSB0cmVhdGVkIGZvciBUQy48YnIgLz7igKIJTWVuIHdobyBhcmUgbm90IHByb2ZpY2llbnQgaW4gcmVhZGluZyBhbmQgd3JpdGluZyBFbmdsaXNoIGFyZSBleGNsdWRlZCBmcm9tIHBhcnRpY2lwYXRpbmcuIFRoZSB3ZWJzaXRlIGFuZCBhc3NvY2lhdGVkIGFzc2Vzc21lbnRzIGFyZSBsYXJnZWx5IHRleHQtYmFzZWQgYW5kIHdlIG9ubHkgaGFkIHN1ZmZpY2llbnQgcmVzb3VyY2VzIHRvIGRldmVsb3AgdGhlIHdlYnNpdGUgaW4gRW5nbGlzaC48YnIgLz7igKIJTWFsZXMgYWdlZCB1bmRlciAxOC4gSXQgaGFzIGJlZW4gZm91bmQgdGhhdCBjaGlsZHJlbiBhbmQgYWRvbGVzY2VudHMgdW5kZXIgdGhlIGFnZSBvZiAxOCBhZmZlY3RlZCBieSB0ZXN0aWN1bGFyIGNhbmNlciBmYWNlIGRpZmZlcmVudCBpc3N1ZXMgKGUuZy4gZGlzcnVwdGlvbiB0byBzY2hvb2wpIHRvIGFmZmVjdGVkIGFkdWx0cyAoQ2FycGVudGllciBldCBhbC4sIDIwMTEpLiBXZSBkaWQgbm90IGhhdmUgc3VmZmljaWVudCByZXNvdXJjZXMgdG8gZGV2ZWxvcCBhIHdlYnNpdGUgdGhhdCBjYXRlcmVkIGZvciBib3RoIGNoaWxkcmVuL2Fkb2xlc2NlbnRzIGFuZCBhZHVsdHMgYWZmZWN0ZWQgYnkgVEMsIHNvIGluaXRpYWxseSB3ZSBwbGFuIHRvIGV2YWx1YXRlIGUtVEMgMi4wIGluIGFkdWx0cywgd2hpY2ggaXMgdGhlIGxhcmdlc3QgZ3JvdXAgYWZmZWN0ZWQuDmV4cGFuZGFibGUtYm94Gk90aGVyIENvbGxhYm9yYXRpdmUgZ3JvdXBzLUluZ2hhbSBJbnN0aXR1dGUgZm9yIEFwcGxpZWQgTWVkaWNhbCBSZXNlYXJjaCQxIENhbXBiZWxsIFN0cmVldCBMaXZlcnBvb2wgTlNXIDIxNzAJQXVzdHJhbGlhAkRyEEFsYW4gJ0JlbicgU21pdGhXSW5naGFtIEluc3RpdHV0ZSBmb3IgQXBwbGllZCBNZWRpY2FsIFJlc2VhcmNoPGJyIC8%2BMSBDYW1wYmVsbCBTdHJlZXQgTGl2ZXJwb29sIE5TVyAyMTcwCUF1c3RyYWxpYRMrNjEgKDAyKSA4NzM4IDkyNDQgFWJlbi5zbWl0aEB1bnN3LmVkdS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM3ODMucGRmP3Q9Mjk3ZGQCLw88KwAEAQAPFgIfA2dkZAIND2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzIyNDImaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzIyNDIucGRmP3Q9Mjk3ZGQCBw8PFgIfAgUGMzcyMjQyZGQCCQ8PFgIfAgUOMTI2MTcwMDE0NDIzOTJkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0ydFF1YW50aWZpY2F0aW9uIG9mIHNlbnNpdGl2aXR5IG9mIFNlbGYtQ29sbGVjdGlvbiB2cyBQcmFjdGl0aW9uZXIgQ29sbGVjdGlvbiBQcm9qZWN0IGZvciBIUFYtYmFzZWQgY2VydmljYWwgc2NyZWVuaW5nClJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGlJldHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoxMS8xMC8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE0NDIzOTIPMTEgT2N0b2JlciAyMDE3BHNob3cZQ2VydmljYWwgQ2FuY2VyIFNjcmVlbmluZwRzaG93CUF1c3RyYWxpYQRzaG93CFZpY3RvcmlhBHNob3cEc2hvdwpSZWNydWl0aW5nA24vYQRzaG93CEFwcHJvdmVk7AhUaGUgYWltIG9mIHRoaXMgc3R1ZHkgaXMgdG8gY29tcGFyZSBzZWxmLWNvbGxlY3RlZCB2ZXJzdXMgcHJhY3RpdGlvbmVyIGNvbGxlY3RlZCBzYW1wbGVzIGZvciBIUFYtYmFzZWQgY2VydmljYWwgY2FuY2VyIHNjcmVlbmluZy48YnIgLz48YnIgLz5XaG8gaXMgaXQgZm9yPzxiciAvPllvdSBtYXkgYmUgZWxpZ2libGUgdG8gam9pbiB0aGlzIHN0dWR5IGlmIHlvdSBhcmUgYSBmZW1hbGUgYWdlZCAxOCB5ZWFycyBvciBhYm92ZSwgYW5kIGFyZSBhdHRlbmRpbmcgYW4gYXBwb2ludG1lbnQgZm9yIGEgY29scG9zY29waWMgcHJvY2VkdXJlLjxiciAvPjxiciAvPlN0dWR5IGRldGFpbHM8YnIgLz5BbGwgcGFydGljaXBhbnRzIGluIHRoaXMgc3R1ZHkgd2lsbCBhdHRlbmQgYSBzaW5nbGUgY2xpbmljYWwgYXBwb2ludG1lbnQsIGR1cmluZyB3aGljaCB0aW1lIHRoZXkgd2lsbCBzZWxmLWNvbGxlY3QgYSB2YWdpbmFsIHNhbXBsZSB1c2luZyBhIGRyeSBmbG9ja2VkIHN3YWIuIEZvbGxvd2luZyB0aGlzLCBhIGhlYWx0aGNhcmUgcHJhY3RpdGlvbmVyIHdpbGwgY29sbGVjdCBhIGNlcnZpY2FsIHNhbXBsZSB1c2luZyBhIGNlcnZpY2FsIGNvbGxlY3Rpb24gZGV2aWNlIChicnVzaC9icm9vbSkuIEJvdGggc2FtcGxlcyB3aWxsIGJlIHRlc3RlZCBmb3IgSHVtYW4gUGFwaWxsb21hdmlydXMgKEhQVikgbnVjbGVpYyBhY2lkLCBhbmQgdGhlIHJlc3VsdHMgY29tcGFyZWQuIFRoZSBzdHVkeSB3aWxsIGFsc28gZXhhbWluZSB0aGUgcmF0ZSBvZiBpbnZhbGlkIEhQViByZXN1bHRzIGZvciBib3RoIHRoZSBzZWxmLWNvbGxlY3RlZCBhbmQgcHJhY3RpdGlvbmVyLWNvbGxlY3RlZCBzYW1wbGVzLjxiciAvPjxiciAvPlRoaXMgc3R1ZHkgd2lsbCBjb250cmlidXRlIGluZm9ybWF0aW9uIG9uIHRoZSBzZW5zaXRpdml0eSBvZiBhIHNlbGYgY29sbGVjdGVkIHNhbXBsZSBmb3IgSFBWLWJhc2VkIGNlcnZpY2FsIHNjcmVlbmluZyBhbmQgbWF5IGNvbnRyaWJ1dGUgdG8gdGhpcyBtZXRob2QgYmVpbmcgYWRvcHRlZCBhcyBwYXJ0IG9mIHRoZSBuZXcgSFBWLWJhc2VkIG5hdGlvbmFsIGNlcnZpY2FsIHNjcmVlbmluZyBwcm9ncmFtIGR1ZSB0byBiZWdpbiBpbiBsYXRlIDIwMTcuPGJyIC8%2BPGJyIC8%2BPGJyIC8%2BPGJyIC8%2Bb1dvbWVuIHdobyBhcmUgYXR0ZW5kaW5nIGFuIGFwcG9pbnRtZW50IGZvciBhIGNvbHBvc2NvcGljIHByb2NlZHVyZS4gPGJyIC8%2BV29tZW4gd2hvIGhhdmUgZ2l2ZW4gaW5mb3JtZWQgY29uc2VudAgxOCBZZWFycwkgTm8gbGltaXQHRmVtYWxlcwlQcmVnbmFuY3kOZXhwYW5kYWJsZS1ib3gfQ2hhcml0aWVzL1NvY2lldGllcy9Gb3VuZGF0aW9ucx5WaWN0b3JpYW4gQ3l0b2xvZ3kgU2VydmljZSBMdGQ4MjY1IEZhcmFkYXkgU3RyZWV0PGJyIC8%2BQ2FybHRvbjxiciAvPlZpY3RvcmlhIDMwNTM8YnIgLz4JQXVzdHJhbGlhAkRyDERhdmlkIEhhd2tlc09WaWN0b3JpYW4gQ3l0b2xvZ3kgU2VydmljZSBMdGQ8YnIgLz4yNjUgRmFyYWRheSBTdHJlZXQsIENhcmx0b24sIFZpY3RvcmlhLCAzMDUzCUF1c3RyYWxpYQ4rNjEzIDkyNTAgMDMwMBJkaGF3a2VzQHZjcy5vcmcuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzcyMjQyLnBkZj90PTI5N2RkAi8PPCsABAEADxYCHwNnZGQCDw9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczNjY4JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNjY4LnBkZj90PTI5N2RkAgcPDxYCHwIFBjM3MzY2OGRkAgkPDxYCHwIFDjEyNjE3MDAxNDA4MzcwZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMo0BRXhlcmNpc2UgYXMgYSBkaWFnbm9zdGljIGFuZCB0aGVyYXBldXRpYyB0b29sIGZvciB0aGUgcHJldmVudGlvbiBvZiBjYXJkaW92YXNjdWxhciBtb3JiaWRpdHkgaW4gYnJlYXN0IGNhbmNlciBzdXJ2aXZvcnMgLSBhIHJhbmRvbWlzZWQgdHJpYWwgEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQk1LzEwLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTQwODM3MA8wNSBPY3RvYmVyIDIwMTcEc2hvdyJCcmVhc3QgQ2FuY2VyLCBDYXJkaWFjIER5c2Z1bmN0aW9uBHNob3cJQXVzdHJhbGlhBHNob3cIVmljdG9yaWEEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZw8xNiBPY3RvYmVyIDIwMTcEc2hvdwhBcHByb3ZlZNAXVGhlIGNoZW1vdGhlcmFweSBtZWRpY2F0aW9ucyB1c2VkIGZvciBicmVhc3QgY2FuY2VyIHRyZWF0bWVudCBhcmUgaW1wb3J0YW50IGZvciBhY2hpZXZpbmcgYSBjdXJlIGJ1dCBhIHBvdGVudGlhbCBzaWRlIGVmZmVjdCBpcyB0aGF0IHRoZXkgY2FuIGFmZmVjdCBoZWFydCBmdW5jdGlvbi4gQ3VycmVudCB0b29scyB1c2VkIHRvIGFzc2VzcyB5b3VyIGhlYXJ0IGZ1bmN0aW9uIGR1cmluZyBhbmQgZm9sbG93aW5nIGJyZWFzdCBjYW5jZXIgdHJlYXRtZW50IGNhbm5vdCBhY2N1cmF0ZWx5IHByZWRpY3QgdGhvc2Ugd2hvIHdpbGwgZ28gb24gdG8gZGV2ZWxvcCBoZWFydCBwcm9ibGVtcy4gQWVyb2JpYyBmaXRuZXNzIGlzIGFuIGltcG9ydGFudCBwcmVkaWN0b3Igb2Ygb3V0Y29tZXMgaW4gcGVvcGxlIHdpdGggY2VydGFpbiBmb3JtcyBvZiBoZWFydCBkaXNlYXNlLCBhbmQgaGF2aW5nIGEgcGFydGljdWxhcmx5IGxvdyBsZXZlbCBvZiBhZXJvYmljIGZpdG5lc3MgKHRlcm1lZCBmdW5jdGlvbmFsIGRpc2FiaWxpdHkpIGFwcGVhcnMgdmVyeSBjbG9zZWx5IGxpbmtlZCB3aXRoIHRoZSByaXNrIG9mIGRldmVsb3BpbmcgaGVhcnQgZmFpbHVyZS4gSW1wb3J0YW50bHksIGZ1bmN0aW9uYWwgZGlzYWJpbGl0eSBhbHNvIHJlZmxlY3RzIGFuIGV4ZXJjaXNlIGNhcGFjaXR5IHRoYXQgd291bGQgbGltaXQgeW91ciBhYmlsaXR5IHRvIHBlcmZvcm0gYmFzaWMgYWN0aXZpdGllcyBvZiBkYWlseSBsaXZpbmcgc3VjaCBhcyB3YWxraW5nIGJyaXNrbHksIGNsaW1iaW5nIHN0YWlycyBvciBnYXJkZW5pbmcuIDxiciAvPjxiciAvPldlIGFyZSBjb25kdWN0aW5nIGEgc3R1ZHkgd2hpY2ggYWltcyB0byBpZGVudGlmeSBob3cgYW50aHJhY3ljbGluZSBjaGVtb3RoZXJhcHkgYWZmZWN0cyB5b3VyIGV4ZXJjaXNlIGNhcGFjaXR5IGFuZCByaXNrIG9mIGZ1bmN0aW9uYWwgZGlzYWJpbGl0eS4gV2Ugd291bGQgYWxzbyBsaWtlIHRvIGFzc2VzcyBob3cgdGhlIHN0YW5kYXJkIHRlc3QgdXNlZCB0byBtZWFzdXJlIHlvdXIgaGVhcnQgZnVuY3Rpb24gYXQgcmVzdCBjb21wYXJlcyB0byBzdGF0ZSBvZiB0aGUgYXJ0IE1SSSBpbWFnaW5nIG9mIHRoZSBoZWFydCBpbiBiZWluZyBhYmxlIHRvIHByZWRpY3QgeW91ciByaXNrIG9mIGJlY29taW5nIGZ1bmN0aW9uYWxseSBkaXNhYmxlZC4gRnVydGhlcm1vcmUsIHdlIGFyZSB0ZXN0aW5nIHdoZXRoZXIgZXhlcmNpc2UgdHJhaW5pbmcgZHVyaW5nIGFuZCBmb2xsb3dpbmcgeW91ciBjaGVtb3RoZXJhcHkgaXMgaGVscGZ1bCBpbiBwcm90ZWN0aW5nIGFnYWluc3QgZnVuY3Rpb25hbCBkaXNhYmlsaXR5LiAgPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYXJlIGJldHdlZW4gdGhlIGFnZXMgNDAgYW5kIDc1IHllYXJzIG9sZCwgaGF2ZSBiZWVuIGRpYWdub3NlZCB3aXRoIGJyZWFzdCBjYW5jZXIgYW5kIGFyZSBzY2hlZHVsZWQgZm9yIEFudGhyYWN5Y2xpbmUtYmFzZWQgY2hlbW90aGVyYXB5LjxiciAvPjxiciAvPldoYXQgaXMgaW52b2x2ZWQ%2FPGJyIC8%2BWW91IHdpbGwgYmUgcGFydGljaXBhdGluZyBpbiBhIHJhbmRvbWlzZWQgY29udHJvbGxlZCByZXNlYXJjaCBwcm9qZWN0LiAgWW91IHdpbGwgYmUgcmFuZG9tbHkgYXNzaWduZWQgdG8gb25lIG9mIHR3byBncm91cHMgKGp1c3QgbGlrZSBhIGNvaW4gdG9zcyk7IHRoZSBjb250cm9sIGdyb3VwIHdoaWNoIHJlY2VpdmVzIHVzdWFsIGNhcmUgZm9yIHlvdXIgYnJlYXN0IGNhbmNlciwgb3IgdGhlIGV4ZXJjaXNlIGdyb3VwIHdoaWNoIHBhcnRpY2lwYXRlcyBpbiBhIDEyIG1vbnRoIHN1cGVydmlzZWQgZXhlcmNpc2UgaW50ZXJ2ZW50aW9uIHBsdXMgdXN1YWwgY2FyZS4gWW91IHdpbGwgaGF2ZSBhbiBlcXVhbCBjaGFuY2Ugb2YgYmVpbmcgcmFuZG9taXNlZCBpbnRvIGVpdGhlciB0aGUgZXhlcmNpc2Ugb3IgdXN1YWwgY2FyZSBncm91cC4gPGJyIC8%2BPGJyIC8%2BWW91IHdpbGwgdGhlbiB1bmRlcmdvIGEgc2VyaWVzIG9mIGFzc2Vzc21lbnRzIGF0IHRoZSBCYWtlciBIZWFydCBhbmQgRGlhYmV0ZXMgSW5zdGl0dXRlIHdpdGhpbiB0d28gd2Vla3Mgb2Ygc3RhcnRpbmcgeW91ciBjaGVtb3RoZXJhcHkgKEJhc2VsaW5lKSwgYWZ0ZXIgZmluaXNoaW5nIGNoZW1vdGhlcmFweSAoNCBtb250aHMpIGFuZCBhZ2FpbiBhdCAxMiBtb250aHMgYWZ0ZXIgc3RhcnRpbmcgY2hlbW90aGVyYXB5LiBFYWNoIHJvdW5kIG9mIHRlc3Rpbmcgd2lsbCBiZSBzcGxpdCBhY3Jvc3MgdHdvIGRheXMsIGFuZCBsYXN0IGJldHdlZW4gMS41LTMuNSBob3VycyBlYWNoLiBUaGlzIG1lYW5zIHlvdSB3aWxsIHZpc2l0IHRoZSBCYWtlciBIZWFydCBhbmQgRGlhYmV0ZXMgSW5zdGl0dXRlIG9uIDYgb2NjYXNpb25zLCB0b3RhbGxpbmcgYXBwcm94aW1hdGVseSAxNSBob3Vycy4gVGhlIHRlc3Rpbmcgc2Vzc2lvbnMgd2lsbCBpbmNsdWRlIGFzc2Vzc21lbnQgb2YgeW91ciBoZWFydCBmdW5jdGlvbiwgZXhlcmNpc2UgY2FwYWNpdHksIGJvZHkgY29tcG9zaXRpb24sIG11c2NsZSBzdHJlbmd0aC9mdW5jdGlvbiwgY29nbml0aXZlIGZ1bmN0aW9uIGFuZCBxdWFsaXR5IG9mIGxpZmUuIFRoZSBleGVyY2lzZSBwcm9ncmFtIHdpbGwgY29uc2lzdCBvZiB0aHJlZSB0byBmb3VyIHNlc3Npb25zIDYwLW1pbnV0ZSBleGVyY2lzZSBzZXNzaW9ucyBwZXIgd2VlayBvZiBtb2RlcmF0ZS1oaWdoIGludGVuc2l0eSBlbmR1cmFuY2UgKGkuZSBjeWNsaW5nLCB3YWxraW5nLCBqb2dnaW5nKSBhbmQgcmVzaXN0YW5jZSBleGVyY2lzZSBhaW1lZCBhdCBpbXByb3ZpbmcgeW91ciBoZWFydCBhbmQgbXVzY2xlIGZ1bmN0aW9uLiBUaGUgdHJhaW5pbmcgcHJvZ3JhbSB3aWxsIGJlIHByZXNjcmliZWQgYnkgYW4gQWNjcmVkaXRlZCBFeGVyY2lzZSBQaHlzaW9sb2dpc3QgKEFFUCkgd2hvIGlzIGV4cGVyaWVuY2VkIGluIHByZXNjcmliaW5nIGV4ZXJjaXNlIGZvciBpbmRpdmlkdWFscyB1bmRlcmdvaW5nIGNhbmNlciB0cmVhdG1lbnQulAJXb21lbiBhZ2VkIDQwLTc1IHllYXJzIHdobyBoYXZlIGJlZW4gZGlhZ25vc2VkIHdpdGggYnJlYXN0IGNhbmNlciBhbmQgYXJlIHNjaGVkdWxlZCB0byB1bmRlcmdvIGFudGhyYWN5Y2xpbmUtYmFzZWQgY2hlbW90aGVyYXB5IHdpbGwgYmUgZWxpZ2libGUgdG8gcGFydGljaXBhdGUgaW4gdGhlIHN0dWR5LiBBbGwgZWxpZ2libGUgcGFydGljaXBhbnRzIG11c3QgYWxzbyBvYnRhaW4gbWVkaWNhbCBhcHByb3ZhbCBmcm9tIHRoZWlyIHBoeXNpY2lhbiBiZWZvcmUgcGFydGljaXBhdGluZy4INDAgWWVhcnMINzUgWWVhcnMHRmVtYWxlc5kEUGFydGljaXBhbnRzIHdpbGwgYmUgZXhjbHVkZWQgaWYgdGhleSAoMSkgaGF2ZSBrbm93biBzdHJ1Y3R1cmFsIGhlYXJ0IGRpc2Vhc2UgKHN1Y2ggYXMgc3ltcHRvbWF0aWMgaXNjaGVtaWMgaGVhcnQgZGlzZWFzZSwgc2lnbmlmaWNhbnQgdmFsdnVsYXIgZGlzZWFzZSBvciBpbmhlcml0ZWQgY2FyZGlvbXlvcGF0aGllcyksICgyKSBoYXZlIGNvbnRyYWluZGljYXRpb25zIHRvIHRoZSBDTVIgcHJvY2VkdXJlIChwYWNlbWFrZXJzLCBpbXBsYW50ZWQgbWV0YWxsaWMgZm9yZWlnbiBib2R5IG9yIGRldmljZSksICgzKSBoYXZlIHRoZSBwcmVzZW5jZSBvZiBhbnkgc2VyaW91cyBjb250cmFpbmRpY2F0aW9uIG9yIHVuY29udHJvbGxlZCBtZWRpY2FsIGNvbmRpdGlvbiB0aGF0IHdvdWxkIGxpbWl0IHBhcnRpY2lwYXRpb24gaW4gdGhlIGV4ZXJjaXNlIHByb2dyYW0sICg0KSBhbiBpbmFiaWxpdHkgdG8gY29tcGxldGUgcXVlc3Rpb25uYWlyZXMgaW4gZW5nbGlzaCBsYW5ndWFnZSBvciAoNSkgc2lnbmlmaWNhbnQgY29nbml0aXZlIGltcGFpcm1lbnQuDmV4cGFuZGFibGUtYm94BU90aGVyIkJha2VyIEhlYXJ0IGFuZCBEaWFiZXRlcyBJbnN0aXR1dGU3NzUgQ29tbWVyY2lhbCBSb2FkLCBNZWxib3VybmUsIFZpY3RvcmlhIDMwMDQsIEF1c3RyYWxpYQlBdXN0cmFsaWECTXIPU3RlcGhlbiBGb3Vsa2VzZEJha2VyIEhlYXJ0IGFuZCBEaWFiZXRlcyBJbnN0aXR1dGUsIEFsZnJlZCBDZW50cmUsIExldmVsIDQsIDk5IENvbW1lcmNpYWwgUm9hZCwgTWVsYm91cm5lLCBWSUMsIDMwMDQJQXVzdHJhbGlhDys2MSAzIDg1MzIgMTExMRtzdGV2ZS5mb3Vsa2VzQGRlYWtpbi5lZHUuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNjY4LnBkZj90PTI5N2RkAi8PPCsABAEADxYCHwNnZGQCEQ9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczNjg0JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNjg0LnBkZj90PTI5N2RkAgcPDxYCHwIFBjM3MzY4NGRkAgkPDxYCHwIFDjEyNjE3MDAxNDA2MzkyZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMoABVGhlIGZlYXNpYmlsaXR5IG9mIE1SSSBvbmx5IFJhZGlhdGlvbiBUaGVyYXB5IFBsYW5uaW5nIGZvciBwYXRpZW50cyB3aXRoIGNhbmNlciBvZiB0aGUgQW5hbCBDYW5hbCwgUmVjdHVtLCBDZXJ2aXggb3IgRW5kb21ldHJpdW0STm90IHlldCByZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRhQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCTQvMTAvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDAIQXBwcm92ZWQKVXAgdG8gZGF0ZRNBQ1RSTjEyNjE3MDAxNDA2MzkyDzA0IE9jdG9iZXIgMjAxNwRzaG93RVJlY3RhbCBDYW5jZXIsIEFuYWwgQ2FuYWwgQ2FuY2VyLCBFbmRvbWV0cmlhbCBDYW5jZXIsIENlcnZpY2FsIENhbmNlcgRzaG93CUF1c3RyYWxpYQRzaG93D05ldyBTb3V0aCBXYWxlcwRzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nDzEwIE9jdG9iZXIgMjAxNwRzaG93CEFwcHJvdmVk0Ao8YnIgLz5UaGUgYWltIG9mIHRoaXMgc3R1ZHkgaXMgdG8gZXZhbHVhdGUgdGhlIGZlYXNpYmlsaXR5IG9mIE1SSSBvbmx5IHBsYW5uaW5nIGZvciByZWN0YWwsIGFuYWwgY2FuYWwgYW5kIGd5bmFlY29sb2dpY2FsIGNhbmNlciByYWRpYXRpb24gdGhlcmFweS7CoDxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhZ2VkIDE4IHllYXJzIG9yIG92ZXIgYW5kIGhhdmUgYSBoaXN0b2xvZ2ljYWwgZGlhZ25vc2lzIG9mIGEgbWFsaWduYW5jeSBvZiB0aGUgcmVjdHVtLCBhbmFsIGNhbmFsLCBjZXJ2aXggb3IgZW5kb21ldHJpdW0gYW5kIGFyZSBhYm91dCB0byBiZSB0cmVhdGVkIGRlZmluaXRpdmVseSB3aXRoIHJhZGljYWwgUmFkaW90aGVyYXB5IGF0IENhbHZhcnkgTWF0ZXIgTmV3Y2FzdGxlLsKgPGJyIC8%2BPGJyIC8%2BU3R1ZHkgZGV0YWlsczxiciAvPkFsbCBwYXJ0aWNpcGFudHMgZW5yb2xsZWQgaW50byB0aGlzIHN0dWR5IHdpbGwgcmVjZWl2ZSBhbiBhZGRpdGlvbmFsIE1SSSBzY2FuIGF0IHRoZSBEaWFnbm9zdGljIEltYWdpbmcgRGVwYXJ0bWVudCwgQ2FsdmFyeSBNYXRlciBOZXdjYXN0bGUsIHNjaGVkdWxlZCBvbiB0aGUgc2FtZSBkYXkgYXMgdGhlIHBhcnRpY2lwYW50cyBwbGFubmluZyBDVCBzY2FuLiBUaGVyZSB3aWxsIGJlIG5vIGNoYW5nZSB0byB0aGUgcGFydGljaXBhbnTigJlzIHRyZWF0bWVudCBpbiB0aGlzIHN0dWR5IOKAkyB0aGV5IHdpbGwgcmVjZWl2ZSB0aGUgZ29sZCBzdGFuZGFyZCBvZiBjYXJlIGFuZCB0cmVhdG1lbnQgYXMgcGVyIGRlcGFydG1lbnRhbCBwcm90b2NvbHMuIFRoZSBNUkkgc2NhbiB3aWxsIGJlIHVzZWQgZm9yIGNvbXBhcmF0aXZlIHB1cnBvc2VzIG9ubHkuPGJyIC8%2BVGhlIE1SSSB3aWxsIGJlIHVzZWQgdG8gY3JlYXRlIGEgInN5bnRoZXRpYyBDVCBzY2FuIiB3aGljaCB3aWxsIGJlIHVzZWQgcHJvc3BlY3RpdmVseSB0byBjb21wYXJlIHRvIHRoZSBwYXJ0aWNpcGFudHMgcHJldmlvdXNseSBhY3F1aXJlZCBDVCBzY2FuLjxiciAvPjxiciAvPlRoZSB1c2Ugb2YgTVJJIGFsb25lIGZvciByYWRpb3RoZXJhcHkgcGxhbm5pbmcgd2lsbCBlbGltaW5hdGUgdGhlIHBvdGVudGlhbCBpbmFjY3VyYWNpZXMgaW4gdGhlIGN1cnJlbnQgZnVzaW9uIHByb2Nlc3MgYmV0d2VlbiB0aGUgTVJJIGFuZCBDVCBzY2FuLiBUaGlzIG1ldGhvZCBoYXMgdGhlIHBvdGVudGlhbCB0byBpbXByb3ZlIHJhZGlvdGhlcmFweSBwbGFubmluZyB0ZWNobmlxdWVzIGJ5IGJldHRlciB1dGlsaXNpbmcgdGhlIHN1cGVyaW9yIHNvZnQgdGlzc3VlIGNvbnRyYXN0IHRoYXQgTVJJIGFmZm9yZHMuugIxLiA%2BMTggeWVhcnMgb2YgYWdlPGJyIC8%2BMi4gUGF0aWVudCBhYmxlIHRvIHByb3ZpZGUgaW5mb3JtZWQgY29uc2VudDxiciAvPjMuIEhpc3RvbG9naWNhbCBkaWFnbm9zaXMgb2YgYSBtYWxpZ25hbmN5IG9mIHRoZSByZWN0dW0sIGFuYWwgY2FuYWwsIGNlcnZpeCBvciBlbmRvbWV0cml1bTxiciAvPjQuIFRvIGJlIHRyZWF0ZWQgZGVmaW5pdGl2ZWx5IHdpdGggcmFkaWNhbCBSYWRpb3RoZXJhcHkgKy8tIGNvbmN1cnJlbnQgY2hlbW90aGVyYXB5ICsvLSBzdXJnZXJ5PGJyIC8%2BNS4gU3VpdGFibGUgZm9yIElNUlQgb3IgVk1BVCBwbGFubmluZzxiciAvPggxOCBZZWFycwkgTm8gbGltaXQWQm90aCBtYWxlcyBhbmQgZmVtYWxlc5QEMS4gRUNPRyBwZXJmb3JtYW5jZSBzdGF0dXMgPjE8YnIgLz4yLiBDbGluaWNhbCBldmlkZW5jZSBvZiBkaXN0YW50IG1ldGFzdGF0aWMgZGlzZWFzZTxiciAvPjMuIFdvbWVuIHdobyBhcmUgcHJlZ25hbnQgb3IgbGFjdGF0aW5nPGJyIC8%2BNC4gSW5hYmlsaXR5IHRvIGhhdmUgYSBNUkkgZHVlIHRvOjxiciAvPglhLiBJbXBsYW50ZWQgbWFnbmV0aWMgbWV0YWwgZS5nLiBpbnRyYW9jdWxhciBtZXRhbCwgYW5ldXJ5c20gY2xpcCwgb3Igb3RoZXIgbWV0YWxsaWMgaW1wbGFudDxiciAvPgliLiBQYWNlbWFrZXIvIGltcGxhbnRlZCBkZWZpYnJpbGxhdG9yPGJyIC8%2BICAgICBjLiBFeHRyZW1lIGNsYXVzdHJvcGhvYmlhPGJyIC8%2BNS4gTWVudGFsIGltcGFpcm1lbnQvaW50ZWxsZWN0dWFsIGltcGFpcm1lbnQgaW4gd2hpY2ggdGhlIHBhdGllbnQgd291bGQgaGF2ZSBkaWZmaWN1bHR5IGdpdmluZyBpbmZvcm1lZCBjb25zZW50IHRvIHRoZSBzdHVkeTxiciAvPjYuIEJhcmlhdHJpYyBwYXRpZW50cyAocGF0aWVudHMgd2l0aCBhIEJNSSA%2BIDMwKQ5leHBhbmRhYmxlLWJveApJbmRpdmlkdWFsDkxhdXJhIE8nQ29ubm9yblJhZGlhdGlvbiBPbmNvbG9neTxiciAvPkNhbHZhcnkgTWF0ZXIgTmV3Y2FzdGxlLCA8YnIgLz5Mb2NrZWQgQmFnIDcsIDxiciAvPkh1bnRlciBSZWdpb24gTWFpbCBDZW50cmUsIE5TVyAyMzEwCUF1c3RyYWxpYQJNcw5MYXVyYSBPJ0Nvbm5vcm5SYWRpYXRpb24gT25jb2xvZ3k8YnIgLz5DYWx2YXJ5IE1hdGVyIE5ld2Nhc3RsZSwgPGJyIC8%2BTG9ja2VkIEJhZyA3LCA8YnIgLz5IdW50ZXIgUmVnaW9uIE1haWwgQ2VudHJlLCBOU1cgMjMxMAlBdXN0cmFsaWEOKzYxIDIgNDAxNDMxNjgiTGF1cmEuTydDb25ub3JAY2FsdmFyeW1hdGVyLm9yZy5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM2ODQucGRmP3Q9Mjk3ZGQCLw88KwAEAQAPFgIfA2dkZAITD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM3MDEmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM3MDEucGRmP3Q9Mjk3ZGQCBw8PFgIfAgUGMzczNzAxZGQCCQ8PFgIfAgUOMTI2MTcwMDE0MDIzMzZkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0yW0N5dG9raW5lIHJlc3BvbnNlIGluIHRoZSBwbGV1cmFsIGZsdWlkIGFuZCBibG9vZCBpbiBtaW5pbWFsLWludmFzaXZlIGFuZCBvcGVuIGVzb3BoYWdlY3RvbXkJQ29tcGxldGVkB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRpSZXRyb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUJNC8xMC8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE0MDIzMzYPMDQgT2N0b2JlciAyMDE3BHNob3cUb2Vzb3BoYWdlYWwgY2FuY2VyDQoEc2hvdwlBdXN0cmFsaWEEc2hvdw9Tb3V0aCBBdXN0cmFsaWEEc2hvdwRzaG93CUNvbXBsZXRlZANuL2EEc2hvdwhBcHByb3ZlZKIBVG8gaW52ZXN0aWdhdGUgY3l0b2tpbmUgUmVzcG9uc2UgaW4gdGhlIGJsb29kIGFuZCBwbGV1cmFsIGZsdWlkIGluIGxhcGFyb3Njb3BpYyB2ZXJzdXMgb3BlbiBlc29waGFnZWN0b215IGluIGVzb3BoYWdlYWwgY2FuY2VyLiBQcm9zcGVjdGl2ZSBub24gcmFuZG9taXNlZCBUcmlhbC4gfnBhdGllbnRzIGVsaWdpYmxlIGZvciBPcGVyYXRpb24sIG9lc3BoYWdlYWwgY2FuY2VyIHJlcXVpcmluZyBzdXJnZXJ5LCBhZ2VkIG92ZXIgMTggeWVhcnMsIGFibGUgdG8gc2lnbiBpbiBmb3IgaW5mb3JtZWQgY29uc2VudAgxOCBZZWFycwkgTm8gbGltaXQWQm90aCBtYWxlcyBhbmQgZmVtYWxlcxVub3QgZml0IGZvciBvcGVyYXRpb24OZXhwYW5kYWJsZS1ib3gISG9zcGl0YWwXRmxpbmRlcnMgTWVkaWNhbCBDZW50cmUfQmVkZm9yZCBQYXJrIFNBIDUwNDIsIEF1c3RyYWxpYQlBdXN0cmFsaWECRHILVGFyaWsgRGVsa287VW5pc3BpdGFsIEJhc2VsLCBTcGl0YWxzdHJhc3NzZSAyMSwgNDAzMSBCYXNlbCwgU3dpdHplcmxhbmQLU3dpdHplcmxhbmQQKzQxIDc2IDkxMCAzMCAyMRJ0YXJpay5kZWxrb0B1c2IuY2gGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNzAxLnBkZj90PTMxMmRkAi8PPCsABAEADxYCHwNnZGQCFQ9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczNjk3JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNjk3LnBkZj90PTMxMmRkAgcPDxYCHwIFBjM3MzY5N2RkAgkPDxYCHwIFDjEyNjE3MDAxNDAwMzU4ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMnBQZWx2aWMgRmxvb3IgTXVzY2xlIEV4ZXJjaXNlIFRyYWluaW5nIGluIFByb3N0YXRlY3RvbXkgUGF0aWVudHMgb24gdXJpbmFyeSwgc2V4dWFsIGZ1bmN0aW9uIGFuZCBxdWFsaXR5IG9mIGxpZmUuClJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGlJldHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQk0LzEwLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTQwMDM1OA8wNCBPY3RvYmVyIDIwMTcEc2hvdztQcm9zdGF0ZSBDYW5jZXIsIFVyaW5hcnkgaW5jb250aW5lbmNlLCBFcmVjdGlsZSBEeXNmdW5jdGlvbgRzaG93CUF1c3RyYWxpYQRzaG93EVdlc3Rlcm4gQXVzdHJhbGlhBHNob3cEc2hvdwpSZWNydWl0aW5nA24vYQRzaG93CEFwcHJvdmVk1ApUaGUgYWltIG9mIHRoaXMgc3R1ZHkgaXMgdG8gZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiB0d28gZGlmZmVyZW50IHBlbHZpYyBmbG9vciBtdXNjbGUgZXhlcmNpc2UgdHJhaW5pbmcgKFBGTUVUKSBtZXRob2RzIG9uIHVyaW5hcnkgZnVuY3Rpb24sIGVyZWN0aWxlIGR5c2Z1bmN0aW9uIGFuZCBxdWFsaXR5IG9mIGxpZmUgaW4gcHJvc3RhdGVjdG9teSBwYXRpZW50cy4gPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYXJlIGFnZWQgMTggeWVhcnMgb3Igb3ZlciBhbmQgaGF2ZSBwcm9zdGF0ZSBjYW5jZXIgYWJvdXQgdG8gYmUgdHJlYXRlZCBieSByYWRpY2FsIHByb3N0YXRlY3RvbXkuIDxiciAvPjxiciAvPlN0dWR5IGRldGFpbHM8YnIgLz5QYXJ0aWNpcGFudHMgd2lsbCBiZSBhbGxvY2F0ZWQgYnkgY2hhbmNlIHRvIG9uZSBvZiB0d28gZXhlcmNpc2UgdHJhaW5pbmcgcHJvZ3JhbXMgd2hpY2ggd2lsbCBjb21wbGVtZW50IHVzdWFsIGNvbXBvbmVudHMgb2YgY29udGluZW5jZSBtYW5hZ2VtZW50IGNvbXBsZXRlZCBvdmVyIGEgdGhyZWUgbW9udGhzIHBlcmlvZC4gT25lIGdyb3VwIHdpbGwgcmVjZWl2ZSB0aGUgaGlnaCBpbnRlbnNpdHkgcGVsdmljIGZsb29yIG11c2NsZSBleGVyY2lzZSB0cmFpbmluZyAoUEZNRVQpIGFuZCB0aGUgb3RoZXIgd2lsbCByZWNlaXZlIHNoYW0gUEZNRVQuIE90aGVyIHVzdWFsIGNhcmUgY29tcG9uZW50cyBvZiBtYW5hZ2VtZW50IHdoaWNoIGJvdGggZ3JvdXBzIHdpbGwgcmVjZWl2ZSBpbmNsdWRlIGdlbmVyYWwgY29udGluZW5jZSwgYXZvaWRhbmNlIG9mIGNhZmZlaW5lIGFuZCBhbGNvaG9sLCBhbmQgbGlmZXN0eWxlIG1vZGlmaWNhdGlvbiBhZHZpY2UuIE1lYXN1cmVtZW50IG9mIHVyaW5hcnkgaW5jb250aW5lbmNlLCBlcmVjdGlsZSBkeXNmdW5jdGlvbiBhbmQgUXVhbGl0eSBvZiBMaWZlIHdpbGwgYmUgdGFrZW4gYXQgY29tcGxldGlvbiBvZiB0aGUgaW50ZXJ2ZW50aW9uIHByb2dyYW0uPGJyIC8%2BVGhpcyBzdHVkeSBtYXkgYmUgYmVuZWZpY2lhbCB0byBtZWRpY2FsIGhlYWx0aCBjYXJlIHRlYW1zIHByb3ZpZGluZyBwcmUgYW5kIHBvc3QgcmVoYWJpbGl0YXRpb24gc3RyYXRlZ2llcyBmb3IgbWVuIHVuZGVyZ29pbmcgc3VyZ2VyeSBmb3IgcHJvc3RhdGUgY2FuY2VyLiBCb3RoIHVyaW5hcnkgaW5jb250aW5lbmNlIGFuZCBlcmVjdGlsZSBkeXNmdW5jdGlvbiBhcmUgZXhwZWN0ZWQgc2lkZSBhZmZlY3RzIGZvciBtZW4gZnJvbSB0cmVhdG1lbnQgYW5kIG1ldGhvZHMgdG8gaW1wcm92ZSB0aGVzZSBoYXZlIGxpbWl0ZWQgZXZpZGVuY2UgaW4gcmVzZWFyY2ggY3VycmVudGx5LndTdGFnZSAxICYgMiBQQ2EgcGF0aWVudHMgKG49NTApIG92ZXIgMTggeWVhcnMgYmVpbmcgdHJlYXRlZCBieSByYWRpY2FsIHByb3N0YXRlY3RvbXkgd2lsbCBiZSByZWNydWl0ZWQgcHJpb3IgdG8gc3VyZ2VyeQgxOCBZZWFycwkgTm8gbGltaXQFTWFsZXPIAkV4Y2x1c2lvbiBjcml0ZXJpYSB3aWxsIGluY2x1ZGU7IGFjdXRlIGlsbG5lc3MsIGN1cnJlbnQgc21va2VycyAoPDEgeWVhciBwb3N0IHF1aXR0aW5nKSwgcGF0aWVudHMgd2l0aCB0eXBlcyAxIG9yIDIgZGlhYmV0ZXMgYW5kIHRob3NlIHdpdGggYWxjb2hvbCBjb25zdW1wdGlvbiA%2BIDIxIHVuaXRzL3dlZWsuIFBhcnRpY2lwYW50cyB3aXRoIGVzdGFibGlzaGVkIGJ1dCBjb250cm9sbGVkIHJpc2sgZmFjdG9ycyBmb3IgQ1ZEIHdpbGwgbm90IGJlIGV4Y2x1ZGVkIGZyb20gcGFydGljaXBhdGlvbiwgbm9yIHdpbGwgdGhvc2UgcmVjZWl2aW5nIHN0YWJsZSBtZWRpY2F0aW9ucy4OZXhwYW5kYWJsZS1ib3gKSW5kaXZpZHVhbA1Kb2FubmUgTWlsaW9zbFVuaXZlcnNpdHkgb2YgV2VzdGVybiBBdXN0cmFsaWE8YnIgLz5FbnRyYW5jZSA0IFBhcmt3YXk8YnIgLz5DcmF3bGV5IDYwMDk8YnIgLz5XZXN0ZXJuIEF1c3RyYWxpYTxiciAvPjxiciAvPglBdXN0cmFsaWEDTXJzDUpvYW5uZSBNaWxpb3PWAVRoZSBVbml2ZXJzaXR5IG9mIFdlc3Rlcm4gQXVzdHJhbGlhPGJyIC8%2BRW50cmFuY2UgNCBQYXJrd2F5IFJkLCA8YnIgLz5DcmF3bGV5IDYwMDk8YnIgLz48YnIgLz5hbHNvPGJyIC8%2BQ29tcGxldGUgUGh5c2lvdGhlcmFweSAmIE1lbidzIEhlYWx0aDxiciAvPlU3LzEyIERhdmFsbGlhIFJkLCA8YnIgLz5EdW5jcmFpZyA2MDIzPGJyIC8%2BV2VzdGVybiBBdXN0cmFsaWE8YnIgLz4JQXVzdHJhbGlhECs2MSAwNDA4IDAyMiA5NTAYaW5mby5wcm9zdC5pbmNAZ21haWwuY29tBmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MzY5Ny5wZGY%2FdD0zMTJkZAIvDzwrAAQBAA8WAh8DZ2RkAhcPZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3MjcxNiZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MjcxNi5wZGY%2FdD0zMTJkZAIHDw8WAh8CBQYzNzI3MTZkZAIJDw8WAh8CBQ4xMjYxNzAwMTM2ODMyNWRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTJwTWFnbmV0aWMgdHJhY2VyIHZlcnNlcyBzdGFuZGFyZCB0ZWNobmlxdWUgZm9yIHNlbnRpbmVsIG5vZGUgYmlvcHN5IGluIGJyZWFzdCBjYW5jZXI6IEEgc2luZ2xlIGNlbnRyZSBwaWxvdCBzdHVkeRJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGFByb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUJMjcvOS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDEzNjgzMjURMjcgU2VwdGVtYmVyIDIwMTcEc2hvdw1CcmVhc3QgY2FuY2VyBHNob3cLTmV3IFplYWxhbmQGaGlkZGVuAARzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nETI4IFNlcHRlbWJlciAyMDE3BHNob3cIQXBwcm92ZWSxFkJyZWFzdCBjYW5jZXIgaXMgdGhlIG1vc3QgY29tbW9uIGNhbmNlciBmb3Igd29tYW4gaW4gTmV3IFplYWxhbmQuIEFuIGltcG9ydGFudCBhc3BlY3QgdG8gdGhlIG1hbmFnZW1lbnQgb2Ygd29tZW4gd2l0aCBicmVhc3QgY2FuY2VyIGlzIHNlbnRpbmVsIGx5bXBoIG5vZGUgKFNMTikgYmlvcHN5LiBUaGUgU0xOIGh5cG90aGVzaXMgaXMgdGhhdCBtaWdyYXRpb24gb2YgdHVtb3VyIGNlbGxzIGZyb20gdGhlIHByaW1hcnkgdHVtb3VyIG1ldGFzdGFzaXplcyB0byBvbmUgb3IgYSBmZXcgbHltcGggbm9kZXMgYmVmb3JlIGludm9sdmluZyB0aGUgb3RoZXIgbHltcGggbm9kZXMuIDxiciAvPjxiciAvPlRoZSBjdXJyZW50IHN0YW5kYXJkIHRlY2huaXF1ZSBmb3IgU0xOIGJpb3BzeSBpbnZvbHZlcyB0aGUgdXNlIG9mIHJhZGlvaXNvdG9wZSBhbmQvb3IgYmx1ZSBkeWUgdHJhY2VycyBpbmplY3RlZCBpbnRvIHRoZSBwZXJpLXR1bW91ciB0aXNzdWUsIHdoaWNoIHdpbGwgdGhlbiBlbnRlciBseW1waGF0aWMgY2hhbm5lbHMgdG8gcGFzc2l2ZWx5IGZsb3cgdG8gU0xOcy4gU0xOcyBpbmZpbHRyYXRlZCB3aXRoIHRoZSByYWRpb2lzb3RvcGUgd2lsbCBiZSBpZGVudGlmaWVkIHVzaW5nIGEgaGFuZC1oZWxkIHByb2JlIHdoaWNoIG1ha2VzIGEgbG91ZCBub2lzZSBhbmQgZ2l2ZXMgYSBoaWdoIGNvdW50IG9uIHRoZSBwcm9iZSBtb25pdG9yIGFzIGl0IGNsb3NlcyBpbiBvbiBhIOKAmGhvdOKAmSBseW1waCBub2RlOyBTTE5zIGluZmlsdHJhdGVkIHdpdGggdGhlIGJsdWUgZHllIHdpbGwgYXBwZWFyIHVubmF0dXJhbGx5IGJsdWUuICBUaGVyZSBhcmUgc29tZSBsaW1pdGF0aW9ucywgaG93ZXZlciwgdG8gdGhlIHVzZSBvZiB0aGVzZSB0cmFjZXJzLiBUaGUgdXNlIG9mIHJhZGlvaXNvdG9wZSByZXF1aXJlcyBudWNsZWFyIG1lZGljaW5lIGZhY2lsaXRpZXMsIHN0b3JhZ2UgYW5kIGhhbmRsaW5nIHByb3RvY29scywgc3BlY2lhbGlzZWQgcGVyc29ubmVsIHdobyBoYXZlIHVuZGVyZ29uZSByYWRpYXRpb24gc2FmZXR5IGVkdWNhdGlvbiBhcyB3ZWxsIGFzIHRoZSBuZWVkIGZvciBwYXRpZW50cyB0byBwcmVzZW50IHRoZSBkYXkgYmVmb3JlIHN1cmdlcnkgZm9yIGluamVjdGlvbiBvZiB0aGUgdHJhY2VyIGl0c2VsZi4gVGhlc2UgZmFjdG9ycyBhcmUgcGFydGljdWxhcmx5IHNpZ25pZmljYW50IGZvciBwcm92aW5jaWFsIGNlbnRyZXMgYW5kL29yIHBhdGllbnRzIGxpdmluZyBpbiBtb3JlIGlzb2xhdGVkIGFyZWFzLiBUaGUgYmx1ZSBkeWUgYWxzbyB0YXR0b29zIHRoZSBza2luIHRoYXQgY2FuIHNvbWV0aW1lcyBsYXN0IHVwIHRvIHNldmVyYWwgbW9udGhzIGFuZCBpcyBhc3NvY2lhdGVkIHdpdGggc2V2ZXJlIGFuYXBoeWxhY3RvaWQgcmVhY3Rpb25zIGluIDAuMSB0byAxLjElIG9mIHBhdGllbnRzLiA8YnIgLz48YnIgLz5Nb3JlIHJlY2VudGx5LCBhIG5ldyB0ZWNobmlxdWUgZm9yIFNMTiBiaW9wc3kgaGFzIGJlZW4gZGV2ZWxvcGVkIHVzaW5nIGEgbWFnbmV0aWMgc3VwZXJwYXJhbWFnbmV0aWMgaXJvbiBveGlkZSB0cmFjZXIgKFNQSU8pLCBpbmplY3RlZCBpbiBhIHNpbWlsYXIgZmFzaGlvbiB0byBibHVlIGR5ZSBhbmQgbG9jYWxpc2VkIGludHJhb3BlcmF0aXZlbHkgdXNpbmcgYSBoYW5kaGVsZCBtYWduZXRpYyBwcm9iZSBzaW1pbGFyIHRvIHRoZSBnYW1tYSBwcm9iZS4gVGhlIFNQSU8gdHJhY2VyIGhhcyBiZWVuIGluIHVzZSBpbiBjbGluaWNhbCBwcmFjdGljZSBmb3Igb3ZlciAyMCB5ZWFycyBhcyBpbnRyYXZlbm91cyBjb250cmFzdCBmb3IgTVJJLiBUaGUgcHJvYmUgcmVzcG9uZHMgdG8gdGhlIG1hZ25ldGljIHNpZ25hbCBnaXZlbiBvZmYgYnkgdGhlIHByZXNlbmNlIG9mIHRoZSB0cmFjZXIuIDxiciAvPjxiciAvPlRoaXMgd2lsbCBiZSBhIHNpbmdsZSBjZW50cmUgcGlsb3Qgc3R1ZHkgY29uZHVjdGVkIGJ5IHRoZSBCcmVhc3QgVW5pdCB3aXRoaW4gdGhlIGRlcGFydG1lbnQgb2YgR2VuZXJhbCBTdXJnZXJ5IGF0IEF1Y2tsYW5kIENpdHkgSG9zcGl0YWwuIFdlIHdpbGwgYmUgdHJpYWxsaW5nIHRoaXMgbmV3IHRlY2huaXF1ZSBmb3Igc2VudGluZWwgbHltcGggYmlvcHN5IHVzaW5nIG1hZ25ldGljIHRyYWNlciAoU2llbm5hKSBhbmQgaXRzIGhhbmRoZWxkIG1hZ25ldGljIGxvY2FsaXNhdGlvbiBwcm9iZSAoU2VudGlNYWcpIGluIGFkZGl0aW9uIHRvIHRoZSBjdXJyZW50IHN0YW5kYXJkIHRlY2huaXF1ZSAocmFkaW9pc290b3BlIGFuZCBibHVlIGR5ZSkuIFRoZSByYWRpb3RyYWNlciBhbmQgYmx1ZSBkeWUgd2lsbCBiZSBhZG1pbmlzdGVyZWQgYXMgcGVyIHRoZSBjdXJyZW50IHByYWN0aWNlIGFzIHdlbGwgYXMgdGhlIG1hZ25ldGljIHRyYWNlci4gVGhpcyBwaWxvdCBzdHVkeSB3aWxsIGhhdmUgdGhlIGZvbGxvd2luZyBmZWFzaWJpbGl0eSBhaW1zIGFuZCBzY2llbnRpZmljIGFpbXMuIDEuCUZlYXNpYmlsaXR5IOKAkyByZWNydWl0bWVudDogQ2FuIHdlIHJlY3J1aXQgYXQgYSBtaW5pbXVtIG9uZSBwYXRpZW50IGEgd2Vlaz88YnIgLz4yLglGZWFzaWJpbGl0eSDigJMgcmVzb3VyY2VzOiBXaGF0IGlzIHRoZSBsZWFybmluZyBjdXJ2ZSBmb3IgdGhpcyBuZXcgdGVjaG5pcXVlIGZvciBpbmRpdmlkdWFsIHN1cmdlb25zIGluIG91ciBVbml0PyA8YnIgLz4zLglTY2llbnRpZmljIOKAkyBwcmltYXJ5IGVuZHBvaW50OiBwcm9wb3J0aW9uIG9mIHN1Y2Nlc3NmdWwgcHJvY2VkdXJlcyBmb3IgU0xOIGlkZW50aWZpY2F0aW9uIChpZGVudGlmaWNhdGlvbiByYXRlIHBlciBwYXRpZW50KSBieSB0aGUgbWFnbmV0aWMgbWV0aG9kIGNvbXBhcmVkIHdpdGggdGhlIHN0YW5kYXJkIG1ldGhvZCAocmFkaW9pc290b3BlIGFuZCBwYXRlbnQgYmx1ZSkuIO8BQWxsIHdvbWVuIG92ZXIgdGhlIGFnZSBvZiAxOCB1bmRlcmdvaW5nIHNlbnRpbmVsIG5vZGUgYmlvcHN5IGZvciBicmVhc3QgY2FuY2VyIChpbnZhc2l2ZSBvciBkdWN0YWwgY2FyY2lub21hLCBvciBleHRlbnNpdmUgZHVjdGFsIGNhcmNpbm9tYSBpbi1zaXR1KSB3aXRoIGNsaW5pY2FsbHkgYW5kIHJhZGlvbG9naWNhbGx5IG5vZGUtbmVnYXRpdmUgYXhpbGxhZSB3aWxsIGJlIGVsaWdpYmxlIHRvIHBhcnRpY2lwYXRlLiAIMTggWWVhcnMJIE5vIGxpbWl0B0ZlbWFsZXPAAUV4Y2x1c2lvbiBjcml0ZXJpYSBpbmNsdWRlIHBhdGllbnRzIHdpdGggYWxsZXJneSB0byBpcm9uIG9yIGRleHRyYW4gY29tcG91bmRzLCBpcm9uIG92ZXJsb2FkIGRpc2Vhc2UsIHBhY2VtYWtlciBvciBmZXJyb3VzIG1ldGFsLWNvbnRhaW5pbmcgZGV2aWNlcyBpbiB0aGUgY2hlc3Qgd2FsbCwgcHJlZ25hbmN5IGFuZCBsYWN0YXRpb24uIA5leHBhbmRhYmxlLWJveApJbmRpdmlkdWFsEU1yIElzYWFjIENyYW5zaGF3O0F1Y2tsYW5kIENpdHkgSG9zcGl0YWwsIDIgUGFyayBBdmUsIEdyYWZ0b24sIDEwMjMsIEF1Y2tsYW5kC05ldyBaZWFsYW5kAkRyEkFsZXhhbmRyYSBKYWNvYnNvbjtBdWNrbGFuZCBDaXR5IEhvc3BpdGFsLCAyIFBhcmsgQXZlLCBHcmFmdG9uLCAxMDIzLCBBdWNrbGFuZAtOZXcgWmVhbGFuZAwrNjQyMTI1Nzk0NDcSQWxleEpAYWRoYi5nb3Z0Lm56BmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MjcxNi5wZGY%2FdD0zMTJkZAIvDzwrAAQBAA8WAh8DZ2RkAhkPZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3MzY0MiZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUmL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MzY0Mi5wZGY%2FdD0zMTJkZAIHDw8WAh8CBQYzNzM2NDJkZAIJDw8WAh8CBQ4xMjYxNzAwMTM2NDM2OWRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTJwRW5kb2N1ZmYtdmlzaW9uIGFzc2lzdGVkIGNocm9tb2VuZG9zY29weSBmb3Igc3VydmVpbGxhbmNlIGZvciBjYW5jZXIgYW5kIGR5c3BsYXNpYSBpbiBpbmZsYW1tYXRvcnkgYm93ZWwgZGlzZWFzZQpSZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRpSZXRyb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUJMjcvOS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDEzNjQzNjkRMjcgU2VwdGVtYmVyIDIwMTcEc2hvdy1JbmZsYW1tYXRvcnkgQm93ZWwgRGlzZWFzZSwgQ29sb3JlY3RhbCBDYW5jZXIEc2hvdwlBdXN0cmFsaWEEc2hvdwhWaWN0b3JpYQRzaG93BHNob3cKUmVjcnVpdGluZwNuL2EEc2hvdwhBcHByb3ZlZP8MUGF0aWVudHMgd2l0aCB1bGNlcmF0aXZlIGNvbGl0aXMgb3IgQ3JvaG4ncyBjb2xpdGlzIGhhdmUgYSBzbGlnaHRseSBoaWdoZXIgcmlzayBvZiBib3dlbCBjYW5jZXIgYWZ0ZXIgaGF2aW5nIHRoZSBkaXNlYXNlIGZvciBhIG51bWJlciBvZiB5ZWFycy4gQ29sb25vc2NvcHkgaXMgcmVjb21tZW5kZWQgdG8gZmluZCBwb2x5cHMgd2hpY2ggY2FuIGJlIGZsYXQgYW5kIHNvbWV0aW1lcyBkaWZmaWN1bHQgdG8gZGV0ZWN0LiBUaGlzIHN0dWR5IGFpbXMgdG8gdGVzdCB0aGUgc2FmZXR5IGFuZCBlZmZpY2FjeSBvZiBhIG5ldyBkZXZpY2UgbmFtZWQgdGhlIEVuZG9jdWZmLXZpc2lvbiwgZm9yIHN1cnZlaWxsYW5jZSBmb3IgY2FuY2VyIGFuZCBkeXNwbGFzaWEgaW4gaW5mbGFtbWF0b3J5IGJvd2VsIGRpc2Vhc2UuPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYWdlZCAxOCB5ZWFycyBvciBhYm92ZSBhbmQgaGF2ZSB1bGNlcmF0aXZlIGNvbGl0aXMgb3IgQ3JvaG7igJlzIGNvbGl0aXMgaW52b2x2aW5nIG1vcmUgdGhhbiBvbmUgdGhpcmQgb2YgdGhlIGNvbG9uIGluIGNsaW5pY2FsIHJlbWlzc2lvbiwgYW5kIGFyZSBwbGFubmVkIGZvciByb3V0aW5lIGNvbG9ub3Njb3B5IGZvciBkeXNwbGFzaWEgc3VydmVpbGxhbmNlLjxiciAvPjxiciAvPlN0dWR5IGRldGFpbHM8YnIgLz5BbGwgcGFydGljaXBhbnRzIGluIHRoaXMgc3R1ZHkgd2lsbCBwcm9jZWVkIHdpdGggcmVndWxhciBjb2xvbm9zY29weSB3aXRoIHRoZSBhZGRpdGlvbiBvZiB0aGUgdXNlIG9mIEVuZG9jdWZmLXZpc2lvbiBlcXVpcG1lbnQgZHVyaW5nIHRoZSBwcm9jZWR1cmUuIFRoaXMgaXMgYSBzb2Z0LCBydWJiZXItbGlrZSBjYXAgdGhhdCBmaXRzIHRvIHRoZSBlbmQgb2YgdGhlIHJlZ3VsYXIgY29sb25vc2NvcHkgZXF1aXBtZW50LCB3aXRoIGEgcm93IG9mIGZpbmdlci1saWtlIHByb2plY3Rpb25zIHRoYXQgZXh0ZW5kIHdoZW4gdGhlIGNvbG9ub3Njb3BlIGlzIHB1bGxlZCBvdXQuIFRoZSBhaW0gb2YgdGhpcyBkZXZpY2UgaXMgdG8gYXNzaXN0IGluIGFuY2hvcmluZyB0aGUgYm93ZWwgd2FsbCBhbmQgZmxhdHRlbmluZyBtdWNvc2FsIGZvbGRzIHRvIGFsbG93IGJldHRlciB2aXNpb24gb2YgdGhlIGJvd2VsLiBUaGUgZHVyYXRpb24gb2YgdGhlIGNvbG9ub3Njb3B5IHdpbGwgYmUgbG9uZ2VyIGJ5IGFib3V0IDEwIC0gMTUgbWludXRlcywgYXMgd2Ugd2lsbCBkbyB0aGUgY29sb25vc2NvcHkgZmlyc3Qgd2l0aG91dCB0aGUgRW5kb2N1ZmYtdmlzaW9uIGRldmljZSwgdGhlbiB3aXRoIHRoZSBFbmRvY3VmZi12aXNpb24gZGV2aWNlLCBvciB2aWNlIHZlcnNhLiA8YnIgLz48YnIgLz5BbGwgdGVzdCByZXN1bHRzIHdpbGwgYmUgYW5hbHlzZWQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlIEVuZG9jdWZmLXZpc2lvbiBkZXZpY2UgaXMgb2JqZWN0aXZlbHkgYmV0dGVyIGF0IGRldGVjdGluZyBwb2x5cHMuIEEgbWVtYmVyIG9mIHRoZSByZXNlYXJjaCB0ZWFtIHdpbGwgYWxzbyBjb250YWN0IHN0dWR5IHBhcnRpY2lwYW50cyBhdCAyMSBkYXlzIGFmdGVyIHRoZSBjb2xvbm9zY29weSB0byBhc2NlcnRhaW4gaWYgdGhlcmUgaGF2ZSBiZWVuIGFueSBjb21wbGljYXRpb25zLjxiciAvPrcBQWxsIHBhdGllbnRzIHdpdGggdWxjZXJhdGl2ZSBjb2xpdGlzIG9yIENyb2hu4oCZcyBjb2xpdGlzIGludm9sdmluZyBtb3JlIHRoYW4gb25lIHRoaXJkIG9mIHRoZSBjb2xvbiBpbiBjbGluaWNhbCByZW1pc3Npb24sIHBsYW5uZWQgZm9yIHJvdXRpbmUgY29sb25vc2NvcHkgZm9yIGR5c3BsYXNpYSBzdXJ2ZWlsbGFuY2UuCDE4IFllYXJzCDg1IFllYXJzFkJvdGggbWFsZXMgYW5kIGZlbWFsZXOBBuKAoglQYXRpZW50cyB3aXRoIGFic29sdXRlIG9yIHJlbGF0aXZlIGNvbnRyYWluZGljYXRpb25zIHRvIGNvbG9ub3Njb3B5PGJyIC8%2B4oCiCVBhdGllbnRzIHdpdGggZXN0YWJsaXNoZWQgb3Igc3VzcGljaW9uIG9mIGxhcmdlIGJvd2VsIG9ic3RydWN0aW9uIG9yIHBzZXVkby1vYnN0cnVjdGlvbjxiciAvPuKAoglQYXRpZW50cyB3aXRoIGtub3duIGNvbG9uIGNhbmNlciBvciBwb2x5cG9zaXMgc3luZHJvbWVzPGJyIC8%2B4oCiCVBhdGllbnRzIHdpdGgga25vd24gY29sb25pYyBzdHJpY3R1cmVzPGJyIC8%2B4oCiCVBhdGllbnRzIHdpdGggYSBrbm93biBzZXZlcmUgZGl2ZXJ0aWN1bGFyIHNlZ21lbnQgKHRoYXQgaXMgbGlrZWx5IHRvIGltcGVkZSBjb2xvbm9zY29wZSBwYXNzYWdlKTs8YnIgLz7igKIJUGF0aWVudHMgd2l0aCBjbGluaWNhbCBzdXNwaWNpb24gb2YgYWN0aXZlIHVsY2VyYXRpdmUgY29saXRpcyA8YnIgLz7igKIJUGF0aWVudHMgbGFja2luZyBjYXBhY2l0eSB0byBnaXZlIGluZm9ybWVkIGNvbnNlbnQ8YnIgLz7igKIJUGF0aWVudHMgb24gY2xvcGlkb2dyZWwsIHdhcmZhcmluLCBvciBvdGhlciBuZXcgZ2VuZXJhdGlvbiBhbnRpY29hZ3VsYW50cyB3aG8gaGF2ZSBub3Qgc3RvcHBlZCB0aGlzIGZvciB0aGUgcHJvY2VkdXJlPGJyIC8%2B4oCiCVBhdGllbnRzIHdobyBhcmUgYXR0ZW5kaW5nIGZvciBhIHRoZXJhcGV1dGljIHByb2NlZHVyZSBvciBhc3Nlc3NtZW50IG9mIGEga25vd24gbGVzaW9uPGJyIC8%2B4oCiCVByZWduYW5jeS48YnIgLz4OZXhwYW5kYWJsZS1ib3gaQ29tbWVyY2lhbCBzZWN0b3IvSW5kdXN0cnkHTm9yZ2luZSwzLzE0IFJvZGJvcm91Z2ggUm9hZCBGcmVuY2hzIEZvcmVzdCBOU1cgMjA4NglBdXN0cmFsaWECRHIKV2VuZHkgRmFuZ4YBRGVwYXJ0bWVudCBvZiBHYXN0cm9lbnRlcm9sb2d5PGJyIC8%2BTGV2ZWwgM1cgQnVpbGRpbmcgQjxiciAvPkJveCBIaWxsIGhvc3BpdGFsIDxiciAvPjggQXJub2xkIFN0cmVldCw8YnIgLz5Cb3ggSGlsbDxiciAvPlZpY3RvcmlhIDMxMjgJQXVzdHJhbGlhDis2MSAzIDkwOTQ5NTU1H3dlbmR5LmZhbmdAZWFzdGVybmhlYWx0aC5vcmcuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNjQyLnBkZj90PTMxMmRkAi8PPCsABAEADxYCHwNnZGQCGw9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczNjUwJmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNjUwLnBkZj90PTMxMmRkAgcPDxYCHwIFBjM3MzY1MGRkAgkPDxYCHwIFDjEyNjE3MDAxMzQxMzE0ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMtYBVHJhbWFkb2wvUGFyYWNldGFtb2wgKFphbGRpYXIpIGNvbXBhcmVkIHdpdGggb3h5Y29kb25lIGFuZCBwYXJhY2V0YW1vbCBmb3IgdGhlIG1hbmFnZW1lbnQgb2YgcG9zdC1vcGVyYXRpdmUgcGFpbiBmb2xsb3dpbmcgbWFqb3Igc3VyZ2VyeSBpbiBneW5hZWNvbG9neSBvbmNvbG9neTogY29tcGFyaXNvbiBvZiBwb3N0LW9wZXJhdGl2ZSBuYXVzZWEgYW5kIGNvbnN0aXBhdGlvbhJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saRtTdWJtaXR0ZWQsIG5vdCB5ZXQgYXBwcm92ZWQHaW5mby1saStQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQ8YnIgLz4ocHJvdmlzaW9uYWwpMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQkyMS85LzIwMTcScmVzdWx0cy1oZWFkZXItMTAwG1N1Ym1pdHRlZCwgbm90IHlldCBhcHByb3ZlZApVcCB0byBkYXRlFEFDVFJOMTI2MTcwMDEzNDEzMTRwETIxIFNlcHRlbWJlciAyMDE3BHNob3cTUG9zdC1vcGVyYXRpdmUgcGFpbgRzaG93CUF1c3RyYWxpYQRzaG93D05ldyBTb3V0aCBXYWxlcwRzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nEDAxIE5vdmVtYmVyIDIwMTcEc2hvdxtTdWJtaXR0ZWQsIG5vdCB5ZXQgYXBwcm92ZWTcCFRoaXMgc3R1ZHkgYWltcyB0byBpbnZlc3RpZ2F0ZSB0aGUgZWZmaWNhY3kgYW5kIHNhZmV0eSBvZiB0cmFtYWRvbC9wYXJhY2V0YW1vbCBjb21iaW5lZCBkb3NpbmcgY29tcGFyZWQgd2l0aCBwYXJhY2V0YW1vbCBhbmQgb3h5Y29kb25lIGZvciBwYWluIG1hbmFnZW1lbnQgZm9sbG93aW5nIG1ham9yIHN1cmdlcnkgaW4gZ3luYWVjb2xvZ3kgb25jb2xvZ3kgcGF0aWVudHMuIDxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhIGZlbWFsZSBhZ2VkIDE4IHllYXJzIG9yIG1vcmUgd2hvIGlzIHBsYW5uZWQgZm9yIG1ham9yIHN1cmdlcnkgZm9yIGVpdGhlciBiZW5pZ24gb3IgbWFsaWduYW50IHR1bW91cnMgaW4gZ3luYWVjb2xvZ2ljYWwgb25jb2xvZ3kuPGJyIC8%2BPGJyIC8%2BU3R1ZHkgZGV0YWlsczxiciAvPlBhcnRpY2lwYW50cyBpbiB0aGlzIHN0dWR5IHdpbGwgYmUgcmFuZG9tbHkgYWxsb2NhdGVkIChieSBjaGFuY2UpIHRvIG9uZSBvZiB0d28gZ3JvdXBzLiBQYXJ0aWNpcGFudHMgaW4gb25lIGdyb3VwIHdpbGwgdGFrZSBvcmFsIFRyYW1hZG9sL3BhcmFjZXRhbW9sIGZvciBwb3N0LW9wZXJhdGl2ZSBwYWluIG1hbmFnZW1lbnQgaW4gdGhlIHdlZWsgZm9sbG93aW5nIGhvc3BpdGFsIGRpc2NoYXJnZS4gUGFydGljaXBhbnRzIGluIHRoZSBvdGhlciBncm91cCB3aWxsIHRha2Ugb3JhbCBwYXJhY2V0YW1vbCBhbmQgb3h5Y29kb25lIGluIHRoZSB3ZWVrIGZvbGxvd2luZyBkaXNjaGFyZ2UuPGJyIC8%2BPGJyIC8%2BQWxsIHBhcnRpY2lwYW50cyB3aWxsIGJlIGZvbGxvd2VkLXVwIGZvciAyOCBkYXlzIGluIG9yZGVyIHRvIGV2YWx1YXRlIHBvc3Qtb3BlcmF0aXZlIG5hdXNlYSwgY29uc3RpcGF0aW9uLCBhZHZlcnNlIGV2ZW50cywgaG9zcGl0YWwgcmUtYWRtaXNzaW9uIHJhdGVzLCBhbmQgZWZmaWNhY3kgb2YgcGFpbiByZWxpZWYuIFdlIGhvcGUgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgVHJhbWFkb2wgLyBwYXJhY2V0YW1vbCBpcyBhIHNhZmUsIGVmZmVjdGl2ZSwgYW5kIHdlbGwtdG9sZXJhdGVkIG9wdGlvbiBmb3IgcG9zdC1vcGVyYXRpdmUgcGFpbiBtYW5hZ2VtZW50LtEC4oCiCVBhdGllbnRzIHBsYW5uZWQgZm9yIG1ham9yIHN1cmdlcnkgZm9yIGJvdGggYmVuaWduIGFuZCBtYWxpZ25hbnQgaW4gdGhlIGRlcGFydG1lbnQgb2YgZ3luYWVjb2xvZ2ljYWwgb25jb2xvZ3kgd2lsbCBiZSBhcHByb2FjaGVkIGZvciByZWNydWl0bWVudCBpbnRvIHRoZSBzdHVkeS48YnIgLz7igKIJQWdlZCAxOCBvciBvdmVyPGJyIC8%2B4oCiCUVuZ2xpc2ggc3BlYWtpbmc8YnIgLz7igKIJV2lsbGluZ25lc3MgdG8gZ2l2ZSB3cml0dGVuIGluZm9ybWVkIGNvbnNlbnQsIGFuZCB3aWxsaW5nbmVzcyB0byBwYXJ0aWNpcGF0ZSB0byBhbmQgY29tcGx5IHdpdGggdGhlIHN0dWR5LjxiciAvPggxOCBZZWFycwkgTm8gbGltaXQHRmVtYWxlc9oC4oCiCU5vbi1FbmdsaXNoIHNwZWFraW5nIG9yIHVuYWJsZSB0byBwcm92aWRlIGluZm9ybWVkIGNvbnNlbnQgPGJyIC8%2B4oCiCVBhdGllbnRzIHdpdGggYSBkb2N1bWVudGVkIGFsbGVyZ3kgb3IgY29udHJhaW5kaWNhdGlvbiB0byBhbnkgb2YgdGhlIGRydWdzIGluY2x1ZGVkIGluIGdyb3VwIEEgb3IgQiA8YnIgLz7igKIJUGF0aWVudHMgd2l0aCBhIGhpc3Rvcnkgb2YgYSBwc3ljaG9sb2dpY2FsIGlsbG5lc3Mgb3IgY29uZGl0aW9uIHN1Y2ggYXMgdG8gaW50ZXJmZXJlIHdpdGggdGhlIHBhdGllbnQncyBhYmlsaXR5IHRvIHVuZGVyc3RhbmQgdGhlIHJlcXVpcmVtZW50cyBvZiB0aGUgc3R1ZHkuIDxiciAvPg5leHBhbmRhYmxlLWJveAhIb3NwaXRhbBdDaHJpcyBPJ0JyaWVuIExpZmVob3VzZSkxMTktMTQzIE1pc3NlbmRlbiBSZCwgQ2FtcGVyZG93biBOU1cgMjA1MAlBdXN0cmFsaWECRHINRW1tYSBBbGxhbnNvbkZDaHJpcyBPJ0JyaWVuIExpZmVob3VzZTxiciAvPjExOS0xNDMgTWlzc2VuZGVuIFJkLCBDYW1wZXJkb3duIE5TVyAyMDUwCUF1c3RyYWxpYQwrNjEyODUxNDA3MzAXZW1tYS5hbGxhbnNvbkBsaC5vcmcuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNjUwLnBkZj90PTMxMmRkAi8PPCsABAEADxYCHwNnZGQCHQ9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzYyMDc3JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzYyMDc3LnBkZj90PTMxMmRkAgcPDxYCHwIFBjM2MjA3N2RkAgkPDxYCHwIFDjEyNjE3MDAxMzI1MzkyZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMtgBQkNUIDE3MDMgKERJQW1PTkQpOiAgQW4gaW52ZXN0aWdhdG9yLWluaXRpYXRlZCwgbm9uLXJhbmRvbWlzZWQsIHBoYXNlIElJIHN0dWR5IG9mIGNvbWJpbmF0aW9uIENUTEEtNCBhbmQgUEQtTDEgYmxvY2thZGUgaW4gYWR2YW5jZWQgSEVSMi1wb3NpdGl2ZSBicmVhc3QgY2FuY2VycyB3aG8gaGF2ZSBwcm9ncmVzc2VkIG9uIHByaW9yIHRyYXN0dXp1bWFiLWJhc2VkIHRoZXJhcHkuEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpEU5vdCB5ZXQgc3VibWl0dGVkB2luZm8tbGkrUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkPGJyIC8%2BKHByb3Zpc2lvbmFsKTFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUJMTUvOS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMBFOb3QgeWV0IHN1Ym1pdHRlZApVcCB0byBkYXRlFEFDVFJOMTI2MTcwMDEzMjUzOTJwETE1IFNlcHRlbWJlciAyMDE3BHNob3ckQWR2YW5jZWQgSEVSMi1wb3NpdGl2ZSBicmVhc3QgY2FuY2VyBHNob3cJQXVzdHJhbGlhBHNob3cIVmljdG9yaWEEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZwwwMSBKdW5lIDIwMTgEc2hvdxFOb3QgeWV0IHN1Ym1pdHRlZN0SVGhpcyBzdHVkeSBhaW1zIHRvIGZpbmQgb3V0IGlmIHRoZSBjb21iaW5hdGlvbiBvZiB0cmFzdHV6dW1hYiAoYW50aS1IRVIyIHRoZXJhcHkpIHdpdGggZHVydmFsdW1hYiAoUEQtTDEgaW5oaWJpdG9yKSBhbmQgdHJlbWVsaW11bWFiIChDVExBNCBpbmhpYml0b3IpIHdpbGwgcmVhY3RpdmF0ZSBhbnRpLXR1bW91ciBpbW11bmUgcmVzcG9uc2UgYW5kIGltcHJvdmUgY2xpbmljYWwgb3V0Y29tZXMgaW4gdHJhc3R1enVtYWItcmVzaXN0YW50LCBhZHZhbmNlZCBIRVIyLXBvc2l0aXZlIGJyZWFzdCBjYW5jZXIuPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIGZvciB0aGlzIHN0dWR5IGlmIHlvdSBhcmUgMTggeWVhcnMgb3Igb2xkZXIsIG1hbGUgb3IgZmVtYWxlLCBhbmQgaGF2ZSBIRVIyLXBvc2l0aXZlIG1ldGFzdGF0aWMgb3IgaW5jdXJhYmxlIGJyZWFzdCBjYW5jZXIgdGhhdCBoYXMgcHJvZ3Jlc3NlZCBvbiBwcmV2aW91cyB0cmFzdHV6dW1hYiB0cmVhdG1lbnQuPGJyIC8%2BPGJyIC8%2BVHJpYWwgRGV0YWlscy48YnIgLz5VcCB0byA0IHdlZWtzIGJlZm9yZSBzdGFydGluZyBzdHVkeSB0cmVhdG1lbnQsIGFsbCBwYXJ0aWNpcGFudHMgd2lsbCBoYXZlIGVpdGhlciBhIENUIFNjYW4sIE1SSSwgb3IgUEVUIHdpdGggZGVkaWNhdGVkIENUIFNjYW4sIHByb3ZpZGUgYSByZXNlYXJjaCB0dW1vdXIgYmlvcHN5IG9mIHRoZSBjYW5jZXIgKHRha2VuIHdpdGhpbiAxIHllYXIgb2Ygc3RhcnRpbmcgdGhlIHN0dWR5KSBhbmQgcmVzZWFyY2ggYmxvb2QgdGVzdHMuPGJyIC8%2BIDxiciAvPlN0dWR5IHRyZWF0bWVudCB0YWtlcyBwbGFjZSBpbiAyIHBoYXNlczo8YnIgLz4xKSBJbmR1Y3Rpb24gUGhhc2UgKHdlZWtzIDEtMTYpOyBhbmQ8YnIgLz4yKSBUcmVhdG1lbnQgUGhhc2UgKHdlZWtzIDE3LTUyKS48YnIgLz48YnIgLz5JbmR1Y3Rpb24gUGhhc2U8YnIgLz5EdXJpbmcgdGhlIEluZHVjdGlvbiBQaGFzZSwgcGFydGljaXBhbnRzIHdpbGwgcmVjZWl2ZTo8YnIgLz4xKSA0IGRvc2VzIG9mIGR1cnZhbHVtYWIgKDEgZG9zZSBldmVyeSA0IHdlZWtzKSwgYWRtaW5pc3RlcmVkIGludHJhdmVub3VzbHk7PGJyIC8%2BMikgNCBkb3NlcyBvZiB0cmVtZWxpbXVtYWIgKDEgZG9zZSBldmVyeSA0IHdlZWtzKSwgYWRtaW5pc3RlcmVkIGludHJhdmVub3VzbHk7PGJyIC8%2BMykgMTYgZG9zZXMgb2YgdHJhc3R1enVtYWIgKDEgZG9zZSBldmVyeSB3ZWVrKSwgYWRtaW5pc3RlcmVkIGludHJhdmVub3VzbHkuPGJyIC8%2BPGJyIC8%2BT2VzdHJvZ2VuLXJlY2VwdG9yLXBvc2l0aXZlIHBhdGllbnRzIHdpbGwgYWxzbyBzdGFydCBvciBjb250aW51ZSBlbmRvY3JpbmUgdGhlcmFweSAoYXJvbWF0YXNlIGluaGliaXRvciBhbmQvb3IgR25SSCBhZ29uaXN0KS48YnIgLz48YnIgLz5QYXJ0aWNpcGFudHMgd2lsbCBiZSBjbGluaWNhbGx5IGFzc2Vzc2VkIHByaW9yIHRvIGVhY2ggc3R1ZHkgdHJlYXRtZW50LiBUd28gY29yZSBiaW9wc2llcywgaWYgZmVhc2libGUsIHdpbGwgYmUgdGFrZW4gZnJvbSB0aGUgc2FtZSBzaXRlIGFzIHRoZSBpbml0aWFsIGJpb3BzeSBhYm91dCAzIHdlZWtzIGFmdGVyIHN0YXJ0aW5nIHN0dWR5IHRyZWF0bWVudC4gQSByZXNlYXJjaCBibG9vZCBzYW1wbGUgd2lsbCBiZSB0YWtlbiBiZWZvcmUgdGhlIDNyZCBkb3NlIG9mIHN0dWR5IHRyZWF0bWVudC48YnIgLz48YnIgLz5UcmVhdG1lbnQgUGhhc2U8YnIgLz5QYXJ0aWNpcGFudHMgd2lsbCByZWNlaXZlIGR1cnZhbHVtYWIgYW5kIHRyYXN0dXp1bWFiIGV2ZXJ5IDMgd2Vla3MgZm9yIDEyIGRvc2VzICh0b3RhbCAzNiB3ZWVrcykuIFRyZW1lbGltdW1hYiB3aWxsIG5vdCBiZSBnaXZlbi48YnIgLz48YnIgLz5QYXJ0aWNpcGFudHMgd2lsbCBiZSBjbGluaWNhbGx5IGFzc2Vzc2VkIHByaW9yIHRvIGVhY2ggc3R1ZHkgdHJlYXRtZW50LiAuIEEgcmVzZWFyY2ggYmxvb2Qgc2FtcGxlIHdpbGwgYmUgdGFrZW4gZXZlcnkgOSB3ZWVrcywgYmVmb3JlIGVhY2ggZG9zZSBvZiBzdHVkeSB0cmVhdG1lbnQuPGJyIC8%2BPGJyIC8%2BRHVyaW5nIHRoZSBzdHVkeSAoSW5kdWN0aW9uIGFuZCBUcmVhdG1lbnQgUGhhc2VzKSwgaGVhcnQgZnVuY3Rpb24gdGVzdHMgKEVDSE8gb3IgTVVHQSkgd2lsbCBiZSBwZXJmb3JtZWQgZXZlcnkgMyBtb250aHMgYXMgcGVyIHN0YW5kYXJkIG9mIGNhcmUsIG9yIGFzIGNsaW5pY2FsbHkgaW5kaWNhdGVkLjxiciAvPjxiciAvPlRoZSBmdWxsIGxlbmd0aCBvZiB0cmVhdG1lbnQgaXMgNTIgd2Vla3MgKDEgeWVhcikuIEFmdGVyIGNvbXBsZXRpbmcgc3R1ZHkgdHJlYXRtZW50LCBwYXRpZW50cyB3aWxsIGJlIGZvbGxvd2VkIGV2ZXJ5IDMgbW9udGhzIGJ5IGVpdGhlciBjbGluaWMgdmlzaXRzIG9yIHZpYSB0ZWxlcGhvbmUuPGJyIC8%2B6iwxKSAgV3JpdHRlbiBpbmZvcm1lZCBjb25zZW50IHByaW9yIHRvIHBlcmZvcm1pbmcgYW55IHByb3RvY29sLXJlbGF0ZWQgcHJvY2VkdXJlcywgaW5jbHVkaW5nIHNjcmVlbmluZyBldmFsdWF0aW9ucy48YnIgLz48YnIgLz4yKSAgV3JpdHRlbiBjb25zZW50IHRvIGJpb2xvZ2ljYWwgbWF0ZXJpYWwgc3VibWlzc2lvbi48YnIgLz48YnIgLz4zKSBGZW1hbGUgb3IgTWFsZSwgYWdlID49IDE4IHllYXJzLjxiciAvPjxiciAvPjQpICBMb2NhbCBoaXN0b2xvZ2ljYWxseSBjb25maXJtZWQgSEVSMi1wb3NpdGl2ZSBvbiBJU0ggdGVzdGluZyB3aXRoIEVSQkIyLWFtcGxpZmljYXRpb24gYXMgZGVtb25zdHJhdGVkIGJ5IHJhdGlvIEVSQkIyL2NlbnRyb21lcmVzID49IDIuMCBvciBtZWFuIGdlbmUgY29weSBudW1iZXIgPj0gNiwgdW5yZXNlY3RhYmxlIGxvY28tcmVnaW9uYWwgb3IgbWV0YXN0YXRpYyBicmVhc3QgY2FuY2VyLiBIRVIyIHN0YXR1cyB3aWxsIGJlIGNvbmZpcm1lZCBjZW50cmFsbHkgcmV0cm9zcGVjdGl2ZWx5LjxiciAvPjxiciAvPjUpIExvY2FsbHkgYXNzZXNzZWQgb2VzdHJvZ2VuIHJlY2VwdG9yIHN0YXR1cyBiYXNlZCBvbiBtYW5kYXRvcnkgYmlvcHN5LiBFUi1wb3NpdGl2ZSBpcyBkZWZpbmVkIGFzID49IDElIChhbnkgUFIgZXhwcmVzc2lvbikuICBFUi1uZWdhdGl2ZSBpcyBkZWZpbmVkIGFzIEVSIDwgMSUgKGFueSBQUiBleHByZXNzaW9uKTs8YnIgLz48YnIgLz42KSAgTXVzdCBoYXZlIHByZXZpb3VzbHkgcmVjZWl2ZWQgdHJhc3R1enVtYWIgYW5kIHBlcnR1enVtYWIgaW4gZWl0aGVyIHRoZSAobmVvKWFkanV2YW50IG9yIGFkdmFuY2VkIGRpc2Vhc2Ugc2V0dGluZyB3aGVyZSBhcHByb3ByaWF0ZSBpbiB0aGUgZmlyc3QgbGluZSBhZHZhbmNlZCBzZXR0aW5nIChpLmUuIHJlaW1idXJzZWQgYnkgdGhlIFBCUykuPGJyIC8%2BPGJyIC8%2BNykgIE11c3QgaGF2ZSB0cmFzdHV6dW1hYiByZXNpc3RhbnQgZGlzZWFzZSwgZGVmaW5lZCBieSBhbnkgb2YgdGhlIGZvbGxvd2luZzo8YnIgLz4qICBEZW1vbnN0cmF0ZWQgcHJvZ3Jlc3Npb24gb2YgZGlzZWFzZSB3aGlsZSBvbi10cmVhdG1lbnQgd2l0aCB0cmFzdHV6dW1hYiAobW9ub3RoZXJhcHkgb3IgY29tYmluYXRpb24tYmFzZWQgdGhlcmFweSkgb3IgdHJhc3R1enVtYWIgZW10YW5zaW5lIChURE0tMSkgZm9yIG1ldGFzdGF0aWMgb3IgdW5yZXNlY3RhYmxlIGxvY28tcmVnaW9uYWwgZGlzZWFzZTs8YnIgLz4qICBSZWN1cnJlbmNlIGNvbnNpZGVyZWQgaW5jdXJhYmxlIHdoaWxlIG9uIGFkanV2YW50IHRyYXN0dXp1bWFiIG9yIHdpdGhpbiAxMiBtb250aHMgb2YgY29tcGxldGluZyBhZGp1dmFudCB0cmFzdHV6dW1hYiBhbmQgZGVlbWVkIGluYXBwcm9wcmlhdGUgZm9yIFBCU%2BKAk3JlaW1idXJzZWQgcGVydHV6dW1hYjs8YnIgLz4qICBBbnkgbnVtYmVyIG9mIHByaW9yIGxpbmVzIG9mIGFudGktSEVSMiB0aGVyYXB5IGlzIGFjY2VwdGFibGUuIFBhcnRpY2lwYW50cyBmb3Igd2hvbSB0aGUgdHJlYXRtZW50IHdpdGggdGhlIGN1cnJlbnQgZmlyc3QtbGluZSBjb21iaW5hdGlvbiBvZiB0cmFzdHV6dW1hYiwgcGVydHV6dW1hYiBhbmQgdGF4YW5lcyBpcyBub3QgYW4gb3B0aW9uIChlLmcuIGR1ZSB0byByZWZ1c2FsLCBsYWNrIG9mIHJlaW1idXJzZW1lbnQgb3IgY29udHJhaW5kaWNhdGlvbikgY2FuIGJlIGNvbnNpZGVyZWQgZm9yIGVucm9sbWVudCBpbnRvIHRoaXMgc3R1ZHkgYnV0IG11c3QgYmUgYXdhcmUgdGhhdCB0aGV5IGNhbm5vdCBhY2Nlc3MgUEJTLXJlaW1idXJzZWQgcGVydHV6dW1hYiBmb3Igc3Vic2VxdWVudCBsaW5lczs8YnIgLz4qICBQcm9ncmVzc2lvbi9yZWN1cnJlbmNlIG11c3QgaGF2ZSBiZWVuIGRlbW9uc3RyYXRlZCBieSByYWRpb2xvZ2ljYWwgb3IgY2xpbmljYWwgYXNzZXNzbWVudC48YnIgLz48YnIgLz44KSAgSWYgYSBwYXJ0aWNpcGFudCBoYXMgcmVjZWl2ZWQgYSBzdWJzZXF1ZW50IGFudGktSEVSMiB0aGVyYXB5LCBzaGUvaGUgbXVzdCBhbHNvIGhhdmUgcHJvZ3Jlc3NlZCBvbiB0aGUgc3Vic2VxdWVudCB0aGVyYXB5LiBQcm9ncmVzc2lvbiBtdXN0IGhhdmUgYmVlbiBkZW1vbnN0cmF0ZWQgYnkgcmFkaW9sb2dpY2FsIG9yIGNsaW5pY2FsIGFzc2Vzc21lbnQuPGJyIC8%2BPGJyIC8%2BOSkgIEJvZHkgd2VpZ2h0ID4gMzAga2cuPGJyIC8%2BPGJyIC8%2BMTApICBBYmxlIHRvIGNvbW1lbmNlIHRyZWF0bWVudCB3aXRoaW4gNyBkYXlzIG9mIHJlZ2lzdHJhdGlvbi48YnIgLz48YnIgLz4xMSkgIEF2YWlsYWJpbGl0eSBvZiBGRlBFIHR1bW91ciBiaW9wc3kgZm9yIHJldHJvc3BlY3RpdmUgY2VudHJhbCB0ZXN0aW5nIG9mIEhFUjIgcG9zaXRpdml0eSwgYXNzZXNzbWVudCBvZiBQRC1MMSBzdGF0dXMsIFRJTCBsZXZlbCwgYW5kIGZvciB0cmFuc2xhdGlvbmFsIHJlc2VhcmNoIHRha2VuIGZyb20gdW5yZXNlY3RhYmxlIGxvY28tcmVnaW9uYWwgb3IgbWV0YXN0YXRpYyBkaXNlYXNlIG9idGFpbmVkID08IDEgeWVhciBwcmlvciB0byBlbnJvbG1lbnQuIEFsdGVybmF0aXZlbHksIG5ldyB0aXNzdWUgbWF0ZXJpYWwgZnJvbSBhIHJlY2VudGx5IG9idGFpbmVkIHN1cmdpY2FsIG9yIGRpYWdub3N0aWMgYmlvcHN5IGNhbiBiZSBzdWJtaXR0ZWQuIFRpc3N1ZSBvYnRhaW5lZCBmb3IgdGhlIGJpb3BzeSBtdXN0IG5vdCBoYXZlIGJlZW4gcHJldmlvdXNseSBpcnJhZGlhdGVkLjxiciAvPk5vdGU6IFN1Ym1pc3Npb24gb2YgYSB0dW1vdXIgYmlvcHN5IGZvciBjZW50cmFsIHBhdGhvbG9neSByZXZpZXcgYW5kIHRyYW5zbGF0aW9uYWwgcmVzZWFyY2ggaXMgbWFuZGF0b3J5IGZvciB0aGlzIHN0dWR5LCBob3dldmVyIGNlbnRyYWwgY29uZmlybWF0aW9uIG9mIEhFUjItcG9zaXRpdml0eSBpcyBub3QgcmVxdWlyZWQgZm9yIGVsaWdpYmlsaXR5LiBBdCBsZWFzdCB0d28gY29yZSBiaW9wc2llcyBzaG91bGQgYmUgYXZhaWxhYmxlLjxiciAvPjxiciAvPjEyKSAgTWVhc3VyYWJsZSBkaXNlYXNlIHBlciBSRUNJU1QgdjEuMS48YnIgLz48YnIgLz4xMykgIEhhdmUgbGVmdCB2ZW50cmljdWxhciBlamVjdGlvbiBmcmFjdGlvbiAoTFZFRikgb2YgPj0gNTAlIG9yID4gaW5zdGl0dXRpb24gbG93ZXIgbGltaXQgb2Ygbm9ybWFsIChMTE4pIGFzIGFzc2Vzc2VkIGJ5IGVjaG9jYXJkaW9ncmFtIChFQ0hPKSBvciBtdWx0aWdhdGVkIGFjcXVpc2l0aW9uIChNVUdBKSBzY2FuIHBlcmZvcm1lZCB3aXRoaW4gMyBtb250aHMgb2YgcmVnaXN0cmF0aW9uLjxiciAvPjxiciAvPjE0KSAgUGFydGljaXBhbnQgaGFzIEVDT0cgMC0xLjxiciAvPjxiciAvPjE1KSAgTGlmZSBleHBlY3RhbmN5ID4gMyBtb250aHMuPGJyIC8%2BPGJyIC8%2BMTYpICBBZGVxdWF0ZSBvcmdhbiBhbmQgbWFycm93IGZ1bmN0aW9uIGFzIGRlZmluZWQgYmVsb3c6IDxiciAvPiogIEhhZW1vZ2xvYmluID49IDkuMCBnL2RMOzxiciAvPiogIEFic29sdXRlIG5ldXRyb3BoaWwgY291bnQgKEFOQykgPj0gMS41IHggMTBeOS9MICg%2BIDE1MDAgcGVyIG1tXjMpOzxiciAvPiogIFBsYXRlbGV0IGNvdW50ID49IDkwIHggMTBeOS9MICg%2BIDc1LDAwMCBwZXIgbW1eMyk8YnIgLz4qICBTZXJ1bSBiaWxpcnViaW4gPTwgMS41IHggaW5zdGl0dXRpb25hbCB1cHBlciBsaW1pdCBvZiBub3JtYWwgKFVMTikuICBJbiB0aGUgY2FzZSBvZiBrbm93biBHaWxiZXJ04oCZcyBzeW5kcm9tZSwgYSBoaWdoZXIgc2VydW0gdG90YWwgYmlsaXJ1YmluICg8IDIgeCBVTE4pIGlzIGFsbG93ZWQ7PGJyIC8%2BKiAgQVNUIChTR09UKS9BTFQgKFNHUFQpID08IDIuNSB4IGluc3RpdHV0aW9uYWwgdXBwZXIgbGltaXQgb2Ygbm9ybWFsIHVubGVzcyBsaXZlciBtZXRhc3Rhc2VzIGFyZSBwcmVzZW50LCBpbiB3aGljaCBjYXNlIGl0IG11c3QgYmUgPTwgNSB4IFVMTjs8YnIgLz4qICBDcmVhdGluaW5lID08IDEuNSB4IFVMTiBvciBzZXJ1bSBjcmVhdGluaW5lIGNsZWFyYW5jZSA%2BIDQwIG1ML21pbiBieSB0aGUgQ29ja2Nyb2Z0LUdhdWx0IGZvcm11bGEgKENvY2tjcm9mdCBhbmQgR2F1bHQgMTk3Nikgb3IgYnkgMjQtaG91ciB1cmluZSBjb2xsZWN0aW9uIGZvciBkZXRlcm1pbmF0aW9uIG9mIGNyZWF0aW5pbmUgY2xlYXJhbmNlLjxiciAvPiogIEludGVybmF0aW9uYWwgTm9ybWFsaXplZCBSYXRpbyAoSU5SKSBvciBQcm90aHJvbWJpbiBUaW1lIChQVCkgPTwgMS41IHggVUxOIHVubGVzcyBwYXJ0aWNpcGFudCBpcyByZWNlaXZpbmcgYW50aWNvYWd1bGFudCB0aGVyYXB5IGFzIGxvbmcgYXMgUFQgb3IgQVBUVCBpcyB3aXRoaW4gdGhlcmFwZXV0aWMgcmFuZ2Ugb2YgaW50ZW5kZWQgdXNlIG9mIGFudGljb2FndWxhbnQuPGJyIC8%2BPGJyIC8%2BMTcpIEFncmVlcyB0byB1c2UgYW4gZWZmZWN0aXZlIGJhcnJpZXIgY29udHJhY2VwdGl2ZSBtZXRob2QgZHVyaW5nIHRoZSBzdHVkeSBhbmQgZm9yIDE4MCBkYXlzIGFmdGVyIHRoZSBsYXN0IGRvc2Ugb2YgaW52ZXN0aWdhdGlvbmFsIHN0dWR5IGRydWdzLjxiciAvPjxiciAvPjE4KSBFdmlkZW5jZSBvZiBwb3N0LW1lbm9wYXVzYWwgc3RhdHVzIG9yIG5lZ2F0aXZlIHVyaW5hcnkgb3Igc2VydW0gcHJlZ25hbmN5IHRlc3QgZm9yIGZlbWFsZSBwcmUtbWVub3BhdXNhbCBwYXRpZW50cy4gV29tZW4gd2lsbCBiZSBjb25zaWRlcmVkIHBvc3QtbWVub3BhdXNhbCBpZiB0aGV5IGhhdmUgYmVlbiBhbWVub3JyaG9laWMgZm9yIDEyIG1vbnRocyB3aXRob3V0IGFuIGFsdGVybmF0aXZlIG1lZGljYWwgY2F1c2UuIFRoZSBmb2xsb3dpbmcgYWdlLXNwZWNpZmljIHJlcXVpcmVtZW50cyBhcHBseTogPGJyIC8%2BKiAgV29tZW4gPCA1MCB5ZWFycyBvZiBhZ2Ugd291bGQgYmUgY29uc2lkZXJlZCBwb3N0LW1lbm9wYXVzYWwgaWYgdGhleSBoYXZlIGJlZW4gYW1lbm9ycmhvZWljIGZvciAxMiBtb250aHMgb3IgbW9yZSBmb2xsb3dpbmcgY2Vzc2F0aW9uIG9mIGV4b2dlbm91cyBob3Jtb25hbCB0cmVhdG1lbnRzIGFuZCBpZiB0aGV5IGhhdmUgbHV0ZWluaXppbmcgaG9ybW9uZSBhbmQgZm9sbGljbGUtc3RpbXVsYXRpbmcgaG9ybW9uZSBsZXZlbHMgaW4gdGhlIHBvc3QtbWVub3BhdXNhbCByYW5nZSBmb3IgdGhlIGluc3RpdHV0aW9uIG9yIHVuZGVyd2VudCBzdXJnaWNhbCBzdGVyaWxpemF0aW9uIChiaWxhdGVyYWwgb29waG9yZWN0b215IG9yIGh5c3RlcmVjdG9teSkuPGJyIC8%2BKiAgV29tZW4gPj0gNTAgeWVhcnMgb2YgYWdlIHdvdWxkIGJlIGNvbnNpZGVyZWQgcG9zdC1tZW5vcGF1c2FsIGlmIHRoZXkgaGF2ZSBiZWVuIGFtZW5vcnJob2VpYyBmb3IgMTIgbW9udGhzIG9yIG1vcmUgZm9sbG93aW5nIGNlc3NhdGlvbiBvZiBhbGwgZXhvZ2Vub3VzIGhvcm1vbmFsIHRyZWF0bWVudHMsIGhhZCByYWRpYXRpb24taW5kdWNlZCBtZW5vcGF1c2Ugd2l0aCBsYXN0IG1lbnNlcyA%2BIDEgeWVhciBhZ28sIGhhZCBjaGVtb3RoZXJhcHktaW5kdWNlZCBtZW5vcGF1c2Ugd2l0aCBsYXN0IG1lbnNlcyA%2BIDEgeWVhciBhZ28sIG9yIHVuZGVyd2VudCBzdXJnaWNhbCBzdGVyaWxpemF0aW9uIChiaWxhdGVyYWwgb29waG9yZWN0b215LCBiaWxhdGVyYWwgc2FscGluZ2VjdG9teSBvciBoeXN0ZXJlY3RvbXkpLjxiciAvPjxiciAvPjE5KSBXaWxsaW5nIGFuZCBhYmxlIHRvIGNvbXBseSB3aXRoIHRoZSBwcm90b2NvbCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBzdHVkeSBpbmNsdWRpbmcgdW5kZXJnb2luZyB0cmVhdG1lbnQgYW5kIHNjaGVkdWxlZCB2aXNpdHMgYW5kIGV4YW1pbmF0aW9ucyBpbmNsdWRpbmcgZm9sbG93IHVwLggxOCBZZWFycwkgTm8gbGltaXQWQm90aCBtYWxlcyBhbmQgZmVtYWxlc%2BE1MSkgUHJldmlvdXMgaGlzdG9yeSBvZiBwcmltYXJ5IEhFUjIgbm9uLWFtcGxpZmllZCBpbnZhc2l2ZSBicmVhc3QgY2FuY2VyIGluIHRoZSBsYXN0IDUgeWVhcnMuPGJyIC8%2BPGJyIC8%2BMikgUGFydGljaXBhdGlvbiBpbiBhbm90aGVyIGNsaW5pY2FsIHN0dWR5IHdpdGggYW4gaW52ZXN0aWdhdGlvbmFsIHByb2R1Y3QgZHVyaW5nIHRoZSBsYXN0IDQgd2Vla3MgYmVmb3JlIGVucm9sbWVudC48YnIgLz48YnIgLz4zKSBQcmlvciBjeXRvdG94aWMgdHJlYXRtZW50IGxlc3MgdGhhbiAzIHdlZWtzIGJlZm9yZSB0aGUgcGxhbm5lZCBmaXJzdCBkb3NlIG9mIER1cnZhbHVtYWIgYW5kIFRyZW1lbGltdW1hYi48YnIgLz48YnIgLz40KSBBbnkgcHJldmlvdXMgdHJlYXRtZW50IHdpdGggYSBQRDEgb3IgUEQtTDEgaW5oaWJpdG9yLCBpbmNsdWRpbmcgZHVydmFsdW1hYiBvciBhbiBhbnRpLUNUTEEtNCwgaW5jbHVkaW5nIHRyZW1lbGltdW1hYi48YnIgLz48YnIgLz41KSBObyBGRlBFIG1hdGVyaWFsIHRvIGNlbnRyYWxseSBhc3Nlc3MgSEVSMi1wb3NpdGl2aXR5LCBQRC1MMSBleHByZXNzaW9uIGFuZCBUSUwgbGV2ZWxzLjxiciAvPjxiciAvPjYpIE1ham9yIHN1cmdpY2FsIHByb2NlZHVyZSAoYXMgZGVmaW5lZCBieSB0aGUgSW52ZXN0aWdhdG9yKSB3aXRoaW4gMjggZGF5cyBwcmlvciB0byB0aGUgZmlyc3QgZG9zZSBvZiBpbnZlc3RpZ2F0aW9uYWwgc3R1ZHkgdHJlYXRtZW50LiBOb3RlOiBMb2NhbCBzdXJnZXJ5IG9mIGlzb2xhdGVkIGxlc2lvbnMgZm9yIHBhbGxpYXRpdmUgaW50ZW50IGlzIGFjY2VwdGFibGUuPGJyIC8%2BPGJyIC8%2BNykgTWVhbiBRVCBpbnRlcnZhbCBjb3JyZWN0ZWQgZm9yIGhlYXJ0IHJhdGUgdXNpbmcgRnJpZGVyaWNpYSdzIGZvcm11bGEgKFFUY0YpID49NDcwIG1zIGNhbGN1bGF0ZWQgZnJvbSAzIEVDR3MgKHdpdGhpbiAxNSBtaW51dGVzIGF0IDUgbWludXRlcyBhcGFydCkuPGJyIC8%2BPGJyIC8%2BOCkgRmVtYWxlIHBhdGllbnRzIHdobyBhcmUgcHJlZ25hbnQgb3IgYnJlYXN0ZmVlZGluZyBvciBtYWxlIG9yIGZlbWFsZSBwYXRpZW50cyBvZiByZXByb2R1Y3RpdmUgcG90ZW50aWFsIHdobyBhcmUgbm90IHdpbGxpbmcgdG8gZW1wbG95IGVmZmVjdGl2ZSBiaXJ0aCBjb250cm9sICBmcm9tIHNjcmVlbmluZyB0byA5MCBkYXlzIGFmdGVyIHRoZSBsYXN0IGRvc2Ugb2YgZHVydmFsdW1hYiBtb25vdGhlcmFweSBvciAxODAgZGF5cyBhZnRlciB0aGUgbGFzdCBkb3NlIG9mIGR1cnZhbHVtYWIgKyB0cmVtZWxpbXVtYWIgY29tYmluYXRpb24gdGhlcmFweS48YnIgLz48YnIgLz45KSBJbnRlcnN0aXRpYWwgbHVuZyBkaXNlYXNlLjxiciAvPjxiciAvPjEwKSBIaXN0b3J5IG9mLCBvciBhY3RpdmUgZHJ1Zy1yZWxhdGVkIHBuZXVtb25pdGlzIHJlcXVpcmluZyB0cmVhdG1lbnQgd2l0aCBzdGVyb2lkcy48YnIgLz48YnIgLz4xMSkgSGFzIHVudHJlYXRlZCBjZW50cmFsIG5lcnZvdXMgc3lzdGVtIChDTlMpIG1ldGFzdGFzZXMgYW5kL29yIGNhcmNpbm9tYXRvdXMgbWVuaW5naXRpcyBpZGVudGlmaWVkIGVpdGhlciBvbiB0aGUgYmFzZWxpbmUgYnJhaW4gaW1hZ2luZyBvYnRhaW5lZCBkdXJpbmcgdGhlIHNjcmVlbmluZyBwZXJpb2Qgb3IgaWRlbnRpZmllZCBwcmlvciB0byBzaWduaW5nIHRoZSBQSUNGLiBQYXRpZW50cyB3aG9zZSBicmFpbiBtZXRhc3Rhc2VzIGhhdmUgYmVlbiB0cmVhdGVkIG1heSBwYXJ0aWNpcGF0ZSBwcm92aWRlZCB0aGV5IHNob3cgcmFkaW9ncmFwaGljIHN0YWJpbGl0eSAoZGVmaW5lZCBhcyAyIGJyYWluIGltYWdlcywgYm90aCBvZiB3aGljaCBhcmUgb2J0YWluZWQgYWZ0ZXIgdHJlYXRtZW50IHRvIHRoZSBicmFpbiBtZXRhc3Rhc2VzLiBUaGVzZSBpbWFnaW5nIHNjYW5zIHNob3VsZCBib3RoIGJlIG9idGFpbmVkIGF0IGxlYXN0IGZvdXIgd2Vla3MgYXBhcnQgYW5kIHNob3cgbm8gZXZpZGVuY2Ugb2YgaW50cmFjcmFuaWFsIHByb2dyZXNzaW9uKS4gSW4gYWRkaXRpb24sIGFueSBuZXVyb2xvZ2ljIHN5bXB0b21zIHRoYXQgZGV2ZWxvcGVkIGVpdGhlciBhcyBhIHJlc3VsdCBvZiB0aGUgYnJhaW4gbWV0YXN0YXNlcyBvciB0aGVpciB0cmVhdG1lbnQgbXVzdCBoYXZlIHJlc29sdmVkIG9yIGJlIHN0YWJsZSBlaXRoZXIsIHdpdGhvdXQgdGhlIHVzZSBvZiBzdGVyb2lkcywgb3IgYXJlIHN0YWJsZSBvbiBhIHN0ZXJvaWQgZG9zZSBvZiA9PCAxMG1nL2RheSBvZiBwcmVkbmlzb25lIG9yIGl0cyBlcXVpdmFsZW50IGZvciBhdCBsZWFzdCAxNCBkYXlzIHByaW9yIHRvIHRoZSBzdGFydCBvZiB0cmVhdG1lbnQuIDxiciAvPjxiciAvPjEyKSBTcGluYWwgY29yZCBjb21wcmVzc2lvbiBub3QgZGVmaW5pdGl2ZWx5IHRyZWF0ZWQgd2l0aCBzdXJnZXJ5IGFuZC9vciByYWRpYXRpb24sIG9yIHByZXZpb3VzbHkgZGlhZ25vc2VkIGFuZCB0cmVhdGVkIHNwaW5hbCBjb3JkIGNvbXByZXNzaW9uIHdpdGhvdXQgZXZpZGVuY2UgdGhhdCBkaXNlYXNlIGhhcyBiZWVuIGNsaW5pY2FsbHkgc3RhYmxlIGZvciA%2BIDIgd2Vla3MgcHJpb3IgdG8gcmFuZG9taXphdGlvbi48YnIgLz48YnIgLz4xMykgTGVwdG9tZW5pbmdlYWwgZGlzZWFzZS48YnIgLz48YnIgLz4xNCkgU3ltcHRvbWF0aWMgcGxldXJhbCBlZmZ1c2lvbiwgcGVyaWNhcmRpYWwgZWZmdXNpb24sIG9yIGFzY2l0ZXMgcmVxdWlyaW5nIGZyZXF1ZW50IGRyYWluYWdlICg8IDIgd2Vla2x5KS48YnIgLz48YnIgLz4xNSkgSGlzdG9yeSBvZiBjbGluaWNhbGx5IHNpZ25pZmljYW50IG9yIHVuY29udHJvbGxlZCBjYXJkaWFjIGRpc2Vhc2UsIGluY2x1ZGluZyBjb25nZXN0aXZlIGhlYXJ0IGZhaWx1cmUgKE5ldyBZb3JrIEhlYXJ0IEFzc29jaWF0aW9uIGZ1bmN0aW9uYWwgY2xhc3NpZmljYXRpb24gPiAzKSwgYW5naW5hLCBteW9jYXJkaWFsIGluZmFyY3Rpb24gb3IgdmVudHJpY3VsYXIgYXJyaHl0aG1pYS48YnIgLz48YnIgLz4xNikgUHJldmlvdXMgc2V2ZXJlIGh5cGVyc2Vuc2l0aXZpdHkgcmVhY3Rpb24gdG8gdHJlYXRtZW50IHdpdGggYW5vdGhlciBtb25vY2xvbmFsIGFudGlib2R5LjxiciAvPjxiciAvPjE3KSBBY3RpdmUgb3IgdW5jb250cm9sbGVkIGluZmVjdGlvbiBDVENBRSBWNC4wMyBncmFkZSAyIG9yIGhpZ2hlci48YnIgLz48YnIgLz4xOCkgQ3VycmVudCBvciBwcmlvciB1c2Ugb2YgaW1tdW5vc3VwcHJlc3NpdmUgbWVkaWNhdGlvbiB3aXRoaW4gMjggZGF5cyBiZWZvcmUgdGhlIGZpcnN0IGRvc2Ugb2YgZHVydmFsdW1hYiBvciB0cmVtZWxpbXVtYWIsIHdpdGggdGhlIGV4Y2VwdGlvbnMgb2YgaW50cmFuYXNhbCBhbmQgaW5oYWxlZCBjb3J0aWNvc3Rlcm9pZHMgb3Igc3lzdGVtaWMgY29ydGljb3N0ZXJvaWRzIGF0IHBoeXNpb2xvZ2ljYWwgZG9zZXMsIHdoaWNoIGFyZSBub3QgdG8gZXhjZWVkIDEwIG1nL2RheSBvZiBwcmVkbmlzb25lLCBvciBhbiBlcXVpdmFsZW50IGNvcnRpY29zdGVyb2lkLjxiciAvPjxiciAvPjE5KSBVbmNvbnRyb2xsZWQgaW50ZXJjdXJyZW50IGlsbG5lc3MsIGluY2x1ZGluZyBidXQgbm90IGxpbWl0ZWQgdG8sIG9uZ29pbmcgb3IgYWN0aXZlIGluZmVjdGlvbiwgc3ltcHRvbWF0aWMgY29uZ2VzdGl2ZSBoZWFydCBmYWlsdXJlLCB1bmNvbnRyb2xsZWQgaHlwZXJ0ZW5zaW9uLCB1bnN0YWJsZSBhbmdpbmEgcGVjdG9yaXMsIGNhcmRpYWMgYXJyaHl0aG1pYSwgaW50ZXJzdGl0aWFsIGx1bmcgZGlzZWFzZSwgc2VyaW91cyBjaHJvbmljIGdhc3Ryb2ludGVzdGluYWwgY29uZGl0aW9ucyBhc3NvY2lhdGVkIHdpdGggZGlhcnJob2VhLCBvciBwc3ljaGlhdHJpYyBpbGxuZXNzL3NvY2lhbCBzaXR1YXRpb25zIHRoYXQgd291bGQgbGltaXQgY29tcGxpYW5jZSB3aXRoIHN0dWR5IHJlcXVpcmVtZW50LCBzdWJzdGFudGlhbGx5IGluY3JlYXNlIHJpc2sgb2YgaW5jdXJyaW5nIEFFcyBvciBjb21wcm9taXNlIHRoZSBhYmlsaXR5IG9mIHRoZSBwYXRpZW50IHRvIGdpdmUgd3JpdHRlbiBpbmZvcm1lZCBjb25zZW50LjxiciAvPiA8YnIgLz4yMCkgQWN0aXZlIG9yIHByaW9yIGRvY3VtZW50ZWQgYXV0b2ltbXVuZSBvciBpbmZsYW1tYXRvcnkgZGlzb3JkZXJzIChpbmNsdWRpbmcgaW5mbGFtbWF0b3J5IGJvd2VsIGRpc2Vhc2UgW2UuZy4gY29saXRpcyBvciBDcm9obidzIGRpc2Vhc2VdLCBkaXZlcnRpY3VsaXRpcyBbd2l0aCB0aGUgZXhjZXB0aW9uIG9mIGRpdmVydGljdWxvc2lzXSwgc3lzdGVtaWMgbHVwdXMgZXJ5dGhlbWF0b3N1cywgU2FyY29pZG9zaXMgc3luZHJvbWUsIG9yIFdlZ2VuZXIgc3luZHJvbWUgW2dyYW51bG9tYXRvc2lzIHdpdGggcG9seWFuZ2lpdGlzLCBHcmF2ZXMnIGRpc2Vhc2UsIHJoZXVtYXRvaWQgYXJ0aHJpdGlzLCBoeXBvcGh5c2l0aXMsIHV2ZWl0aXMsIGV0Yy5dKS4gVGhlIGZvbGxvd2luZyBhcmUgZXhjZXB0aW9ucyB0byB0aGlzIGNyaXRlcmlvbjo8YnIgLz4qIFBhdGllbnRzIHdpdGggdml0aWxpZ28gb3IgYWxvcGVjaWE7PGJyIC8%2BKiBQYXRpZW50cyB3aXRoIGh5cG90aHlyb2lkaXNtIChlLmcuIGZvbGxvd2luZyBIYXNoaW1vdG8gc3luZHJvbWUpIHN0YWJsZSBvbiBob3Jtb25lIHJlcGxhY2VtZW50OzxiciAvPiogQW55IGNocm9uaWMgc2tpbiBjb25kaXRpb24gdGhhdCBkb2VzIG5vdCByZXF1aXJlIHN5c3RlbWljIHRoZXJhcHk7PGJyIC8%2BKlBhdGllbnRzIHdpdGggY2VsaWFjIGRpc2Vhc2UgY29udHJvbGxlZCBieSBkaWV0IGFsb25lLjxiciAvPjxiciAvPjIxKSBIaXN0b3J5IG9mIHByaW1hcnkgaW1tdW5vZGVmaWNpZW5jeS48YnIgLz48YnIgLz4yMikgSGlzdG9yeSBvZiBhbGxvZ2VuZWljIG9yZ2FuIHRyYW5zcGxhbnQuPGJyIC8%2BPGJyIC8%2BMjMpIEFjdGl2ZSBpbmZlY3Rpb24gaW5jbHVkaW5nIHR1YmVyY3Vsb3NpcyAoY2xpbmljYWwgZXZhbHVhdGlvbiB0aGF0IGluY2x1ZGVzIGNsaW5pY2FsIGhpc3RvcnksIHBoeXNpY2FsIGV4YW1pbmF0aW9uIGFuZCByYWRpb2dyYXBoaWMgZmluZGluZ3MsIGFuZCBUQiB0ZXN0aW5nIGluIGxpbmUgd2l0aCBsb2NhbCBwcmFjdGljZSksIGhlcGF0aXRpcyBCIChrbm93biBwb3NpdGl2ZSBIQlYgc3VyZmFjZSBhbnRpZ2VuIChIQnNBZykgcmVzdWx0KSwgaGVwYXRpdGlzIEMsIG9yIGh1bWFuIGltbXVub2RlZmljaWVuY3kgdmlydXMgKHBvc2l0aXZlIEhJViAxLzIgYW50aWJvZGllcykuIFBhdGllbnRzIHdpdGggYSBwYXN0IG9yIHJlc29sdmVkIEhCViBpbmZlY3Rpb24gKGRlZmluZWQgYXMgdGhlIHByZXNlbmNlIG9mIGhlcGF0aXRpcyBCIGNvcmUgYW50aWJvZHkgW2FudGktSEJjXSBhbmQgYWJzZW5jZSBvZiBIQnNBZykgYXJlIGVsaWdpYmxlLiBQYXRpZW50cyBwb3NpdGl2ZSBmb3IgaGVwYXRpdGlzIEMgKEhDVikgYW50aWJvZHkgYXJlIGVsaWdpYmxlIG9ubHkgaWYgcG9seW1lcmFzZSBjaGFpbiByZWFjdGlvbiBpcyBuZWdhdGl2ZSBmb3IgSENWIFJOQS48YnIgLz48YnIgLz4yNCkgQ2hlbW90aGVyYXB5LCByYWRpb3RoZXJhcHksIGFuZC9vciBiaW9sb2dpY2FsIGNhbmNlciB0aGVyYXB5IChleGNlcHQgdHJhc3R1enVtYWIgYW5kIGVuZG9jcmluZSB0aGVyYXB5KSB3aXRoaW4gMyB3ZWVrcyBwcmlvciB0byB0aGUgZmlyc3Qgc3R1ZHkgZG9zZSBhbmQgaGFzIG5vdCByZWNvdmVyZWQgdG8gQ1RDQUUgVjQuMDMgZ3JhZGUgMSBvciBiZXR0ZXIgZnJvbSBhZHZlcnNlIGV2ZW50cyAoZXhjZXB0IGFsb3BlY2lhIGdyYWRlIDIpLiBQcmlvciBjaGVtb3RoZXJhcHkgaW5kdWNlZCBuZXVyb3BhdGh5IHNob3VsZCBiZSBncmFkZSAyIG9yIGJldHRlci48YnIgLz48YnIgLz4yNSkgQW55IHVucmVzb2x2ZWQgdG94aWNpdHkgTkNJIENUQ0FFIEdyYWRlID49IDIgZnJvbSBwcmV2aW91cyBhbnRpY2FuY2VyIHRoZXJhcHkgd2l0aCB0aGUgZXhjZXB0aW9uIG9mIGFsb3BlY2lhLCB2aXRpbGlnbywgYW5kIHRoZSBsYWJvcmF0b3J5IHZhbHVlcyBkZWZpbmVkIGluIHRoZSBpbmNsdXNpb24gY3JpdGVyaWEuICBQYXRpZW50cyB3aXRoIGlycmV2ZXJzaWJsZSB0b3hpY2l0eSBub3QgcmVhc29uYWJseSBleHBlY3RlZCB0byBiZSBleGFjZXJiYXRlZCBieSB0cmVhdG1lbnQgd2l0aCBkdXJ2YWx1bWFiIG9yIHRyZW1lbGltdW1hYiBtYXkgYmUgaW5jbHVkZWQgb25seSBhZnRlciBjb25zdWx0YXRpb24gd2l0aCB0aGUgU3R1ZHkgQ2hhaXIgYW5kIHRoZSBEaXJlY3Rvci9EZXB1dHkgRGlyZWN0b3Igb2YgUmVzZWFyY2guPGJyIC8%2BPGJyIC8%2BMjYpIExpdmUgdmFjY2luZXMgd2l0aGluIDMwIGRheXMgcHJpb3IgdG8gdGhlIGZpcnN0IGRvc2Ugb2YgaW52ZXN0aWdhdGlvbmFsIHN0dWR5IHRyZWF0bWVudCBhbmQgZHVyaW5nIGludmVzdGlnYXRpb25hbCBzdHVkeSB0cmVhdG1lbnQuPGJyIC8%2BPGJyIC8%2BMjcpIFByZXZpb3VzIG9yIGNvbmNvbWl0YW50IGludmFzaXZlIG1hbGlnbmFuY3kgKGV4Y2VwdCBicmVhc3QgY2FuY2VyKS4gVGhlIGV4Y2VwdGlvbnMgYXJlOjxiciAvPiogcGFydGljaXBhbnRzIHdpdGggbm9uLWJyZWFzdCBtYWxpZ25hbmN5ID49IDUgeWVhcnMgYWdvLCB0cmVhdGVkIHdpdGggY3VyYXRpdmUgaW50ZW50IGFuZCB3aXRob3V0IAlldmlkZW5jZSBvZiByZWN1cnJlbmNlOzxiciAvPiogYmFzYWwgb3Igc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWEgb2YgdGhlIHNraW47PGJyIC8%2BKiBpbiBzaXR1IGNhcmNpbm9tYSB3aXRob3V0IGludmFzaW9uIChpbmNsdWRlcyBpbiBzaXR1IGJyZWFzdCBjYXJjaW5vbWEpLjxiciAvPjxiciAvPjI4KSBBbnkgY29uZGl0aW9uIHRoYXQsIGluIHRoZSBvcGluaW9uIG9mIHRoZSBpbnZlc3RpZ2F0b3IsIHdvdWxkIGludGVyZmVyZSB3aXRoIGV2YWx1YXRpb24gb2YgaW52ZXN0aWdhdGlvbmFsIHN0dWR5IHRyZWF0bWVudCBvciBpbnRlcnByZXRhdGlvbiBvZiBwYXJ0aWNpcGFudCBzYWZldHkgb3Igc3R1ZHkgcmVzdWx0cy4OZXhwYW5kYWJsZS1ib3gaT3RoZXIgQ29sbGFib3JhdGl2ZSBncm91cHMUQnJlYXN0IENhbmNlciBUcmlhbHMlUE8gQm94IDI4MzxiciAvPlRoZSBKdW5jdGlvbiBOU1cgMjI5MQlBdXN0cmFsaWECTXMQQ29yaW5uYSBCZWNrbW9yZS5CQ1Q8YnIgLz5QTyBCb3ggMjgzPGJyIC8%2BVGhlIEp1bmN0aW9uIE5TVyAyMjkxCUF1c3RyYWxpYQ8rNjEgMiA0OTI1IDUyMzUZZW5xdWlyaWVzQGJjdHJpYWxzLm9yZy5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNjIwNzcucGRmP3Q9MzEyZGQCLw88KwAEAQAPFgIfA2dkZAIfD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM2MDYmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM2MDYucGRmP3Q9MzEyZGQCBw8PFgIfAgUGMzczNjA2ZGQCCQ8PFgIfAgUOMTI2MTcwMDEzMjIzMjVkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0ysgFFZmZlY3RpdmVuZXNzIG9mIGEgZ3JvdXAtYmFzZWQgQWNjZXB0YW5jZSBhbmQgQ29tbWl0bWVudCBUaGVyYXB5IChBQ1QpIGludGVydmVudGlvbiBvbiBxdWFsaXR5IG9mIGxpZmUgZm9sbG93aW5nIHRyZWF0bWVudCBmb3IgZWFybHkgYnJlYXN0IGNhbmNlcjogYSByYW5kb21pc2VkIGNvbnRyb2xsZWQgdHJpYWwgEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQkxNC85LzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTMyMjMyNRExNCBTZXB0ZW1iZXIgMjAxNwRzaG93QkNhbmNlci1zcGVjaWZpYyBkaXN0cmVzcywgUHN5Y2hvbG9naWNhbCBkaXN0cmVzcyAsIFF1YWxpdHkgb2YgbGlmZQRzaG93CUF1c3RyYWxpYQRzaG93ClF1ZWVuc2xhbmQEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZxExNiBTZXB0ZW1iZXIgMjAxNwRzaG93CEFwcHJvdmVkjBVUaGlzIHN0dWR5IHdpbGwgaW52ZXN0aWdhdGUgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgZ3JvdXAtYmFzZWQgQWNjZXB0YW5jZSBhbmQgQ29tbWl0bWVudCBUaGVyYXB5IChBQ1QpIGludGVydmVudGlvbiBpbiBpbXByb3ZpbmcgcXVhbGl0eSBvZiBsaWZlIGZvbGxvd2luZyB0cmVhdG1lbnQgZm9yIGVhcmx5IGJyZWFzdCBjYW5jZXIuIDxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhIHdvbWFuIGFnZWQgMTggeWVhcnMgb3IgYWJvdmUgYW5kIGhhdmUgY29tcGxldGVkIHByaW1hcnkgdHJlYXRtZW50IGZvciBlYXJseSBicmVhc3QgY2FuY2VyIHdpdGhpbiB0aGUgbGFzdCB0d28geWVhcnMuPGJyIC8%2BPGJyIC8%2BV2hhdCBkb2VzIHRoaXMgc3R1ZHkgaW52b2x2ZT88YnIgLz5JbiB0aGlzIHN0dWR5LCBhbGwgcGFydGljaXBhbnRzIHdpbGwgcmVjZWl2ZSB0aGUgQUNUIGludGVydmVudGlvbiBjb25kaXRpb24gaW4gcmFuZG9tIG9yZGVyLiBQYXJ0aWNpcGFudCB3aWxsIGJlIHJhbmRvbWx5IGFsbG9jYXRlZCB0byBvbmUgb2YgdGhlIGZvbGxvd2luZyBjb21iaW5hdGlvbiBvZiBzdHVkeSBjb25kaXRpb25zOiAxKSBHcm91cCBBIHdpbGwgZmlyc3QgcmVjZWl2ZSB0aGUgQUNUIGludGVydmVudGlvbiBwcm9ncmFtLCB0aGVuIHJlY2VpdmUgYSBicmVhc3QgY2FuY2VyIGVkdWNhdGlvbiAoQkNFKSBjb250cm9sIHByb2dyYW07IDIpIEdyb3VwIEIgd2lsbCBmaXJzdCByZWNlaXZlIHRoZSBCQ0UgY29udHJvbCBwcm9ncmFtLCB0aGVuIGNyb3NzLW92ZXIgdG8gcmVjZWl2ZSB0aGUgQUNUIGludGVydmVudGlvbiBwcm9ncmFtOyBvciAzKSBHcm91cCBXIHdpbGwgZmlyc3QgYmUgb24gYSA2LXdlZWsgd2FpdC1saXN0IGR1cmluZyB3aGljaCBwYXJ0aWNpcGFudHMgcmVjZWl2ZSBuZWl0aGVyIHByb2dyYW1zLCB0aGVuIHRoZXkgd2lsbCByZWNlaXZlIHRoZSBBQ1QgaW50ZXJ2ZW50aW9uLiBBcyBlYWNoIHN0dWR5IGNvbmRpdGlvbiB3aWxsIGJlIGNvbmR1Y3RlZCB3ZWVrbHkgYW5kIHdpbGwgcnVuIGZvciBhIDYtd2VlayBwZXJpb2QsIHdpdGggbm8gYWxsb2NhdGVkIHRpbWUgaW50ZXJydXB0aW9uIGluIGJldHdlZW4gZWFjaCBjb25kaXRpb24sIHN0dWR5IGR1cmF0aW9uIGlzIGV4cGVjdGVkIHRvIGJlIDEyIHdlZWtzLiBJbiBhZGRpdGlvbiB0byBhdHRlbmRpbmcgZ3JvdXAgc2Vzc2lvbnMsIHBhcnRpY2lwYXRpb24gd2lsbCBhbHNvIGludm9sdmUgY29tcGxldGluZyBhbiBBQ1Qgd29ya2Jvb2suIFRoZSB3b3JrYm9vayB3aWxsIGd1aWRlIHBhcnRpY2lwYW50cyB0aHJvdWdoIHJlZ3VsYXIgaW5kaXZpZHVhbCBBQ1QgcHJhY3RpY2Ugb3V0c2lkZSBncm91cCBzZXNzaW9ucy4gPGJyIC8%2BPGJyIC8%2BVGhlIEFDVCBwcm9ncmFtIHdpbGwgYmUgZGVsaXZlcmVkIGJ5IGFuIEFDVC10cmFpbmVkIHBzeWNob2xvZ2lzdCBhbmQgd2lsbCBmb2N1cyBvbiBwcm92aWRpbmcgcGFydGljaXBhbnRzIHdpdGggc3RyYXRlZ2llcyBiYXNlZCBvbiB0aGUgc2l4IGNvcmUgcHJvY2Vzc2VzIG9mIEFDVCAoQWNjZXB0YW5jZSwgRGVmdXNpb24sIFNlbGYgYXMgQ29udGV4dCwgVmFsdWVzLCBDb250YWN0IHdpdGggdGhlIFByZXNlbnQgTW9tZW50LCBhbmQgQ29tbWl0dGVkIEFjdGlvbikgYWltZWQgYXQgZW5oYW5jaW5nIHBhcnRpY2lwYW50cycgcHN5Y2hvbG9naWNhbCBmbGV4aWJpbGl0eSBhbmQgd2VsbGJlaW5nLiBUaGUgQkNFIHByb2dyYW0gd2lsbCBiZSBmYWNpbGl0YXRlZCBieSBhIHRyYWluZWQgYnJlYXN0IGNhcmUgbnVyc2UgYW5kIGRlbGl2ZXJlZCBieSBleHBlcnRzIHdobyB3aWxsIHByb3ZpZGUgZWR1Y2F0aW9uIHJlbGF0aW5nIHRvIGRpZXQsIHBoeXNpY2FsIGFjdGl2aXR5LCBzZXh1YWxpdHkgY29uY2VybnMsIGNhbmNlciBiaW9sb2d5LCBjbGluaWNhbCBwaHlzaW9sb2d5LCByZWxheGF0aW9uIHRlY2huaXF1ZXMgYW5kIHNsZWVwIGh5Z2llbmUuPGJyIC8%2BPGJyIC8%2BQXQgdGhlIGJlZ2lubmluZyBhbmQgZW5kIG9mIGVhY2ggNi13ZWVrIHN0dWR5IGNvbmRpdGlvbiBwZXJpb2QsIHF1ZXN0aW9ubmFpcmVzIHdpbGwgYmUgYWRtaW5pc3RlcmVkLCBibG9vZCBhbmQgc2FsaXZhIHNhbXBsZXMgd2lsbCBiZSBjb2xsZWN0ZWQsIGFuZCBibG9vZCBwcmVzc3VyZSBhbmQgcmVzdGluZyBoZWFydCByYXRlIHdpbGwgYmUgbWVhc3VyZWQuIFBhcnRpY2lwYW50cyB3aWxsIGJlIGZvbGxvd2VkLXVwIGF0IDYgYW5kIDEyIG1vbnRocyBhZnRlciB0aGUgZmluYWwgc2Vzc2lvbi4gPGJyIC8%2BPGJyIC8%2BQmVuZWZpdHMgb2YgdGhpcyBzdHVkeT88YnIgLz5QYXJ0aWNpcGF0aW5nIGluIHRoaXMgcmVzZWFyY2ggaGFzIHRoZSBwb3RlbnRpYWwgdG8gaW1wcm92ZSB0aGUgcXVhbGl0eSBvZiBsaWZlIG9mIHByb2plY3QgcGFydGljaXBhbnRzIGFuZCBoZWxwIHRoZW0gYmV0dGVyIG1hbmFnZSBhbnhpZXRpZXMgcmVsYXRlZCB0byBmZWFyIG9mIGNhbmNlciByZWN1cnJlbmNlLjxiciAvPjxiciAvPlRoaXMgc3R1ZHkgaGFzIGJlZW4gYXBwcm92ZWQgYnkgdGhlIEh1bWFuIFJlc2VhcmNoIEV0aGljcyBDb21taXR0ZWVzIG9mIHRoZSBEYXJsaW5nIERvd25zIEhvc3BpdGFsIGFuZCBIZWFsdGggU2VydmljZXMgKERESEhTKSBhbmQgdGhlIFVuaXZlcnNpdHkgb2YgU291dGhlcm4gUXVlZW5zbGFuZCAoVVNRKS7xAUVsaWdpYmxlIHN0dWR5IHBhcnRpY2lwYW50cyB3aWxsIGluY2x1ZGUgd29tZW4gYWdlZCAxOCB5ZWFycyBvciBvbGRlciB3aG8gaGF2ZSBjb21wbGV0ZWQgcHJpbWFyeSB0cmVhdG1lbnQgKHN1cmdlcnksIG5lb2FkanV2YW50IG9yIGFkanV2YW50IGNoZW1vdGhlcmFweSBhbmQgcmFkaWF0aW9uIHRoZXJhcHkpIGZvciBlYXJseSAoc3RhZ2UgMSAtIDMpIGJyZWFzdCBjYW5jZXIgaW4gdGhlIHByZXZpb3VzIHR3byB5ZWFycy4IMTggWWVhcnMJIE5vIGxpbWl0B0ZlbWFsZXOtBFBhcnRpY2lwYW50cyB3aWxsIGJlIGV4Y2x1ZGVkIGZvciBhbnkgb2YgdGhlIGZvbGxvd2luZyByZWFzb25zOiA8YnIgLz4oMSkgY3VycmVudGx5IHVuZGVyZ29pbmcgdHJlYXRtZW50IHdpdGggYSBwc3ljaGlhdHJpc3Qgb3IgbWVudGFsIGhlYWx0aCB0aGVyYXBpc3QgKGhvd2V2ZXIgcHJpb3IgdGhlcmFweSBkb2VzIG5vdCBkaXNxdWFsaWZ5IGZyb20gZWxpZ2liaWxpdHkgdG8gcGFydGljaXBhdGUgaW4gdGhpcyByZXNlYXJjaCBwcm92aWRlZCBpdCBvY2N1cnJlZCBtb3JlIHRoYW4gdHdvIHllYXJzIGJlZm9yZSB0aGUgc3RhcnQgb2YgdGhlIHN0dWR5KTsgPGJyIC8%2BKDIpIGhpZ2hseSBkZXBlbmRlbnQgb24gbWVkaWNhbCBjYXJlOzxiciAvPigzKSBoYXZpbmcgYSBoaXN0b3J5IG9mIG9yIHByaW9yIG1vb2QgZGlzb3JkZXIgZGlhZ25vc2VkIGJlZm9yZSBjYW5jZXIgZGlhZ25vc2lzOyA8YnIgLz4oNCkgcHN5Y2hpYXRyaWMgb3IgbmV1cm9sb2dpY2FsIGRpc29yZGVyczsgPGJyIC8%2BKDUpIHVuYWJsZSB0byByZWFkIG9yIHVuZGVyc3RhbmQgc3Bva2VuIEVuZ2xpc2guPGJyIC8%2BDmV4cGFuZGFibGUtYm94ClVuaXZlcnNpdHkhVW5pdmVyc2l0eSBvZiBTb3V0aGVybiBRdWVlbnNsYW5kK01haWwgUm9vbSBXZXN0IFN0cmVldCwgVG9vd29vbWJhLCA0MzUwLCBRTEQJQXVzdHJhbGlhAkRyD0VsaXphIFdoaXRlc2lkZU5Vbml2ZXJzaXR5IG9mIFNvdXRoZXJuIFF1ZWVuc2xhbmQsIE1haWwgUm9vbSBXZXN0IFN0cmVldCwgVG9vd29vbWJhLCA0MzUwLCBRTEQJQXVzdHJhbGlhDys2MSA3IDQ2MzEgMjc4NRplbGl6YS53aGl0ZXNpZGVAdXNxLmVkdS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM2MDYucGRmP3Q9MzEyZGQCLw88KwAEAQAPFgIfA2dkZAIhD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM0NjMmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM0NjMucGRmP3Q9MzEyZGQCBw8PFgIfAgUGMzczNDYzZGQCCQ8PFgIfAgUOMTI2MTcwMDEzMTgzNzBkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0y1gFUaGUg4oCcUFVNUOKAnSBUcmlhbCAtIENvbXBhcmlzb24gb2YgZGlhZ25vc3RpYyBhY2N1cmFjeSBvZiBQU01BIFBFVC9NUkksIFVTUyBNUkkgRnVzaW9uIEJpb3BzeSBhbmQgIlByb2xhcmlzIiBnZW5vbWljIHJpc2sgc3RyYXRpZmllciBpbiByZWNsYXNzaWZpY2F0aW9uIG9mIG1lbiBvbiBBY3RpdmUgU3VydmVpbGxhbmNlIHdpdGggbG93IHJpc2sgcHJvc3RhdGUgY2FuY2VyEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQkxMy85LzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTMxODM3MBExMyBTZXB0ZW1iZXIgMjAxNwRzaG93D1Byb3N0YXRlIENhbmNlcgRzaG93CUF1c3RyYWxpYQRzaG93ClF1ZWVuc2xhbmQEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZw8wMSBPY3RvYmVyIDIwMTcEc2hvdwhBcHByb3ZlZNQJVGhlIHByaW1hcnkgcHVycG9zZSBvZiB0aGlzIHRyaWFsIGlzIHRvIGV2YWx1YXRlIHRoZSBjb21wYXJhdGl2ZSBhY2N1cmFjeSBvZiBkaWZmZXJlbnQgc2NhbnMgYW5kIGJpb3BzeSBkaWFnbm9zdGljIHRlY2huaXF1ZXMgZm9yIGxvdyByaXNrIHByb3N0YXRlIGNhbmNlci48YnIgLz48YnIgLz5XaG8gaXMgaXQgZm9yPzxiciAvPllvdSBtYXkgYmUgZWxpZ2libGUgdG8gZW5yb2xsIGluIHRoaXMgdHJpYWwgaWYgeW91IGFyZSBhZ2VkIDQwIHRvIDc1IHllYXJzIGFuZCBoYXZlIGJlZW4gZGlhZ25vc2VkIHdpdGggbG93IHJpc2sgcHJvc3RhdGUgY2FuY2VyLCBhbmQgd2l0aCBhIGxpZmUgZXhwZWN0YW5jeSBvZiBhdCBsZWFzdCAxMCB5ZWFycy48YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BQWxsIHBhcnRpY2lwYW50cyBlbnJvbGxlZCBpbiB0aGlzIHRyaWFsIHdpbGwgcmVjZWl2ZSBhIDY4R2EtSEJFRC1DQyBQU01BIFBFVC9NUkkgb2YgdGhlIHByb3N0YXRlIGFuZCBwZWx2aXMsIHdoaWNoIGludm9sdmVzIGluamVjdGlvbiBvZiBhIHJhZGlvYWN0aXZlIHN1YnN0YW5jZSAoNjhHYS1IQkVELUNDIFBTTUEpIGZvbGxvd2luZyBieSBseWluZyBpbiB0aGUgc2Nhbm5lciBmb3IgMS0yIGhvdXJzLiBBbGwgcGFydGljaXBhbnRzIHdpbGwgdGhlbiByZWNlaXZlIGEgdHJhbnNwZXJpbmVhbCBiaW9wc3kgb2YgdGhlIHByb3N0YXRlLiBQYXJ0aWNpcGFudHMgd2hvIGhhdmUgbGVzaW9ucyBpZGVudGlmaWVkIG9uIHRoZSA2OEdhLUhCRUQtQ0MgUFNNQSBQRVQvTVJJIHNjYW4gd2lsbCByZWNlaXZlIGEgYmlvcHN5IHByb2NlZHVyZSB0YXJnZXRpbmcgdGhvc2UgbGVzaW9ucyB3aGVuIHRoZXkgaGF2ZSB0cmFuc3BlcmluZWFsIGJpb3BzeSBvZiB0aGUgcHJvc3RhdGUuIFJlc2VhcmNoZXJzIHdpbGwgdGhlbiBjb21wbGV0ZSBnZW5ldGljIGFuYWx5c2lzIG9uIHRoZSBwcmV2aW91cyBiaW9wc3kgc2FtcGxlLjxiciAvPjxiciAvPlRoZSByZXN1bHRzIG9mIHRoZSBzY2FubmluZyB0ZWNobmlxdWVzLCB0aGUgYmlvcHN5IHJlc3VsdCBhbmQgdGhlIGdlbmV0aWMgdGVzdGluZyBzY29yZSB3aWxsIGFsbCBiZSBjb21wYXJlZCB0byBkZXRlcm1pbmUgdGhlIG1vc3QgYWNjdXJhdGUgdGVjaG5pcXVlIGZvciByZWNsYXNzaWZ5aW5nIG1lbiBwcmV2aW91c2x5IGRpYWdub3NlZCB3aXRoIGxvdyByaXNrIHByb3N0YXRlIGNhbmNlciBpbnRvIGhpZ2hlciByaXNrIGNhdGVnb3JpZXMuPGJyIC8%2B1wMxLgk0MCB0byA3NSB5ZWFycyBvZiBhZ2UsIHdpdGggYSBsaWZlIGV4cGVjdGFuY3kgb2YgYXQgbGVhc3QgMTAgeWVhcnMgd2l0aCBwYXRob2xvZ2ljYWxseSBkaWFnbm9zZWQgbG93IHJpc2sgcHJvc3RhdGUgY2FuY2VyIGRlZW1lZCBzdWl0YWJsZSBmb3IgYWN0aXZlIHN1cnZlaWxsYW5jZSAoYmFzZWQgb24gTklDRSBjcml0ZXJpYSkgb3IgZGVmaW5pdGl2ZSB0aGVyYXB5IG9mIGN1cmF0aXZlIGludGVudDxiciAvPjIuCUhpc3Rvcnkgb2YgcHJldmlvdXMgcHJvc3RhdGUgYmlvcHN5IGRpYWdub3NpbmcgbG93IHJpc2sgcHJvc3RhdGUgY2FuY2VyIG5vIHNvb25lciB0aGFuIDYgd2Vla3MgcHJpb3IuPGJyIC8%2BMy4JTm8ga25vd24gcHJvYmxlbXMgd2l0aCBwZXJpcGhlcmFsIGludHJhdmVub3VzIG9yIGNlbnRyYWwgbGluZSBhY2Nlc3M8YnIgLz40LglBYmxlIHRvIHByb3ZpZGUgaW5mb3JtZWQgc2lnbmVkIGNvbnNlbnQ8YnIgLz4INDAgWWVhcnMINzUgWWVhcnMFTWFsZXPUAzEuCUFnZSB1bmRlciA0MCBvciBncmVhdGVyIHRoYW4gNzUgeWVhcnM8YnIgLz4yLglVbmFibGUgdG8gbGllIGZsYXQgZHVyaW5nIG9yIHVuYWJsZSB0byB0b2xlcmF0ZSBQRVQvTVJJPGJyIC8%2BMy4JQ29udHJhaW5kaWNhdGlvbiB0byBQRVQgc2NhbiBvciBbNjhHYV1nYWxsaXVtLWxhYmVsbGVkIFBTTUEgbGlnYW5kIDxiciAvPjQuCUNsYXVzdHJvcGhvYmlhIG5vdCBtYW5hZ2VhYmxlIGJ5IG9yYWwgc2VkYXRpdmVzIGllIFRlbWF6ZXBhbTxiciAvPjUuCVJlbmFsIGltcGFpcm1lbnQgKGVHRlIgbGVzcyB0aGFuIDMwKTxiciAvPjYuCUNvbnRyYWluZGljYXRpb24gdG8gY29uZmlybWF0b3J5IHByb3N0YXRlIGJpb3BzeSBvZiBpZGVudGlmaWVkIGxlc2lvbnMgdW5kZXIgZ2VuZXJhbCBhbmFlc3RoZXRpYzxiciAvPjcuCU5vdCBzdWl0YWJsZSBmb3IgZGVmaW5pdGl2ZSB0aGVyYXB5IG9mIGN1cmF0aXZlIGludGVudDxiciAvPg5leHBhbmRhYmxlLWJveAhIb3NwaXRhbBtQcmluY2VzcyBBbGV4YW5kcmEgSG9zcGl0YWw%2BUHJpbmNlc3MgQWxleGFuZHJhIEhvc3BpdGFsLCAxOTkgSXBzd2ljaCBSZCwgQnJpc2JhbmUgUUxEIDQxMDIJQXVzdHJhbGlhAkRyCElhbiBWZWxhVkRlcGFydG1lbnQgb2YgVXJvbG9neSwgUHJpbmNlc3MgQWxleGFuZHJhIEhvc3BpdGFsLiwgMTk5IElwc3dpY2ggUmQsIEJyaXNiYW5lIFFMRCA0MTAyCUF1c3RyYWxpYQ8rNjEgNyAzMTc2IDc5NTcOaWFudmVsYUBtZS5jb20GaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNDYzLnBkZj90PTMxMmRkAi8PPCsABAEADxYCHwNnZGQCIw9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczNTU2JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSYvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNTU2LnBkZj90PTMxMmRkAgcPDxYCHwIFBjM3MzU1NmRkAgkPDxYCHwIFDjEyNjE3MDAxMjg3MzI1ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMmAgQSBwaWxvdCB0cmlhbCBhc3Nlc3NpbmcgdGhlIGVmZmljYWN5IGFuZCBzYWZldHkgb2YgbWVkaWNpbmFsIGNhbm5hYmlzIGluIHBhdGllbnRzIHdpdGggZ2xpb21hcy4STm90IHlldCByZWNydWl0aW5nB2luZm8tbGkRTm90IHlldCBzdWJtaXR0ZWQHaW5mby1saStQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQ8YnIgLz4ocHJvdmlzaW9uYWwpMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQg2LzkvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDARTm90IHlldCBzdWJtaXR0ZWQKVXAgdG8gZGF0ZRRBQ1RSTjEyNjE3MDAxMjg3MzI1cBEwNiBTZXB0ZW1iZXIgMjAxNwRzaG93F0dsaW9ibGFzdG9tYSBtdWx0aWZvcm0gBHNob3cJQXVzdHJhbGlhBHNob3cPTmV3IFNvdXRoIFdhbGVzBHNob3cEc2hvdxJOb3QgeWV0IHJlY3J1aXRpbmcPMDggSmFudWFyeSAyMDE4BHNob3cRTm90IHlldCBzdWJtaXR0ZWT9CFRoZSBwdXJwb3NlIG9mIHRoaXMgc3R1ZHkgaXMgdG8gaW52ZXN0aWdhdGUgdGhlIHNhZmV0eSBhbmQgZWZmaWNhY3kgb2YgdHdvIHN0cmVuZ3RocyBvZiBvcmFsIG1lZGljaW5hbCBjYW5uYWJpcyBvaWwgaW4gcGF0aWVudHMgd2hvIGhhdmUgYmVlbiBkaWFnbm9zZWQgd2l0aCByZWN1cnJlbnQgZ2xpb2JsYXN0b21hIG11bHRpZm9ybWUgKEdCTSkuPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYXJlIGFnZWQgMTggeWVhcnMgb3IgYWJvdmUgYW5kIGhhdmUgYmVlbiBkaWFnbm9zZWQgd2l0aCBhIHJlY3VycmVudCBicmFpbiBtYWxpZ25hbmN5IChHQk0pOiBNUkkgcmV2ZWFsaW5nIHJlY3VycmVudCB0dW1vdXIgZ3Jvd3RoLiA8YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BVGhlIHBhdGllbnRzIHdpbGwgYmUgZ2l2ZW4gdGhlIGNob2ljZSB0byBiZSBpbiBhIGNvbnRyb2wgZ3JvdXAgb3IgYSBtZWRpY2luYWwgY2FubmFiaXMgaW50ZXJ2ZW50aW9uIGdyb3VwLiBJZiB0aGV5IGNob29zZSBhIG1lZGljaW5hbCBjYW5uYWJpcyBncm91cCwgdGhleSB3aWxsIGJlIHJhbmRvbWlzZWQgdG8gcmVjZWl2ZSBvbmUgb2YgdHdvIGRpZmZlcmVudCBDQkQ6VENIIHN0cmFpbnMgZm9yIDEyIHdlZWtzLiBFYWNoIHBhcnRpY2lwYW50IGluY2x1ZGluZyB0aGUgY29udHJvbCB3aWxsIGhhdmUgYSBNUkkgYXQgYmFzZWxpbmUgYW5kIGF0IDEyIHdlZWtzLiBCbG9vZCB3b3JrIHdpbGwgYmUgY29uZHVjdGVkIGF0IGJhc2VsaW5lLCA0IHdlZWtzLCA4IHdlZWtzIGFuZCAxMiB3ZWVrcy4gU2FmZXR5IGFuZCB0b3hpY2l0eSB3aWxsIGJlIG1vbml0b3JlZCB0aHJvdWdoIHRoZSB0cmlhbC4gPGJyIC8%2BPGJyIC8%2BSG93IHRoaXMgc3R1ZHkgd2lsbCBjb250cmlidXRlIHRvIHJlc2VhcmNoIGFuZC9vciBUcmVhdG1lbnQ8YnIgLz5UaGlzIHJlc2VhcmNoIHdpbGwgYXNzaXN0IG1lZGljYWwgZG9jdG9ycyBhbmQgcGF0aWVudHMgdW5kZXJzdGFuZGluZyBpZiBtZWRpY2luYWwgY2FubmFiaXMgY2FuIGFzc2lzdCB0aGVpciB0cmVhdG1lbnQgaW4gc2xvd2luZyBnbGlvbWEgdHVtb3VyIHJlLWdyb3d0aCBvciBncm93dGggYW5kIHdoYXQgZG9zZSB0byB1c2UuIN8JRGlhZ25vc2lzOiBSZWN1cnJlbnQgR2xpb2JsYXN0b21hIG11bHRpZm9ybWUgKEdNQik8YnIgLz4qIFJlY3VycmVudCBDYW5jZXIgRGVmaW5pdGlvbjogQ2FuY2VyIHRoYXQgaGFzIHJlY3VycmVkIChjb21lIGJhY2spLCB1c3VhbGx5IGFmdGVyIGEgcGVyaW9kIG9mIHRpbWUgZHVyaW5nIHdoaWNoIHRoZSBjYW5jZXIgY291bGQgbm90IGJlIGRldGVjdGVkLiBUaGUgY2FuY2VyIG1heSBjb21lIGJhY2sgdG8gdGhlIHNhbWUgcGxhY2UgYXMgdGhlIG9yaWdpbmFsIChwcmltYXJ5KSB0dW1vciBvciB0byBhbm90aGVyIHBsYWNlIGluIHRoZSBib2R5LiBBbHNvIGNhbGxlZCByZWN1cnJlbmNlLiAoTmF0aW9uYWwgQ2FuY2VyIEluc3RpdHV0ZSBEaWN0aW9uYXJ5IGZvciBDYW5jZXIpPGJyIC8%2BPGJyIC8%2BMS4JSGF2ZSBiZWVuIGRpYWdub3NlZCB3aXRoIGEgcmVjdXJyZW50IGJyYWluIG1hbGlnbmFuY3kgKEdCTSk6IE1SSSByZXZlYWxpbmcgcmVjdXJyZW50IHR1bW91ciBncm93dGg8YnIgLz4yLglHcmVhdGVyIHRoYW4gb3IgZXF1YWwgdG8gMTggeWVhcnMgb2YgYWdlPGJyIC8%2BMy4JUGF0aWVudCBzdGF0dXM6IDxiciAvPmEpCUxpdmVyIGZ1bmN0aW9uOiBUb3RhbCBiaWxpcnViaW4gbGVzcyB0aGFuIG9yIGVxdWFsIHRvIDIgVUxOLCBBTFQgb3IgQVNUIGlzIGxlc3MgdGhhbiBvciBlcXVhbCB0byAyLjUgVUxOIChvciBsZXNzIHRoYW4gNSBpbiBjYXNlIG9mIGxpdmVyIGltcGFpcm1lbnQpLiA8YnIgLz5iKQlTZXJ1bSBjcmVhdGluaW5lIGlzIGxlc3MgdGhhbiBvciBlcXVhbCB0byAxLjUgVUxOPGJyIC8%2BNC4JV2lsbGluZyB0byBjb25zaWRlciBwYXJ0aWNpcGF0aW5nIGluIGEgY2xpbmljYWwgdHJpYWwgdXNpbmcgb3JhbCBtZWRpY2luYWwgY2FubmFiaXM8YnIgLz41LglEaWFnbm9zaXMgb2YgcmVjdXJyZW50IHR1bW91ciBwcm9ncmVzc2lvbjxiciAvPjYuCUluZGl2aWR1YWxzIHdobyBoYXZlIG5vIGhpc3Rvcnkgb2Ygc3Vic3RhbmNlIGFidXNlIHdpdGhpbiB0aGUgbGFzdCAyIHllYXJzPGJyIC8%2BNy4JUHJlZ25hbmN5OjxiciAvPmEpCU5lZ2F0aXZlIHRlc3QgaW4gd29tZW4gb2YgY2hpbGRiZWFyaW5nIHBvdGVudGlhbDxiciAvPmIpCVVzZSBvZiBlZmZlY3RpdmUgY29udHJhY2VwdGl2ZSBtZXRob2QgZHVyaW5nIHRoZSB3aG9sZSB0cmVhdG1lbnQgYW5kIHVwIHRvIDMgbW9udGhzIHBvc3QgY29tcGxldGlvbiBvZiB0aGUgdHJlYXRtZW50IGluIGJvdGggbWFsZXMgYW5kIGZlbWFsZXM8YnIgLz4IMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXOJBzEuCVByZWduYW50IG9yIGJyZWFzdCBmZWVkaW5nIHdvbWVuLiA8YnIgLz4yLglTZXZlcmUgY29nbml0aXZlbHkgaW1wYWlyZWQgcGF0aWVudHMgd2hvIGFyZSB1bmFibGUgdG8gdW5kZXJzdGFuZCBvciBjb21wcmVoZW5kIHRoZSBwYXJ0aWNpcGF0aW9uIGluIHRoZSB0cmlhbCA8YnIgLz4zLglJbmRpdmlkdWFscyB3aG8gaGF2ZSBzZXZlcmUgbWVudGFsIGlsbG5lc3MgZS5nLiBiaXBvbGFyIGRpc29yZGVyLCBzY2hpem9waHJlbmlhPGJyIC8%2BNC4JTm9uLUVuZ2xpc2ggc3BlYWtpbmcgaW5kaXZpZHVhbHM8YnIgLz41LglTZXZlcmUgYmFjdGVyaWFsLCB2aXJhbCBvciBmdW5nYWwgaW5mZWN0aW9uIChHcmFkZSBncmVhdCB0aGFuIDIgTkNJLUNUQ0FFIHYgNC4wKTxiciAvPjYuCVBhcnRpY2lwYXRpb24gaW4gYW5vdGhlciBpbnRlcnZlbnRpb25hbCBjbGluaWNhbCB0cmlhbDxiciAvPjcuCUluZGl2aWR1YWxzIHdobyBoYXZlIGEgcGFzdCBoaXN0b3J5IG9mIGNhbm5hYmlzIGFkZGl0aW9uIG9yIG1ham9yIHN1YnN0YW5jZSBhYnVzZSAoZGVwZW5kZW5jZSBvbiBjYW5uYWJpcyk8YnIgLz44LglQYXN0IGhpc3Rvcnkgb2YgYWR2ZXJzZSBldmVudHMgZnJvbSBjYW5uYWJpczxiciAvPjkuCUluZGl2aWR1YWxzIHdobyBoYXZlIGhhZCBhbiBhZHZlcnNlIGV2ZW50IGZyb20gcGFzdCBjYW5uYWJpcyB1c2U8YnIgLz4xMC4JSW5kaXZpZHVhbHMgd2hvIGhhdmUgaGFkIGEgcGFzdCBoaXN0b3J5IG9mIG15b2NhcmRpYWwgaW5mYXJjdGlvbnMgKE1JKSBvciBhbmdpbmEgcGVjdG9yaXMuPGJyIC8%2BMTEuCVNldmVyZSBsaXZlciBhbmQga2lkbmV5IGRpc2Vhc2UuPGJyIC8%2BMTIuCUNvbnRpbnVlZCB1c2Ugb2YgYW5vdGhlciBtZWRpY2luYWwgY2FubmFiaXMgcHJvZHVjdCBkdXJpbmcgdGhlIHRyaWFsPGJyIC8%2BDmV4cGFuZGFibGUtYm94ClVuaXZlcnNpdHkjRW5kZWF2b3VyIENvbGxlZ2Ugb2YgTmF0dXJhbCBIZWFsdGg3TGV2ZWwgMiwgMjY5IFdpY2toYW0gU3Q8YnIgLz5Gb3J0aXR1ZGUgVmFsbGV5ICBRbGQgNDAwNglBdXN0cmFsaWEDTXJzDktpbWJlcmxleSBSeWFueE9mZmljZSBvZiBSZXNlYXJjaDxiciAvPkVuZGVhdm91ciBDb2xsZWdlIG9mIE5hdHVyYWwgSGVhbHRoPGJyIC8%2BTGV2ZWwgMiwgMjY5IFdpY2toYW0gU3Q8YnIgLz5Gb3J0aXR1ZGUgVmFsbGV5ICBRbGQgNDAwNglBdXN0cmFsaWEOKzYxIDcgMzI1Mzk1ODIfa2ltYmVybGV5LnJ5YW5AZW5kZWF2b3VyLmVkdS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM1NTYucGRmP3Q9MzEyZGQCLw88KwAEAQAPFgIfA2dkZAIlD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzMyMjcmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzMyMjcucGRmP3Q9MzEyZGQCBw8PFgIfAgUGMzczMjI3ZGQCCQ8PFgIfAgUOMTI2MTcwMDEyODMzNjlkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0ysgFDYW5jZXIgQW5kIFBoeXNpY2FsIEFDdGl2SVRZIChDQVBBQ0lUWSkgdHJpYWw6IEEgcmFuZG9taXNlZCBjb250cm9sIHRyaWFsIHRvIGV2YWx1YXRlIHRoZSBlZmZlY3Qgb2YgZXhlcmNpc2UgYW5kIHNlbGYtbWFuYWdlbWVudCBvbiBwaHlzaWNhbCBmdW5jdGlvbiBpbiBwZW9wbGUgd2l0aCBsdW5nIGNhbmNlcg0KEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQkyMi85LzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTI4MzM2OREwNiBTZXB0ZW1iZXIgMjAxNwRzaG93C0x1bmcgY2FuY2VyBHNob3cJQXVzdHJhbGlhBHNob3cIVmljdG9yaWEEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZxEyMiBTZXB0ZW1iZXIgMjAxNwRzaG93CEFwcHJvdmVkiw1UaGlzIHN0dWR5IHdpbGwgZXZhbHVhdGUgdGhlIGVmZmVjdCBvZiBhbiBleGVyY2lzZSBhbmQgZWR1Y2F0aW9uIHNlbGYtbWFuYWdlbWVudCBwcm9ncmFtIG9uIHBoeXNpY2FsIGZ1bmN0aW9uIGFuZCBmdW5jdGlvbmFsIHJlY292ZXJ5IGluIHBlb3BsZSB1bmRlcmdvaW5nIHN1cmdlcnkgZm9yIGx1bmcgY2FuY2VyLjxiciAvPjxiciAvPldobyBpcyBpdCBmb3I%2FPGJyIC8%2BWW91IG1heSBiZSBlbGlnaWJsZSB0byBqb2luIHRoaXMgc3R1ZHkgaWYgeW91IGFyZSBhZ2VkIDE4IHllYXJzIG9yIGFib3ZlLCBwbGFuIHRvIHVuZGVyZ28gc3VyZ2ljYWwgdHJlYXRtZW50IGZvciBub24tc21hbGwgY2VsbCBsdW5nIGNhbmNlciAoTlNDTEMpLCBhbmQgZG8gbm90IGN1cnJlbnRseSBtZWV0IHBoeXNpY2FsIGFjdGl2aXR5IGd1aWRlbGluZXMuIDxiciAvPjxiciAvPlN0dWR5IGRldGFpbHM8YnIgLz5QYXJ0aWNpcGFudHMgaW4gdGhpcyBzdHVkeSB3aWxsIGJlIHJhbmRvbWx5IGFsbG9jYXRlZCAoYnkgY2hhbmNlKSB0byBvbmUgb2YgdHdvIGdyb3VwcyBwcmlvciB0byB1bmRlcmdvaW5nIHN1cmdlcnkuIFBhcnRpY2lwYW50cyBpbiBvbmUgZ3JvdXAgd2lsbCBjb250aW51ZSB0byByZWNlaXZlIHVzdWFsIGNhcmUgdGhyb3VnaG91dCB0aGUgc3R1ZHkuIFBhcnRpY2lwYW50cyBpbiB0aGUgb3RoZXIgZ3JvdXAgd2lsbCByZWNlaXZlIGFuIGV4ZXJjaXNlIGFuZCBlZHVjYXRpb24gc2VsZi1tYW5hZ2VtZW50IHByb2dyYW0gaW4gYWRkaXRpb24gdG8gdXN1YWwgY2FyZS4gVGhlIHByb2dyYW0gY29uc2lzdHMgb2YgdHdvIGFwcG9pbnRtZW50cyB3aXRoIGEgcGh5c2lvdGhlcmFwaXN0IChvbmUgcHJlLW9wZXJhdGl2ZWx5IGFuZCBvbmUgYmVmb3JlIGhvc3BpdGFsIGRpc2NoYXJnZSBwb3N0LW9wZXJhdGl2ZWx5KS4gQWRkaXRpb25hbGx5LCB0aGUgcGF0aWVudCB3aWxsIHJlY2VpdmUgd2Vla2x5IHBob25lIGNhbGxzIGJlZm9yZSBzdXJnZXJ5IGFuZCB1cCB0byAxMiB3ZWVrcyBhZnRlciBzdXJnZXJ5IHRvIHByb21vdGUgYWRoZXJlbmNlIHRvIHBoeXNpY2FsIGFjdGl2aXR5IGdvYWxzLCBkaXNjdXNzIGJhcnJpZXJzL2lzc3VlcyB3aXRoIHRoZWlyIGV4ZXJjaXNlIGFuZCBwcm9ncmVzcyB0aGVpciBleGVyY2lzZSBwcm9ncmFtLiA8YnIgLz48YnIgLz5BbGwgcGFydGljaXBhbnRzIHdpbGwgdW5kZXJnbyBhIG51bWJlciBvZiB0ZXN0cyBpbmNsdWRpbmcgbWVhc3VyZW1lbnQgb2YgcGh5c2ljYWwgZnVuY3Rpb24sIHF1YWxpdHkgb2YgbGlmZSBhbmQgcGh5c2ljYWwgYWN0aXZpdHkgYmVmb3JlIHN1cmdlcnksIGF0IGhvc3BpdGFsIGRpc2NoYXJnZSwgYW5kIDMgYW5kIDYgbW9udGhzIHBvc3Qtc3VyZ2VyeS4gV2Ugd2lsbCBhbHNvIGZvbGxvdyB1cCB0byBsb29rIGF0IHF1YWxpdHkgb2YgbGlmZSwgaGVhbHRoIGNhcmUgcmVzb3VyY2UgdXNhZ2UgYW5kIHRoZSBjb3N0IGVmZmVjdGl2ZW5lc3Mgb2YgdGhlIGludGVydmVudGlvbiBvdmVyIDEyIG1vbnRocyBmcm9tIHN1cmdlcnksIGFuZCBzdXJ2aXZhbCB1cCB0byA1IHllYXJzIHBvc3Qtc3VyZ2VyeS4gVGhpcyBzdHVkeSB3aWxsIHByb3ZpZGUgaW1wb3J0YW50IGluZm9ybWF0aW9uIG9uIHRoZSBlZmZlY3RzIG9mIGFuIGV4ZXJjaXNlIGJhc2VkIGludGVydmVudGlvbiBmb3IgcGVvcGxlIHdpdGggbHVuZyBjYW5jZXIuwAMtCUFkdWx0cywgYWdlZCAxOCB5ZWFycyBvciBvdmVyPGJyIC8%2BLQlBYmxlIHRvIHByb3ZpZGUgY29uc2VudDxiciAvPi0JUGxhbm5lZCB0byByZWNlaXZlIHN1cmdpY2FsIHRyZWF0bWVudCBmb3Igbm9uLXNtYWxsIGNlbGwgbHVuZyBjYW5jZXIgKE5TQ0xDKTxiciAvPi0JRXhwZWN0ZWQgdG8gYmUgYWxpdmUgPiA2IG1vbnRoczxiciAvPi0JRWFzdGVybiBDb29wZXJhdGUgT25jb2xvZ3kgR3JvdXAgKEVDT0cpIHBlcmZvcm1hbmNlIHN0YXR1cyBvZiAwLTIgYXQgc3R1ZHkgZW50cnk8YnIgLz4tCU5vdCBjdXJyZW50bHkgbWVldGluZyB0aGUgcGh5c2ljYWwgYWN0aXZpdHkgZ3VpZGVsaW5lcyAoMTUwIG1pbnV0ZXMgb2YgbW9kZXJhdGUgaW50ZW5zaXR5IHBoeXNpY2FsIGFjdGl2aXR5IG9yIDc1IG1pbnV0ZXMgb2Ygdmlnb3JvdXMgcGh5c2ljYWwgYWN0aXZpdHkgcGVyIHdlZWspPGJyIC8%2BCDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzoQQtCU5vbi1FbmdsaXNoIHNwZWFraW5nIChpbnN1ZmZpY2llbnQgRW5nbGlzaCBsYW5ndWFnZSBza2lsbHMgdG8gY29tcGxldGUgdGhlIHF1ZXN0aW9ubmFpcmVzKTxiciAvPi0JTWV0YXN0YXRpYyBkaXNlYXNlIChzdGFnZSBJViBsdW5nIGNhbmNlcik8YnIgLz4tCUFjdXRlIHVuY29udHJvbGxlZCBjYXJkaW92YXNjdWxhciBvciByZXNwaXJhdG9yeSBpc3N1ZXMgPGJyIC8%2BLQlEZWNvbXBlbnNhdGVkIGhlYXJ0IGZhaWx1cmUsIHNldmVyZSBhb3J0aWMgc3Rlbm9zaXMsIHVuY29udHJvbGxlZCBhcnJoeXRobWlhLCBvciBhY3V0ZSBjb3JvbmFyeSBzeW5kcm9tZTxiciAvPi0JTm9uLWFtYnVsYW50IChmb3IgZXhhbXBsZTogYW1wdXRlZSwgc3BpbmFsIGNvcmQgaW5qdXJ5LCB3aGVlbC1jaGFpciBib3VuZCk8YnIgLz4tCUVDT0cgcGVyZm9ybWFuY2Ugc3RhdHVzIG9mIDMgb3IgNCBhdCBzdHVkeSBlbnRyeTxiciAvPi0JQ29nbml0aXZlIGltcGFpcm1lbnQgKGRldGVybWluZWQgYXMgbm90IGJlaW5nIGFibGUgdG8gcHJvdmlkZSBjb25zZW50IGZvciBzdXJnZXJ5KQ5leHBhbmRhYmxlLWJveApVbml2ZXJzaXR5G1RoZSBVbml2ZXJzaXR5IG9mIE1lbGJvdXJuZSkxNjEgQmFycnkgU3RyZWV0LCBQYXJrdmlsbGUgMzAxMCBWaWN0b3JpYQlBdXN0cmFsaWECRHIRQ2F0aGVyaW5lIEdyYW5nZXJmVGhlIFVuaXZlcnNpdHkgb2YgTWVsYm91cm5lPGJyIC8%2BTGV2ZWwgNywgQWxhbiBHaWxiZXJ0IEJ1aWxkaW5nLCAxNjEgQmFycnkgU3RyZWV0LCBQYXJrdmlsbGUgMzAxMCwgVklDCUF1c3RyYWxpYQ4rNjEzIDgzNDQgODEyNiBDYXRoZXJpbmUuR3JhbmdlckB1bmltZWxiLmVkdS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzMyMjcucGRmP3Q9MzEyZGQCLw88KwAEAQAPFgIfA2dkZAInD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM1MzImaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM1MzIucGRmP3Q9MzEyZGQCBw8PFgIfAgUGMzczNTMyZGQCCQ8PFgIfAgUOMTI2MTcwMDEyNzIzODFkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0yhgFFdmFsdWF0aW9uIG9mIHRoZSBpbmNpZGVuY2UgYW5kIHR5cGUgb2YgcHN5Y2hvc29jaWFsIG5lZWRzIGluIDE0LTI0IHllYXIgb2xkIG9mZnNwcmluZyBvZiB3b21lbiB3aXRoIGVhcmx5IG9yIG1ldGFzdGF0aWMgYnJlYXN0IGNhbmNlchJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGFByb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUINC85LzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTI3MjM4MREwNCBTZXB0ZW1iZXIgMjAxNwRzaG93IVBzeWNob3NvY2lhbCBuZWVkcywgQnJlYXN0IGNhbmNlcgRzaG93CUF1c3RyYWxpYQRzaG93EVdlc3Rlcm4gQXVzdHJhbGlhBHNob3cEc2hvdxJOb3QgeWV0IHJlY3J1aXRpbmcRMTggU2VwdGVtYmVyIDIwMTcEc2hvdwhBcHByb3ZlZLUIVGhlIGFpbSBvZiB0aGlzIHN0dWR5IGlzIHRvIGV2YWx1YXRlIHRoZSBpbmNpZGVuY2UgYW5kIHR5cGUgb2YgcHN5Y2hvc29jaWFsIG5lZWRzIGluIDE0LTI0IHllYXIgb2xkIG9mZnNwcmluZyBvZiB3b21lbiB3aXRoIGVhcmx5IG9yIG1ldGFzdGF0aWMgYnJlYXN0IGNhbmNlci4gPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYXJlIGFnZWQgMTQtMjQgeWVhcnMgYW5kIGhhdmUgYSBtb3RoZXIgZGlhZ25vc2VkIHdpdGggc3RhZ2UgSSB0byBJViBicmVhc3QgY2FuY2VyLiA8YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BU3R1ZHkgc3RhZmYgd2lsbCBwaG9uZSBwYXJ0aWNpcGFudHMgdG8gb2J0YWluIGRlbW9ncmFwaGljIGluZm9ybWF0aW9uIGFib3V0IGdlbmRlciwgYWdlLCBzY2hvb2xpbmcsIHBsYWNlIG9mIGJpcnRoLCBmYW1pbHkgc2l0dWF0aW9uICh3aG8gdGhleSBsaXZlIHdpdGgpLCB3aGV0aGVyIHRoZXkgaGF2ZSBhbnkgaW1wb3J0YW50IG1lZGljYWwgY29uZGl0aW9ucyBhbmQgYW55IGNhbmNlciBoaXN0b3J5IG9mIHRoZWlyIGltbWVkaWF0ZSBmYW1pbHkuIFBhcnRpY2lwYW50cyB3aWxsIGJlIGVtYWlsZWQgYSBsaW5rIHRvIGFuIG9ubGluZSBzdXJ2ZXkgY29tcHJpc2VkIG9mIDIgcXVlc3Rpb25uYWlyZXMgb25saW5lIHdoaWNoIHRoZXkgYXJlIHJlcXVpcmVkIHRvIGNvbXBsZXRlIHdpdGhpbiAyOCBkYXlzLiBXZSBhbnRpY2lwYXRlIHRpbWUgdG8gcGFydGljaXBhdGUgYW5kIGNvbXBsZXRlIGFsbCBhc3BlY3RzIG9mIHRoZSB0cmlhbCB3aWxsIHRha2UgaW5kaXZpZHVhbHMgYSB0b3RhbCBvZiAzMC00MCBtaW51dGVzLjxiciAvPjxiciAvPkluZm9ybWF0aW9uIGNvbGxlY3RlZCB3aWxsIGJlIGFuYWx5c2VkIHdpdGggdGhlIGFpbSBvZiBpZGVudGlmeWluZyB3aGF0IHRoZSBuZWVkcyBhbmQgdGhlIGJlc3QgdHlwZXMgb2Ygc3VwcG9ydCB0aGF0IGNhbiBiZSBwcm92aWRlZCB0byBoZWxwIG90aGVyIHlvdW5nIHBlb3BsZSB3aG8gYWxzbyBoYXZlIG1vdGhlcnMgd2l0aCBjYW5jZXIu3wQxLiBXcml0dGVuIGluZm9ybWVkIGNvbnNlbnQgb2YgcGFydGljaXBhbnRzIChwYXJlbnRhbCBjb25zZW50IGFsc28gcmVxdWlyZWQgaW4gc3ViamVjdHMgdW5kZXIgMTggeWVhcnMpPGJyIC8%2BMi4gV3JpdHRlbiBpbmZvcm1lZCBjb25zZW50IG9mIHRoZSBtb3RoZXIg4oCcQ29uc2VudCBmb3IgVXNlIG9mIFBlcnNvbmFsIEhlYWx0aCBJbmZvcm1hdGlvbuKAnTxiciAvPjMuIE1hbGUgYW5kIGZlbWFsZSBhZ2VkIGJldHdlZW4gMTQtMjR5cnMgYXQgdGhlIHRpbWUgb2YgY29uc2VudDxiciAvPjQuIE1vdGhlciBkaWFnbm9zZWQgd2l0aCBzdGFnZSBJIHRvIElWIGJyZWFzdCBjYW5jZXI8YnIgLz41LiBBYmxlIHRvIHJlYWQgRW5nbGlzaCBhbmQgdW5kZXJzdGFuZCBxdWVzdGlvbnMgYXNrZWQ8YnIgLz42LiBQYXJ0aWNpcGFudHMgbWF5IGJlIGFkb3B0ZWQ8YnIgLz43LiBSZXNpZGVzIGluIFdlc3Rlcm4gQXVzdHJhbGlhPGJyIC8%2BOC4gT2Zmc3ByaW5nIHdob3NlIG1vdGhlciB3aXRoIGJyZWFzdCBjYW5jZXIgaXMgdGhlIHNvbGUgcGFyZW50IGFyZSBlbGlnaWJsZTxiciAvPjkuIE1vdGhlciBtdXN0IGJlIGEgY3VycmVudCBwYXRpZW50IGF0IHRoZSByZXNlYXJjaCBzaXRlCDE0IFllYXJzCDI0IFllYXJzFkJvdGggbWFsZXMgYW5kIGZlbWFsZXOBAzEuIE5vIHNvY2lhbCBjb250YWN0IHdpdGggbW90aGVyIHdobyBoYXMgYnJlYXN0IGNhbmNlcjxiciAvPjIuIEFueSBwZXJzb25hbCBoaXN0b3J5IG9mIGNhbmNlcjxiciAvPjMuIFBzeWNob2xvZ2ljYWxseSBvciBlbW90aW9uYWxseSB1bmFibGUgdG8gYW5zd2VyIHF1ZXN0aW9ubmFpcmUgYXMgYXNzZXNzZWQgYnkgbW90aGVyIHdobyBoYXMgYnJlYXN0IGNhbmNlcjxiciAvPjQuIEFueSBvdGhlciBpbW1lZGlhdGUgZmFtaWx5IG1lbWJlciAoaS5lLiBhbm90aGVyIHBhcmVudCwgc3RlcCBwYXJlbnQgb3Igc2libGluZykgcmVjZWl2aW5nIHRyZWF0bWVudCBmb3IgYW55IGNhbmNlciBvciBkaWFnbm9zZWQgd2l0aCBhbnkgY2FuY2VyIHRoYXQgaXMgbm90IGRlZW1lZCBjdXJlZC4OZXhwYW5kYWJsZS1ib3gfQ2hhcml0aWVzL1NvY2lldGllcy9Gb3VuZGF0aW9ucyBCcmVhc3QgQ2FuY2VyIFJlc2VhcmNoIENlbnRyZS1XQXRIb2xseXdvb2QgUHJpdmF0ZSBIb3NwaXRhbDxiciAvPkVudHJhbmNlIDMsIExvd2VyIEdyb3VuZCBmbG9vcjxiciAvPjEwMSBNb25hc2ggQXZlLCBOZWRsYW5kcywgUGVydGguIFcuQS4gNjAwOTxiciAvPglBdXN0cmFsaWEETWlzcw1NZWxhbmllIENoZWFobEhvbGx5d29vZCBQcml2YXRlIEhvc3BpdGFsLCBFbnRyYW5jZSAzLCBMb3dlciBHcm91bmQgRmxvb3IsIDEwMSBNb25hc2ggQXZlLCBOZWRsYW5kcyA2MDA5IFdlc3Rlcm4gQXVzdHJhbGlhIAlBdXN0cmFsaWEOKzYxIDggNjUwMDU1NTUTYmN0dUBiY3JjLXdhLmNvbS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJi9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM1MzIucGRmP3Q9MzEyZGQCLw88KwAEAQAPFgIfA2dkZAIpDxQrAAJkZGQCFw8WAh8BaGQYBQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFioFI2N0bDAwJGJvZHkkcmVnaXN0cmF0aW9uRnJvbURhdGUkREREBSljdGwwMCRib2R5JHJlZ2lzdHJhdGlvbkZyb21EYXRlJERERCRDJEZOUAUvY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMCRjaGtfZG93bmxvYWQFMmN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDAkY2hrX2R1cERvd25sb2FkBS9jdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyJGNoa19kb3dubG9hZAUyY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMiRjaGtfZHVwRG93bmxvYWQFL2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDQkY2hrX2Rvd25sb2FkBTJjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmw0JGNoa19kdXBEb3dubG9hZAUvY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsNiRjaGtfZG93bmxvYWQFMmN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDYkY2hrX2R1cERvd25sb2FkBS9jdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmw4JGNoa19kb3dubG9hZAUyY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsOCRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDEwJGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMTAkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwxMiRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDEyJGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMTQkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwxNCRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDE2JGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMTYkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwxOCRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDE4JGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjAkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyMCRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDIyJGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjIkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyNCRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDI0JGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjYkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyNiRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDI4JGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjgkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzMCRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDMwJGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMzIkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzMiRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDM0JGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMzQkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzNiRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDM2JGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMzgkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzOCRjaGtfZHVwRG93bmxvYWQFImN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkcGFnZXIPFCsABGRkAhQCFGQFHGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQPPCsACgIHPCsAFAAIAhRkBRJjdGwwMCRib2R5JGx2RHVtbXkPPCsACgIHPCsAFAAIAokOZAUXY3RsMDAkYm9keSRsc3RWaWV3UGFnZXIPFCsABGRkAhQCiQ5k5ncgsvird%2ForYANBQc51zlZaMD8%3D&__VIEWSTATEGENERATOR=9247CB99&__SCROLLPOSITIONX=0&__SCROLLPOSITIONY=0&__EVENTVALIDATION=%2FwEWvQEC6trusQ8CjZP7qQcCirKr1wcC57unSQLc7siGCwLjr%2BnnCAL%2Bhv2iDQLeobTOAwL05ZRGAuD4jNgKAtmH3vkCAqjHjLwEAp7bqaEHArXeutYKAsu0pLQKAqqw9ucNAtf%2FuIwHAvXxiaAFAt%2BP1LMOAt%2BP1LMOArTK3YIKAs67%2Ft0PAtiLw4sKAtOUiYEJAuSNjtwEAsfag6MFArS8xKQLArON85gIAtig8ZAEAo%2FK3c4BAsSPl84KArm%2Bi20CoPDwrAUC9PqaiwsC1PrG2AMCp8ONugsCztj4hQ4CiKu6tAcCrZjwxgkCncWE%2BgkCrNa11wkCx5DiEgL%2F6qisCALlm%2FX0CgLVv5OZDgL27cWwAwKo3dmNBwKDzeOeDQL8sZOzAwKNssCLDgKa%2F8O%2BDQLqoveKDAKcmLK0CwLPpbLkDQKbi6uDCgK6pqCABwKExtGrDwLOhZWUBAL2s%2FicCAKc27jlDALcy8uGDQLT6NWnAQLezvGMBwLwkLqCDgKPvI6UDgKAjsfVAwLWqM3IDgLi1NyZDgKDv6T4BQLBpdLSCQL7wYnpCwK1i6OICQKE2sbcDQLXzcjwBwKky4LCBAKd%2FoDjBQKLkvHoBQKgjNnTDQKTkvbxDgLovefLAgLD7YKsCALdl%2Fn4BALRnbi1AwKPsaSuCgKx8ZXmAgL%2Bso8WAorAtOoJAtOgouIJAp%2FA77oBAvb2gJUKAq%2B%2FuoEFAtLw9OoPAoyfirUGAsr7spQPAvXd9JMNAoiSuvgHAq2I16oEAo%2FXl6MHAtbz%2FIIPArXNrZADAo3g2vEGAp%2BCvDwC3%2FCM%2FwMCwNDs%2BwUCvZ%2BikA8Cvu%2FShgMCqvLKmAkCxK73rgwC%2BeLV%2FAoCyL%2BTjgwCxtDFYwLD0PljAuGRnrQHAtjQuWACocy9xA8CqrT0ow0Cgtf5vwwCoMLE2gICtrj4awLV2OW9CwKMsrbACQLuhYiVDwL26NPDBgK04IKgBgK%2FmMvHBAKX%2B8bbBQK17vu%2BCwKjlMePCQLA9NrZAgKZnokkAsGY9dMJAuPE7KcPAsrIxrMMAvDgtbkLAu6x9pkGAsPY1aYMAtijjK8MAqTus8wJAqaGxYkCApn1kdkHAuTUt%2FsLAtrW7swOAtzNg%2FYKAtyx7eIIAqjPwIUPAoDA7cwNAtrkx5sPAoOkg4EEAsWC1a4OAqWiuKYBAtzbs8cOAqKiwOgDAr7am88CAqOiqDkCmNrDIQKgorCDAwLq1uupBAKpoti3CQKw3JP2CgL0yqitBgLhmowRAurasuoCApe3qugFAuCgyqUNAvXrz58MAtaw1OIJAquI7vYBAtyw%2BbgMApmqi%2FQOAvfKtNABAu6ZgJsFAu3avo0OAqS2nvIKAuOg1sgIAoLrw6kBAtmw4IUFAriH4oAHAt%2BwhdwHAqap%2F%2F0DAtvKsOcFAuGSxIYBAtHauqQCApev4t0GAseg0t8MAvXjh5UNAr2w3JwJAquApuwCAsOwgfMLApmiw%2BkP%2FsUivyF3HK8BFn7cJymq7DeUJFU%3D&ctl00%24body%24searchTermTxtBx=&ctl00%24body%24registryRdBtnLst=ALL&ctl00%24body%24interventionDescriptionTxtBx=&ctl00%24body%24interventionCodeOperatorDrpDwnLst=OR&ctl00%24body%24interventionCodeChckListBx=&ctl00%24body%24studyTypeDrpDwnLst=&ctl00%24body%24recruitmentStatusChckListBx=&ctl00%24body%24healthConditionTxtBx=&ctl00%24body%24conditionCategoryDrpDwnLst=Cancer&ctl00%24body%24conditionCodeDrpDwnLst=&ctl00%24body%24genderRdBtnLst=All&ctl00%24body%24ageGroupRdBtnLst=All&ctl00%24body%24healthyVolunteersRdBtnLst=All&ctl00_body_registrationFromDate_Raw=N&ctl00%24body%24registrationFromDate=&ctl00_body_registrationFromDate_DDDWS=0%3A0%3A-1%3A-10000%3A-10000%3A0%3A-10000%3A-10000%3A1&ctl00_body_registrationFromDate_DDD_C_FNPWS=0%3A0%3A-1%3A-10000%3A-10000%3A0%3A0px%3A-10000%3A1&ctl00%24body%24registrationFromDate%24DDD%24C=11%2F03%2F2017&ctl00_body_registrationToDate_Raw=N&ctl00%24body%24registrationToDate=&ctl00_body_trialStartFromDate_Raw=N&ctl00%24body%24trialStartFromDate=&ctl00_body_trialStartToDate_Raw=N&ctl00%24body%24trialStartToDate=&ctl00%24body%24recruitmentCountryOperatorDrpDwnLst=OR&ctl00_body_recruitmentCountriesChckListBxDeletedItems=&ctl00_body_recruitmentCountriesChckListBxInsertedItems=&ctl00_body_recruitmentCountriesChckListBxCustomCallback=&ctl00%24body%24recruitmentCountriesChckListBx=9%7CAustralia11%7CNew+Zealand&ctl00%24body%24txtBxPostcode=&ctl00%24body%24drpDwnLstDistance=&ctl00%24body%24primarySponsorTypeDrpDwnLst=&ctl00%24body%24fundingSourceDrpDwnLst=&ctl00%24body%24phaseDrpDwnLst=&ctl00%24body%24pnlSearch_CollapsiblePanelExtender_ClientState=true&ctl00%24body%24drpDwnLstDownload=Download+ALL+trials&ctl00%24body%24btnDownload=DOWNLOAD&DXScript=1_32%2C1_61%2C2_22%2C2_24%2C2_29%2C2_21%2C1_36%2C1_54%2C1_51%2C2_16'